{"version":3,"sources":["data/new/get sync /^/.//.*//metadata/.json$","components/Charts/Timeline/LineGraph.js","components/Charts/Timeline/LineFrame.js","components/Charts/Scatter/ScatterGraph.js","components/Charts/Scatter/ScatterFrame.js","components/Topic.js","components/Type.js","App.js","index.js","data/new/get sync /^/.//.*/.json$"],"names":["map","./water/metadata.json","./water_2/metadata.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","LineGraph","min","this","props","area","react_default","a","createElement","Fragment","style","height","width","nivo_line_esm","data","margin","top","right","bottom","left","xScale","type","max","yScale","stacked","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","title","curve","enableSlices","colors","pointSize","pointColor","enableArea","areaOpacity","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","useMesh","sliceTooltip","_ref","slice","background","padding","border","points","sort","b","hasOwnProperty","yStacked","y","point","Row","key","alignItems","backgroundColor","serieColor","Col","minWidth","maxWidth","serieId","textAlign","yFormatted","Component","LineFrame","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","options","category","selectedKeys","undefined","topicIndex","categoryItems","groups","filteredData","filteredColors","selectedChanged","changeInput","bind","assertThisInitialized","checkBox","set","setNormalizer","done1","done2","normchanged","varchanged","event","checked","target","name","setState","value","normalizerdata","normalizer","variable","_this2","require","i","ct","colorType","vItems","color","linear_colors","Math","floor","length","colorcode","ColorCheckbox","withStyles","root","Checkbox","assign","push","onChange","wordWrap","checkboxes","member","temp_years_index","years_index","t_entry","normalizedEntry","t_year","t_value","t_index","console","log","t_normalizer","x","LineGraph_LineGraph","overflowY","display","paddingLeft","marginBottom","react_switch_default","onColor","marginLeft","fontFamily","InputLabel","shrink","htmlFor","Select","input","Input","displayEmpty","MenuItem","whiteSpace","borderRadius","StyledSlider","mark","Slider","Scatter","dataGenerator","_useState","useState","_useState2","slicedToArray","current","setCurrent","useEffect","timer","setTimeout","clearTimeout","position","nivo_scatterplot_esm","zIndex","blendMode","titleX","titleY","tooltip","node","concat","formattedX","formattedY","fontWeight","Fab","onClick","size","aria-label","PlayArrow_default","Pause_default","aria-labelledby","step","newValue","marks","setY","setNormalizerY","done1Y","done2Y","normalizerdataY","normalizerY","dataY","variableY","year","t_normalized","t_normalizedY","Number","isNaN","ScatterGraph","TypeTabs","state","typeIndex","mul","handleChange","variables","variablesMenu","newV","obj","types","list","reload","graph","LineFrame_LineFrame","Type","ScatterFrame_LineFrame","graphIndex","w","dY","varTitle","h","mulw","flexGrow","FormControl","variant","marginTop","OutlinedInput","labelWidth","multiple","React","useRef","graphTypes","graphIcons","Timeline_default","Notes_default","ScatterPlot_default","Map_default","changeInnerTab","download","graphtabs","Tab","label","icon","htmlToImage","toBlob","document","getElementById","then","blob","window","saveAs","catch","error","alert","AppBar","Tabs","TabIndicatorProps","scrollButtons","indicatorColor","textColor","Topic_TypeTabs","Button","marginRight","CloudDownload_default","TopicTabs","tabs","topic","projects","toString","Type_Type","$","ajax","url","context","body","crossDomain","done","ReactDOM","render","App_TopicTabs","./water/Basin/1980-2017_livestock_head_total.json","./water/Basin/1980-2017_livestock_tot_wat_consume.json","./water_2/Basin/1980-2017_livestock_head_total.json","./water_2/Basin/1980-2017_livestock_tot_wat_consume.json"],"mappings":"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","file":"static/js/main.63e2f287.chunk.js","sourcesContent":["var map = {\n\t\"./water/metadata.json\": 209,\n\t\"./water_2/metadata.json\": 210\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 388;","import React,{Component} from 'react';\nimport { ResponsiveLine } from '@nivo/line';\nimport {Row,Col} from 'reactstrap';\n\nexport default class LineGraph extends Component {\n\n    render(){\n\n        // set if area shown\n        var min='auto';\n        if(this.props.area){min=0;}\n\n        return(\n            <>\n                <div >\n                    <div id=\"dp-graphdiv\" style={{height:\"600px\", width:\"100%\"}}>\n                        <ResponsiveLine\n                            data={this.props.data}\n                            margin={{ top: 50, right: 25, bottom: 50, left: 80 }}\n                            xScale={{ type: 'point', min: 'auto', max: 'auto' }}\n                            yScale={{ type: 'linear', stacked: this.props.stacked, min: min, max: 'auto' }}\n                            axisTop={null}\n                            axisRight={null}\n                            axisBottom={{\n                                orient: 'bottom',\n                                tickSize: 5,\n                                tickPadding: 5,\n                                tickRotation: -55,\n                                legend: 'year',\n                                legendOffset: 40,\n                                legendPosition: 'middle'\n                            }}\n                            axisLeft={{\n                                orient: 'left',\n                                tickSize: 4,\n                                tickPadding: 2,\n                                tickRotation: 0,\n                                legend: this.props.title,\n                                legendOffset: -70,\n                                legendPosition: 'middle'\n                            }}\n                            curve={this.props.curve}\n                            enableSlices=\"x\"\n                            colors={this.props.colors}\n                            pointSize={10}\n                            pointColor=\"#ffffff\"\n                            enableArea={this.props.area}\n                            areaOpacity={0.7}\n                            pointBorderWidth={2}\n                            pointBorderColor={{ from: 'serieColor' }}\n                            pointLabel=\"y\"\n                            pointLabelYOffset={-12}\n                            useMesh={true}\n                            sliceTooltip={({ slice }) => {\n                                // custom tooltip for stacked and not stacked\n                                return (\n                                <div\n                                    style={{\n                                    background: 'white',\n                                    padding: '9px 12px',\n                                    border: '1px solid #ccc',\n                                    }}\n                                >\n                                    {slice.points.sort((a,b)=>{\n                                        if(b.data.hasOwnProperty(\"yStacked\")){\n                                            return b.data.yStacked-a.data.yStacked;\n                                        }\n                                        return b.data.y-a.data.y;\n                                    }).map(point => (\n                                        <Row key={point.id} style={{margin:\"0\", alignItems:\"center\"}}>\n                                            {/* color mark box on the left */}\n                                            <div style={{\n                                                margin: \"10px\",\n                                                width: \"10px\", height:\"10px\", \n                                                backgroundColor:point.serieColor}}></div>\n\n                                            {/* line name */}\n                                            <Col style={{minWidth:\"300\",maxWidth:\"300\"}}>{point.serieId}</Col>\n\n                                            {/* point value */}\n                                            <Col style={{minWidth:\"30\",maxWidth:\"100\", textAlign:\"right\"}}>\n                                                <strong>{point.data.yFormatted}</strong>\n                                            </Col>\n                                        </Row>\n                                    ))}\n                                </div>)\n                            }}\n                        />\n                    </div>\n                </ div>\n            </>\n            );\n    }\n}","/*\n    Notes:\n    - Group and Category are the same thing\n\n*/\n\nimport React, {Component} from 'react';\nimport { Row} from 'reactstrap';\nimport LineGraph from './LineGraph.js'\nimport Switch from \"react-switch\";\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport linear_colors from '../../../data/Numerical.json';\nimport $ from 'jquery';\n\nconst maxInitalKeys   = 40;\n\nexport default class LineFrame extends Component {\n\n    constructor(props){\n        super(props);\n        this.options = {\n            category        : \"None\",\n            curve           : \"cardinal\",\n            stacked         : true,\n            selectedKeys    : {}\n        }\n\n        this.data               = undefined;\n        this.topicIndex         = -1;\n        this.type               = \"\";\n        this.category           = \"None\";\n        this.categoryItems      = [];\n\n        this.legend             = [];\n        this.colors             = {};\n        this.groups             = {};\n        this.filteredData       = [];\n        this.filteredColors     = [];\n        this.selectedChanged    = false;\n        // this.normalizedData     = {};\n\n        this.changeInput        = this.changeInput.bind(this);\n        this.checkBox           = this.checkBox.bind(this);\n        this.set                = this.set.bind(this);\n        this.setNormalizer      = this.setNormalizer.bind(this);\n        this.done1              = false;\n        this.done2              = false;\n        this.normchanged        = false;\n        this.varchanged         = false;\n    }\n\n\n    // ============================ Input Handlers ========================== //\n    checkBox(event, checked){\n        this.options.selectedKeys[event.target.name] = checked;\n        this.selectedChanged = true;\n        this.setState({});\n    }\n\n    changeInput(event){\n        if(event===\"stacked\"){\n            this.options.stacked = !this.options.stacked;\n        }else{\n            if( event.target.name===\"normalizer\" && \n                this.options[event.target.name] !== event.target.value){\n                this.selectedChanged = true;\n            }\n            this.options[event.target.name] = event.target.value;\n        }\n        this.setState({});\n    }\n    // ====================================================================== //\n\n    setNormalizer(data){\n        this.normalizerdata = data;\n        this.done2 = true;\n\n        this.normalizer     = this.props.normalizer;\n        this.normchanged    = true;\n\n        this.setState({});\n    }\n\n    set(data){\n         \n        this.data = data;\n        this.done1 = true;\n\n        this.variable       = this.props.variable;\n        this.varchanged     = true;\n\n        this.setState({});\n    }\n\n    \n    render(){\n        if(this.variable !== this.props.variable){\n            this.done1 = false;\n            // $.ajax({\n            //     url: \"http://54.219.61.146:5000/new/get/\"+this.props.topicIndex,\n            //     context: document.body,\n            //     crossDomain: true\n            // }).done(this.set);\n            this.set(require(\n                \"../../../data/new/get/\" + this.props.topicIndex+\n                \"/\" + this.props.type +\n                \"/\"+ this.props.variable +\n                \".json\"));\n\n        }\n        \n        if(this.normalizer !== this.props.normalizer){\n            this.done2 = false;\n            if(this.props.normalizer!=\"None\"){\n                // $.ajax({\n                //     url: \"http://54.219.61.146:5000/new/get/\"+this.props.topicIndex,\n                //     context: document.body,\n                //     crossDomain: true\n                // }).done(this.set);\n                this.setNormalizer(require(\n                    \"../../../data/new/get/\" + this.props.topicIndex+\n                    \"/\" + this.props.type +\n                    \"/\"+ this.props.normalizer +\n                    \".json\"));\n            }else{\n                this.setNormalizer(\"None\");\n            }\n        }\n\n        if(this.done1 && this.done2){\n\n            // ============================ General ========================== //\n            var i = 0;      // array index\n            var ct = 0;     // counter\n            var key = \"\";   // object key\n\n            // ============================= Init ============================= //\n            var stacked         = this.options[\"stacked\"];\n            var curve           = this.options[\"curve\"];\n            var category        = this.options[\"category\"];\n            var type            = this.props.type;\n            var colorType       = this.props.colorType;\n\n            /*\n            // ------------------- Group Menu ------------------- //\n            this.categoryItems = [];\n            for(key in groupingdata){\n                this.categoryItems.push(\n                    <MenuItem key={key} value={key}>{key}</MenuItem>\n                );\n            }*/\n\n            // =========================== Reload Type =========================== //\n            if(this.type !== type){\n                this.groups = {};\n                if(colorType === \"Numerical\"){\n                    var vItems = Object.keys(this.data);\n\n                    this.groups[\"None\"] = {};\n                    for(i in vItems){\n                        this.groups[\"None\"][vItems[i]] = {\n                            \"color\": linear_colors[\"cool\"][Math.floor(i/vItems.length*1000)]\n                        };\n                    }\n                }\n\n                // ------------------ Selected Keys ------------------ //\n                this.options[\"selectedKeys\"] = {};\n                ct = 0;\n                for(key in this.data){\n                    this.options[\"selectedKeys\"][key] = ((ct++ % maxInitalKeys === 0) && ct!==1);\n                }\n\n                this.options[\"category\"] = \"None\";\n                var category = this.options[\"category\"];\n            }\n\n            // =========================== Reload Category =========================== //\n            if(this.category !== category || this.type!== type || this.selectedChanged){\n                // --------------------- Legend --------------------- //\n                this.legend     = [];\n                this.colors     = {};\n                var colorcode   = this.groups[category];\n\n                for(key in colorcode){\n                    var color = colorcode[key][\"color\"];\n                    var ColorCheckbox = withStyles({\n                            root: {\n                                color: color\n                            }\n                        })(props => <Checkbox color=\"default\" {...props} />);\n\n                    // No Grouping\n                    if(colorcode[key][\"members\"]===undefined){\n                        this.colors[key] = color;\n                        this.legend.push(\n                            <Row key={key} style={{margin:\"0\", alignItems:\"center\"}}>\n                                <ColorCheckbox\n                                    name={key}\n                                    checked={this.options.selectedKeys[key]}\n                                    onChange={this.checkBox}\n                                    value=\"checkedG\"\n                                />\n                                <div style={{maxWidth:\"80px\",wordWrap: \"break-word\"}}>{key}</div>\n                            </Row>\n                        )\n                    }\n                    // Has Grouping\n                    else{\n                        // Add all members of the group\n                        var checkboxes = [];\n                        for(var member in colorcode[key][\"members\"]){\n                            this.colors[colorcode[key][\"members\"][member]] = color;\n                            checkboxes.push(\n                                <Row key={colorcode[key][\"members\"][member]} style={{margin:\"0\", alignItems:\"center\"}}>\n                                    <ColorCheckbox\n                                        name={colorcode[key][\"members\"][member]}\n                                        checked={this.options.selectedKeys[colorcode[key][\"members\"][member]]}\n                                        onChange={this.checkBox}\n                                        value=\"checkedG\"\n                                    />\n                                    <div style={{width:\"80px\",wordWrap: \"break-word\"}}>\n                                        {colorcode[key][\"members\"][member]}\n                                    </div>\n                                </Row>\n                            )\n                        }\n            \n                        this.legend.push(\n                            <Row key={key} style={{margin:\"0\", alignItems:\"center\"}}>\n                                <div style={{wordWrap: \"break-word\",width:\"100%\"}}>{key}</div>\n                                {checkboxes}\n                            </Row>\n                        );\n                    }\n                }\n                this.selectedChanged = true;\n            }\n\n            // =========================== Reload Selected =========================== //\n            if(this.selectedChanged || this.normchanged || this.varchanged){ \n                this.filteredData       = [];\n                this.filteredColors     = [];\n                \n                var temp_years_index    = Object.keys(this.data[Object.keys(this.data)[0]]);\n                var years_index         = {};\n                for(i in temp_years_index){\n                    years_index[temp_years_index[i]] = i;\n                }\n\n                // filter\n                for(key in this.options.selectedKeys){\n                    if(this.options.selectedKeys[key]){\n                        var t_entry = this.data[key];\n                        var normalizedEntry = {data:[],id:key};\n\n                        // normalize data\n                        for(var t_year in t_entry){\n\n                            var t_value         = t_entry[t_year];\n                            var t_index         = years_index[t_year];\n                            if(this.normalizer !== \"None\"){\n                                console.log(this.normalizerdata);\n                                var t_normalizer    = this.normalizerdata[key][t_year];\n                                if(t_normalizer!==undefined && t_normalizer!==0 && t_normalizer!==0.0){\n                                    normalizedEntry[\"data\"][t_index] = {\n                                        \"x\": t_year,\n                                        \"y\": t_value / t_normalizer\n                                    };\n                                }else{\n                                    normalizedEntry[\"data\"][t_index] = {\n                                        \"x\": t_year,\n                                        \"y\": null\n                                    };\n                                }\n                            }else{\n                                normalizedEntry[\"data\"][t_index] = {\n                                    \"x\": t_year,\n                                    \"y\": t_value\n                                };\n                            }\n\n\n                        }\n\n                        this.filteredData.push(normalizedEntry);\n                        this.filteredColors.push(this.colors[key]);\n                    }\n                }\n            }\n\n            this.category           = category;\n            this.selectedChanged    = false;\n            this.normchanged        = false;\n            this.varchanged         = false;\n            this.type               = type;\n            var title               = this.variable + \" / \"+ this.normalizer;\n            if(this.normalizer==\"None\") title = this.variable\n\n            return (\n                    <div>\n                        <Row style={{width:\"100%\", margin:\"0\", padding:\"0\"}}>\n\n                            {/* // =========================== Graph =========================== // */}\n                            <div style={{height:\"600px\", width:\"77%\"}}>\n                                {<LineGraph\n                                            data    = {this.filteredData} \n                                            stacked = {stacked} \n                                            area    = {stacked}\n                                            curve   = {curve}\n                                            title   = {title}\n                                            colors  = {this.filteredColors}/>}\n                            </div>\n                    \n                            {/* // =========================== Options =========================== // */}\n                            <div style={{height:\"600px\", width:\"23%\", padding:'2%', overflowY: \"scroll\"}}>\n\n                                {/* // --------------------------- Stacked --------------------------- // */}\n                                <Row style={{display:'flex',paddingLeft:\"10%\", marginBottom: \"5%\"}}>\n                                    <Switch onColor     = \"#222429\" \n                                            onChange    = {() => {this.changeInput(\"stacked\")}} \n                                            checked     = {stacked}\n                                            value       = {stacked} />\n                                    <div style={{marginLeft:\"4%\", fontFamily:\"Verdana\"}}>Stacked</div>\n                                </Row>\n                                <br />\n\n                                {/* // --------------------------- Curve --------------------------- // */}\n                                <div>\n                                    <InputLabel shrink htmlFor=\"curve-label-placeholder\">\n                                    Curve Type\n                                    </InputLabel>\n                                    <Select\n                                        style       = {{width:\"100%\"}}\n                                        value       = {curve}\n                                        onChange    = {this.changeInput}\n                                        input       = {<Input name=\"curve\" id=\"curve-label-placeholder\" />}\n                                        name        = \"curve\"\n                                        displayEmpty\n                                    >\n                                        <MenuItem value={'cardinal'}>Curved</MenuItem>\n                                        <MenuItem value={'linear'}  >Linear</MenuItem>\n                                    </Select>\n                                </div>\n                                <br/>\n\n                                {/* // --------------------------- Categorize --------------------------- // */}\n                                <div>\n                                    <InputLabel shrink htmlFor=\"categorize-label-placeholder\">\n                                    Categorize\n                                    </InputLabel>\n                                    <Select\n                                        style       = {{width:\"100%\"}}\n                                        value       = {category}\n                                        onChange    = {this.changeInput}\n                                        input       = {<Input name=\"categorize\" id=\"categorize-label-placeholder\" />}\n                                        name        = \"category\"\n                                        displayEmpty\n                                    >\n                                        {this.categoryItems}\n                                    </Select>\n                                </div>\n                                <br />\n\n                                {/* // --------------------------- Legend --------------------------- // */}\n                                <div>\n                                    <div style={{\n                                                display         : \"inline-table\",\n                                                width           : \"100%\",\n                                                minWidth        : \"100%\",\n                                                whiteSpace      : \"nowrap\",\n                                                borderRadius    : \"2px\",\n                                                fontFamily      : \"Georgia\"\n                                            }}>\n                                        {this.legend}\n                                    </div>\n                                </div>\n                            </div>\n                    </Row>\n                </div>\n            );\n        }\n        return null;\n    }\n}","import React, { useState, useEffect } from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { ResponsiveScatterPlot } from '@nivo/scatterplot'\nimport {Row} from 'reactstrap';\nimport PlayIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport Fab from '@material-ui/core/Fab';\nimport { withStyles } from '@material-ui/core/styles';\n\n// styling slider to make mark bigger\nconst styles = {\n    mark :{\n        width:\"2px\",\n        height:\"5px\",\n        backgroundColor:\"blue\"\n    }\n}\nconst StyledSlider = withStyles(styles)(Slider);\n\nconst Scatter = (props) => {\n\n    const dataGenerator = props.dataGenerator;\n    const [current, setCurrent] = useState([0,0]);\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if(current[1]){\n                setCurrent([(current[0] + 1)%dataGenerator.length,current[1]]);\n            }\n        }, 1400);\n        return () => clearTimeout(timer);\n    }, [current, setCurrent]);\n\n    if(current[0] >= props.dataGenerator.length){\n        current[0] = props.dataGenerator.length-1;\n    }\n\n    return (\n        <>\n        \n            <div style={{width:'100%',height:\"500px\"}} id=\"dp-graphdiv\" position=\"relative\">\n        \n                \n\n                <ResponsiveScatterPlot\n                    style={{zIndex: 1}}\n                    data={dataGenerator[current[0]][1]}\n                    useMesh={false}\n                    margin={{ top: 60, right: 60, bottom: 70, left: 90 }}\n                    xScale={{ type: 'linear', min: 'auto', max: 'auto' }}\n                    // xFormat={function(e){return e+\" kg\"}}\n                    yScale={{ type: 'linear', min: 'auto', max: 'auto' }}\n                    // yFormat={function(e){return e+\" cm\"}}\n                    colors={props.colors[current[0]]}\n                    blendMode=\"multiply\"\n                    axisTop={null}\n                    axisRight={null}\n                    axisBottom={{\n                        orient: 'bottom',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: -25,\n                        legend: props.titleX,\n                        legendPosition: 'middle',\n                        legendOffset: 60\n                    }}\n                    axisLeft={{\n                        orient: 'left',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: props.titleY,\n                        legendPosition: 'middle',\n                        legendOffset: -60\n                    }}\n                    tooltip={({ node }) => {\n                        return(\n                        <div\n                          style={{\n                            color: node.style.color,\n                            background: 'white',\n                            border: '2px solid #333',\n                            borderRadius: \"5px\",\n                            padding: '12px 16px',\n                          }}\n                        >\n                          <strong>\n                            {node.data.serieId}\n                          </strong>\n                          <br />\n                          {`${props.titleX}: ${node.data.formattedX}`}\n                          <br />\n                          {`${props.titleY}: ${node.data.formattedY}`}\n                        </div>\n                      )}}\n                />\n            </div>\n\n            {/* ----------------------------------- Year ----------------------------------- */}\n            <h2 style={{ \n                    // position:\"absolute\",\n                    // top: this.parent().offet(),\n                    zIndex: 0,\n                    marginLeft: 60, \n                    fontWeight: 400, \n                    color: '#555', \n                    textAlign:\"center\" }}>\n                    <strong style={{ color: 'black', fontWeight: 900 }}>{dataGenerator[current[0]][0]}</strong>\n                </h2>\n\n            {/* --------------------------  Player and Progress Bar-------------------------- */}\n            <Row style={{margin:0, padding:0, alignItems:\"center\"}}>\n                <Fab onClick={()=>{setCurrent([(current[0] - current[1]+1)%dataGenerator.length,1-current[1]])}}\n                    size=\"medium\" aria-label=\"Add\" style={{marginLeft:50}}>\n                    {[<PlayIcon />,<PauseIcon />][current[1]]}\n                </Fab>\n                \n                <StyledSlider value={current[0]}\n                        style={{width:550, marginLeft:30}}\n                        aria-labelledby=\"discrete-slider\"\n                        step={1}\n                        onChange={(event, newValue)=>{setCurrent([newValue,current[1]])}}\n                        marks\n                        min={0}\n                        max={dataGenerator.length-1}/>\n            </Row>\n        </>\n    );\n};\n\nexport default Scatter;","/*\n    Notes:\n    - Group and Category are the same thing\n\n*/\n\nimport React, {Component} from 'react';\nimport { Row} from 'reactstrap';\nimport ScatterGraph from './ScatterGraph.js'\nimport Switch from \"react-switch\";\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport linear_colors from '../../../data/Numerical.json';\nimport $ from 'jquery';\n\nconst maxInitalKeys   = 1;\n\nexport default class LineFrame extends Component {\n\n    constructor(props){\n        super(props);\n        this.options = {\n            category        : \"None\",\n            curve           : \"cardinal\",\n            stacked         : true,\n            selectedKeys    : {}\n        }\n\n        this.data               = undefined;\n        this.topicIndex         = -1;\n        this.type               = \"\";\n        this.category           = \"None\";\n        this.categoryItems      = [];\n\n        this.legend             = [];\n        this.colors             = {};\n        this.groups             = {};\n        this.filteredData       = [];\n        this.filteredColors     = [];\n        this.selectedChanged    = false;\n        // this.normalizedData     = {};\n\n        this.changeInput        = this.changeInput.bind(this);\n        this.checkBox           = this.checkBox.bind(this);\n        this.set                = this.set.bind(this);\n        this.setY               = this.setY.bind(this);\n        this.setNormalizer      = this.setNormalizer.bind(this);\n        this.setNormalizerY     = this.setNormalizerY.bind(this);\n        this.done1              = false;\n        this.done2              = false;\n        this.done1Y             = false;\n        this.done2Y             = false;\n        this.normchanged        = false;\n        this.varchanged         = false;\n    }\n\n\n    // ============================ Input Handlers ========================== //\n    checkBox(event, checked){\n        this.options.selectedKeys[event.target.name] = checked;\n        this.selectedChanged = true;\n        this.setState({});\n    }\n\n    changeInput(event){\n        if(event===\"stacked\"){\n            this.options.stacked = !this.options.stacked;\n        }else{\n            if( event.target.name===\"normalizer\" && \n                this.options[event.target.name] !== event.target.value){\n                this.selectedChanged = true;\n            }\n            this.options[event.target.name] = event.target.value;\n        }\n        this.setState({});\n    }\n    // ====================================================================== //\n\n    setNormalizerY(data){\n        this.normalizerdataY = data;\n        this.done2Y = true;\n\n        this.normalizerY     = this.props.normalizerY;\n        this.normchanged    = true;\n\n        this.setState({});\n    }\n\n    setNormalizer(data){\n        this.normalizerdata = data;\n        this.done2 = true;\n\n        this.normalizer     = this.props.normalizer;\n        this.normchanged    = true;\n\n        this.setState({});\n    }\n\n    setY(data){\n         \n        this.dataY = data;\n        this.done1Y = true;\n\n        this.variableY       = this.props.variableY;\n        this.varchanged      = true;\n\n        this.setState({});\n    }\n\n    set(data){\n         \n        this.data = data;\n        this.done1 = true;\n\n        this.variable       = this.props.variable;\n        this.varchanged     = true;\n\n        this.setState({});\n    }\n\n    \n    render(){\n        if(this.variable !== this.props.variable){\n            this.done1 = false;\n            // $.ajax({\n            //     url: \"http://54.219.61.146:5000/new/get/\"+this.props.topicIndex,\n            //     context: document.body,\n            //     crossDomain: true\n            // }).done(this.set);\n            this.set(require(\n                \"../../../data/new/get/\" + this.props.topicIndex+\n                \"/\" + this.props.type +\n                \"/\"+ this.props.variable +\n                \".json\"));\n\n        }\n\n        if(this.variableY !== this.props.variableY){\n            this.done1Y = false;\n            // $.ajax({\n            //     url: \"http://54.219.61.146:5000/new/get/\"+this.props.topicIndex,\n            //     context: document.body,\n            //     crossDomain: true\n            // }).done(this.set);\n            this.setY(require(\n                \"../../../data/new/get/\" + this.props.topicIndex+\n                \"/\" + this.props.type +\n                \"/\"+ this.props.variableY +\n                \".json\"));\n\n        }\n        \n        if(this.normalizer !== this.props.normalizer){\n            this.done2 = false;\n            if(this.props.normalizer!=\"None\"){\n                // $.ajax({\n                //     url: \"http://54.219.61.146:5000/new/get/\"+this.props.topicIndex,\n                //     context: document.body,\n                //     crossDomain: true\n                // }).done(this.set);\n                this.setNormalizer(require(\n                    \"../../../data/new/get/\" + this.props.topicIndex+\n                    \"/\" + this.props.type +\n                    \"/\"+ this.props.normalizer +\n                    \".json\"));\n            }else{\n                this.setNormalizer(\"None\");\n            }\n        }\n\n        if(this.normalizerY !== this.props.normalizerY){\n            this.done2Y = false;\n            if(this.props.normalizerY!=\"None\"){\n                // $.ajax({\n                //     url: \"http://54.219.61.146:5000/new/get/\"+this.props.topicIndex,\n                //     context: document.body,\n                //     crossDomain: true\n                // }).done(this.set);\n                this.setNormalizerY(require(\n                    \"../../../data/new/get/\" + this.props.topicIndex+\n                    \"/\" + this.props.type +\n                    \"/\"+ this.props.normalizerY +\n                    \".json\"));\n            }else{\n                this.setNormalizerY(\"None\");\n            }\n        }\n\n        if(this.done1 && this.done2 && this.done1Y && this.done2Y){\n\n            console.log(\"re\");\n\n            // ============================ General ========================== //\n            var i = 0;      // array index\n            var ct = 0;     // counter\n            var key = \"\";   // object key\n\n            // ============================= Init ============================= //\n            var stacked         = this.options[\"stacked\"];\n            var curve           = this.options[\"curve\"];\n            var category        = this.options[\"category\"];\n            var type            = this.props.type;\n            var colorType       = this.props.colorType;\n\n            /*\n            // ------------------- Group Menu ------------------- //\n            this.categoryItems = [];\n            for(key in groupingdata){\n                this.categoryItems.push(\n                    <MenuItem key={key} value={key}>{key}</MenuItem>\n                );\n            }*/\n\n            // =========================== Reload Type =========================== //\n            if(this.type !== type){\n                this.groups = {};\n                if(colorType === \"Numerical\"){\n                    var vItems = Object.keys(this.data);\n\n                    this.groups[\"None\"] = {};\n                    for(i in vItems){\n                        this.groups[\"None\"][vItems[i]] = {\n                            \"color\": linear_colors[\"cool\"][Math.floor(i/vItems.length*1000)]\n                        };\n                    }\n                }\n\n                // ------------------ Selected Keys ------------------ //\n                this.options[\"selectedKeys\"] = {};\n                ct = 0;\n                for(key in this.data){\n                    this.options[\"selectedKeys\"][key] = ((ct++ % maxInitalKeys === 0) && ct!==1);\n                }\n\n                this.options[\"category\"] = \"None\";\n                var category = this.options[\"category\"];\n            }\n\n            // =========================== Reload Category =========================== //\n            if(this.category !== category || this.type!== type || this.selectedChanged){\n                // --------------------- Legend --------------------- //\n                this.legend     = [];\n                this.colors     = {};\n                var colorcode   = this.groups[category];\n\n                for(key in colorcode){\n                    var color = colorcode[key][\"color\"];\n                    var ColorCheckbox = withStyles({\n                            root: {\n                                color: color\n                            }\n                        })(props => <Checkbox color=\"default\" {...props} />);\n\n                    // No Grouping\n                    if(colorcode[key][\"members\"]===undefined){\n                        this.colors[key] = color;\n                        this.legend.push(\n                            <Row key={key} style={{margin:\"0\", alignItems:\"center\"}}>\n                                <ColorCheckbox\n                                    name={key}\n                                    checked={this.options.selectedKeys[key]}\n                                    onChange={this.checkBox}\n                                    value=\"checkedG\"\n                                />\n                                <div style={{maxWidth:\"80px\",wordWrap: \"break-word\"}}>{key}</div>\n                            </Row>\n                        )\n                    }\n                    // Has Grouping\n                    else{\n                        // Add all members of the group\n                        var checkboxes = [];\n                        for(var member in colorcode[key][\"members\"]){\n                            this.colors[colorcode[key][\"members\"][member]] = color;\n                            checkboxes.push(\n                                <Row key={colorcode[key][\"members\"][member]} style={{margin:\"0\", alignItems:\"center\"}}>\n                                    <ColorCheckbox\n                                        name={colorcode[key][\"members\"][member]}\n                                        checked={this.options.selectedKeys[colorcode[key][\"members\"][member]]}\n                                        onChange={this.checkBox}\n                                        value=\"checkedG\"\n                                    />\n                                    <div style={{width:\"80px\",wordWrap: \"break-word\"}}>\n                                        {colorcode[key][\"members\"][member]}\n                                    </div>\n                                </Row>\n                            )\n                        }\n            \n                        this.legend.push(\n                            <Row key={key} style={{margin:\"0\", alignItems:\"center\"}}>\n                                <div style={{wordWrap: \"break-word\",width:\"100%\"}}>{key}</div>\n                                {checkboxes}\n                            </Row>\n                        );\n                    }\n                }\n                this.selectedChanged = true;\n            }\n\n            // =========================== Reload Selected =========================== //\n            if(this.selectedChanged || this.normchanged || this.varchanged){ \n                this.filteredData   = [];\n                this.filteredColors = [];\n                var temp_years_index    = Object.keys(this.data[Object.keys(this.data)[0]]);\n                var years_index         = {};\n                for(i in temp_years_index){\n                    var year = temp_years_index[i];\n                    years_index[year] = i;\n                    this.filteredData[i] = [year,[]]; \n                    this.filteredColors.push([]);\n                }\n\n                // filter\n                for(key in this.options.selectedKeys){\n                    if(this.options.selectedKeys[key]){\n\n                        // normalize data\n                        for(var t_year in years_index){\n\n                            var normalizedEntry = {data:[],id:key};\n                            var t_index         = years_index[t_year];\n                            var t_normalized   = this.data[key][t_year];\n                            var t_normalizedY    = this.dataY[key][t_year];\n\n                            if(this.normalizer !== \"None\"){\n                                t_normalized /= this.normalizerdata[key][t_year];\n                                \n                            }\n\n                            if(this.normalizerY !== \"None\"){\n                                t_normalizedY /= this.normalizerdataY[key][t_year];\n                            }\n\n                            if(!Number.isNaN(t_normalized) && !Number.isNaN(t_normalizedY)\n                                && t_normalized!==null && t_normalizedY!==null\n                                && t_normalized!==undefined && t_normalizedY!==undefined){\n                                normalizedEntry[\"data\"].push( {\n                                    \"x\": t_normalized,\n                                    \"y\": t_normalizedY\n                                });\n\n                                \n\n                                this.filteredData[t_index][1].push(normalizedEntry);\n                                this.filteredColors[t_index].push(this.colors[key]);\n                            }\n                        }\n                    }\n                }\n            }\n\n            this.category           = category;\n            this.selectedChanged    = false;\n            this.normchanged        = false;\n            this.varchanged         = false;\n            this.type               = type;\n            var title               = this.variable + \" / \"+ this.normalizer;\n            if(this.normalizer==\"None\") title = this.variable\n            var titleY              = this.variableY + \" / \"+ this.normalizerY;\n            if(this.normalizerY==\"None\") titleY = this.variableY\n\n            return (\n                    <div>\n                        <Row style={{width:\"100%\", margin:\"0\", padding:\"0\"}}>\n\n                            {/* // =========================== Graph =========================== // */}\n                            <div style={{height:\"600px\", width:\"77%\"}}>\n                                {<ScatterGraph\n                                        titleX={title}\n                                        titleY={titleY}\n                                        dataGenerator={this.filteredData}\n                                        colors={this.filteredColors}\n                                    />}\n                            </div>\n                    \n                            {/* // =========================== Options =========================== // */}\n                            <div style={{height:\"600px\", width:\"23%\", padding:'2%', overflowY: \"scroll\"}}>\n\n                                {/* // --------------------------- Categorize --------------------------- // */}\n                                <div>\n                                    <InputLabel shrink htmlFor=\"categorize-label-placeholder\">\n                                    Categorize\n                                    </InputLabel>\n                                    <Select\n                                        style       = {{width:\"100%\"}}\n                                        value       = {category}\n                                        onChange    = {this.changeInput}\n                                        input       = {<Input name=\"categorize\" id=\"categorize-label-placeholder\" />}\n                                        name        = \"category\"\n                                        displayEmpty\n                                    >\n                                        {this.categoryItems}\n                                    </Select>\n                                </div>\n                                <br />\n\n                                {/* // --------------------------- Legend --------------------------- // */}\n                                <div>\n                                    <div style={{\n                                                display         : \"inline-table\",\n                                                width           : \"100%\",\n                                                minWidth        : \"100%\",\n                                                whiteSpace      : \"nowrap\",\n                                                borderRadius    : \"2px\",\n                                                fontFamily      : \"Georgia\"\n                                            }}>\n                                        {this.legend}\n                                    </div>\n                                </div>\n                            </div>\n                    </Row>\n                </div>\n            );\n        }\n        return null;\n    }\n}","import React, {Component} from 'react';\nimport LineFrame from './Charts/Timeline/LineFrame.js'\n// import BarFrame from '../Bar/BarFrame.js'\nimport ScatterFrame from './Charts/Scatter/ScatterFrame.js'\nimport {Row} from 'reactstrap';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport $ from 'jquery';\n\nexport default class TypeTabs extends Component {\n\n    constructor(props){\n        super(props);\n        this.data = {};\n        this.set = this.set.bind(this);\n        this.state = {\n            typeIndex: \"\",\n            variable:\"\",\n            variableY:\"\",\n            mul:[],\n            color:\"jet\",\n            normalizer:\"None\",\n            normalizerY:\"None\"};\n        this.handleChange = this.handleChange.bind(this);\n        this.keys = [];\n        this.type = null;\n        this.variables = [];\n        this.variablesMenu = [];\n    }\n\n    handleChange(event) {\n        var newV = event.target.value;\n        var name = event.target.name;\n        if(name === \"typeIndex\"){\n            this.variables = this.data[newV].variables;\n            var i = 0;\n            if(this.variables.length>1) i=1;\n            this.setState({\n                typeIndex: newV,\n                variable:this.variables[0],\n                variableY:this.variables[i],\n                mul:[this.variables[0]],\n                color:\"jet\",\n                normalizer:\"None\",\n                normalizerY:\"None\"});\n        } else {\n            var obj = {};\n            obj[name] = newV;\n            this.setState(obj);\n        }\n    }\n\n    set(types){\n        this.data = types;\n        this.keys  = Object.keys(types);\n        this.handleChange({target:{name:\"typeIndex\",value:this.keys[0]}});\n    }\n\n    reload(){\n        // $.ajax({\n        //     url: \"http://54.219.61.146:5000/new/list\",\n        //     context: document.body,\n        //     crossDomain: true\n        // }).done(this.set);\n        this.topicIndex = this.props.topicIndex;\n        this.set(require(\"../data/new/get/\"+this.props.topicIndex+\"/metadata.json\").list);\n    }\n\n\n    render(){\n        if(this.topicIndex !== this.props.topicIndex){\n            this.reload();\n            return null;\n        }\n        else{\n            this.graph = [\n                <LineFrame \n                    topicIndex={this.props.topicIndex} \n                    variable={this.state.variable} \n                    normalizer={this.state.normalizer} \n                    type={this.state.typeIndex}\n                    colorType={this.data[this.state.typeIndex].Type}\n                    />,null,\n                // <BarFrame topicIndex={this.props.topicIndex}/>,\n                <ScatterFrame \n                    topicIndex={this.props.topicIndex} \n                    variable={this.state.variable} \n                    variableY={this.state.variableY} \n                    normalizer={this.state.normalizer} \n                    normalizerY={this.state.normalizerY} \n                    type={this.state.typeIndex}\n                    colorType={this.data[this.state.typeIndex].Type} />,\n                // <LineFrame topicIndex={this.props.topicIndex}/>,\n                null,null,null,null\n            ][this.props.graphIndex];\n\n            var w = \"50%\";\n            var dY = \"none\";\n            var varTitle = \"Variable\";\n            var x = \"variable\";\n            var mul = false;\n            var h = \"40px\";\n            var mulw = 60;\n            if(this.props.graphIndex === 2){\n                w = \"33%\";\n                mulw = 80;\n                dY = \"initial\";\n                varTitle = \"Variable X\";\n            }else if(this.props.graphIndex === 1){\n                varTitle = \"Variables (select multiple)\";\n                mulw = 190;\n                x = \"mul\";\n                mul = true;\n            }\n\n            return (\n                <div style={{\n                    flexGrow: 1,\n                    width: '100%',\n                    backgroundColor: \"white\",\n                }}>\n                    <Row style={{padding:\"0\",margin:\"0\",width:\"100%\",alignItems:\"center\"}}>\n                        {/* // --------------------------- Type & Color --------------------------- // */}\n                        <div style={{width:w, padding:\"10px\"}}>\n                            <FormControl variant=\"outlined\" style={{width:\"100%\",marginTop:\"10px\"}}>\n                                <InputLabel shrink htmlFor=\"typeIndex-label-placeholder\">\n                                Points\n                                </InputLabel>\n                                <Select\n                                    style       = {{width:\"100%\",height:h}}\n                                    value       = {this.state.typeIndex}\n                                    onChange    = {this.handleChange}\n                                    input       = {<OutlinedInput\n                                                    name=\"typeIndex\" \n                                                    labelWidth={45}\n                                                    id=\"typeIndex-label-placeholder\" />}\n                                    name        = \"typeIndex\"\n                                    displayEmpty\n                                >\n                                    {this.keys.map(key => (\n                                        <MenuItem key={key} value={key}>\n                                            {key}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                            <FormControl variant=\"outlined\" style={{width:\"100%\",marginTop:\"10px\"}}>\n                                <InputLabel shrink htmlFor=\"color-label-placeholder\">\n                                Color Map\n                                </InputLabel>\n                                <Select\n                                    style       = {{width:\"100%\",height:h}}\n                                    value       = {this.state.color}\n                                    onChange    = {this.handleChange}\n                                    input       = {<OutlinedInput\n                                                    name=\"color\" \n                                                    labelWidth={80}\n                                                    id=\"color-label-placeholder\" />}\n                                    name        = \"color\"\n                                    displayEmpty\n                                >\n                                    {[\"jet\",\"cool\",\"hot\"].map(key => (\n                                        <MenuItem key={key} value={key}>\n                                            {key}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        {/* // --------------------------- Variable --------------------------- // */}\n                        <div style={{width:w, padding:\"10px\"}}>\n                            <FormControl variant=\"outlined\" style={{width:\"100%\",marginTop:\"10px\"}}>\n                                <InputLabel shrink htmlFor=\"variable-label-placeholder\">\n                                {varTitle}\n                                </InputLabel>\n                                <Select\n                                    multiple    = {mul}\n                                    style       = {{width:\"100%\",height:h}}\n                                    value       = {this.state[x]}\n                                    onChange    = {this.handleChange}\n                                    input       = {<OutlinedInput\n                                                    name={x}\n                                                    labelWidth={mulw}\n                                                    id=\"variable-label-placeholder\" />}\n                                    name        = {x}\n                                    displayEmpty\n                                >\n                                    {this.variables.map(key => (\n                                        <MenuItem key={key} value={key}>\n                                            {key}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                {React.useRef}\n                            </FormControl>\n                            <FormControl variant=\"outlined\" style={{width:\"100%\",marginTop:\"10px\"}}>\n                                <InputLabel shrink htmlFor=\"normalizer-label-placeholder\">\n                                Normalizer\n                                </InputLabel>\n                                <Select\n                                    style       = {{width:\"100%\",height:h}}\n                                    value       = {this.state.normalizer}\n                                    onChange    = {this.handleChange}\n                                    input       = {<OutlinedInput\n                                                    name=\"normalizer\" \n                                                    labelWidth={82}\n                                                    id=\"normalizer-label-placeholder\" />}\n                                    name        = \"normalizer\"\n                                >\n                                    <MenuItem key={\"None\"} value={\"None\"}> \n                                        None\n                                    </MenuItem>\n                                    {this.variables.map(key => (\n                                        <MenuItem key={key} value={key}>\n                                            {key}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        {/* // --------------------------- Variable Y (Scatter) --------------------------- // */}\n                        <div style={{width:w, padding:\"10px\",display:dY}}>\n                            <FormControl variant=\"outlined\" style={{width:\"100%\",marginTop:\"10px\"}}>\n                                <InputLabel shrink htmlFor=\"variableY-label-placeholder\">\n                                Variable Y\n                                </InputLabel>\n                                <Select\n                                    style       = {{width:\"100%\",height:h}}\n                                    value       = {this.state.variableY}\n                                    onChange    = {this.handleChange}\n                                    input       = {<OutlinedInput\n                                                    name=\"variableY\" \n                                                    labelWidth={mulw}\n                                                    id=\"variableY-label-placeholder\" />}\n                                    name        = \"variableY\"\n                                    displayEmpty\n                                >\n                                    {this.variables.map(key => (\n                                        <MenuItem key={key} value={key}>\n                                            {key}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                            <FormControl variant=\"outlined\" style={{width:\"100%\",marginTop:\"10px\"}}>\n                                <InputLabel shrink htmlFor=\"normalizerY-label-placeholder\">\n                                Normalizer\n                                </InputLabel>\n                                <Select\n                                    style       = {{width:\"100%\",height:h}}\n                                    value       = {this.state.normalizerY}\n                                    onChange    = {this.handleChange}\n                                    input       = {<OutlinedInput\n                                                    name=\"normalizerY\" \n                                                    labelWidth={82}\n                                                    id=\"normalizerY-label-placeholder\" />}\n                                    name        = \"normalizerY\"\n                                >\n                                    <MenuItem key={\"None\"} value={\"None\"}> \n                                        None\n                                    </MenuItem>\n                                    {this.variables.map(key => (\n                                        <MenuItem key={key} value={key}>\n                                            {key}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <br/>\n                    </Row>\n                    {this.graph}\n                </div>\n            );\n        }\n    }\n}","import React, {Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport LineIcon from '@material-ui/icons/Timeline';\nimport BarIcon from '@material-ui/icons/Notes';\nimport ScatterIcon from '@material-ui/icons/ScatterPlot';\nimport MapIcon from '@material-ui/icons/Map';\nimport Button from '@material-ui/core/Button';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport htmlToImage from 'html-to-image';\nimport Topic from './Topic.js'\nimport { saveAs } from 'file-saver';\n\nconst graphTypes = [\"Line\", \"Bar\", \"Scatter\", \"Map\"];\nconst graphIcons = [<LineIcon />,<BarIcon />,<ScatterIcon />,<MapIcon />];\n\nexport default class Type extends Component {\n\n    constructor(props){\n        super(props);\n        this.state          = {graphIndex:0};\n        this.changeInnerTab = this.changeInnerTab.bind(this);\n        this.download = this.download.bind(this);\n        this.graphtabs      = [];\n\n        for(var i in graphTypes){\n            this.graphtabs.push(<Tab key={graphTypes[i]} label={graphTypes[i]} icon={graphIcons[i]}/>);\n        }\n        \n    }\n\n    download(){\n\n        htmlToImage.toBlob(document.getElementById('dp-graphdiv'))\n            .then(function (blob) {\n            window.saveAs(blob, 'graph.png');\n            }).catch(function (error) {\n                alert(\"Please download using Google Chrome\");\n            });\n\n        this.setState({});\n    }\n\n    changeInnerTab(event, newValue){\n        this.setState({graphIndex: newValue});\n    }\n\n    render(){\n\n        return (\n            <div style={{\n                flexGrow: 1,\n                width: '100%'\n            }}>\n\n                <AppBar position=\"static\">\n                    <Tabs\n                        TabIndicatorProps   = {{style: {backgroundColor: 'black'}}}\n                        value               = {this.state.graphIndex}\n                        onChange            = {this.changeInnerTab}\n                        variant             = \"scrollable\"\n                        scrollButtons       = \"on\"\n                        indicatorColor      = \"primary\"\n                        textColor           = \"inherit\"\n                        style               = {{background:\"gray\"}}\n                        >\n                    {this.graphtabs}\n                    </Tabs>\n                </AppBar>\n                \n                <Topic topicIndex={this.props.topicIndex} graphIndex={this.state.graphIndex}/>\n                <br />\n                \n                <div style={{width:\"100%\",textAlign:\"right\"}}>\n                        <Button onClick={this.download} variant=\"contained\" color=\"default\" style={{marginRight:\"30px\",marginBottom:\"20px\"}}>\n                            Download\n                            <CloudDownloadIcon style={{marginLeft:\"10px\"}}/>\n                        </Button>\n                    </div>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Type from './components/Type.js'\nimport $ from 'jquery';\n\nexport default class TopicTabs extends Component {\n\n    constructor(props){\n        super(props);\n        this.data = \"\";\n        this.set = this.set.bind(this);\n        this.state = {topicIndex: 0};\n        this.handleChange = this.handleChange.bind(this);\n        this.tabs = [];\n        this.topic = null;\n        \n    }\n\n    set(projects){\n        this.projects = [];\n        this.tabs = [];\n        for(var i in projects){\n            this.projects.push(projects[i]);\n            this.tabs.push(\n                <Tab key={i.toString()+\"topic\"} label={projects[i]}/>\n            );\n        }\n        this.topic = <Type topicIndex={this.projects[0]}/>;\n        this.setState({});\n    }\n\n    componentDidMount(){\n        $.ajax({\n            url: \"http://54.219.61.146:5000/new/list\",\n            context: document.body,\n            crossDomain: true\n        }).done(this.set);\n    }\n\n    handleChange(event, newValue) {\n        if(this.state.topicIndex!==newValue){\n            this.topic = <Type topicIndex={this.projects[newValue]}/>;\n            this.setState({topicIndex: newValue});\n        }\n    }\n\n    render(){\n        return (\n            <div style={{\n                flexGrow: 1,\n                width: '100%',\n                backgroundColor: \"white\",\n            }}>\n                <AppBar \n                    position=\"static\" \n                    color=\"default\">\n                    <Tabs\n                    TabIndicatorProps={{style: {backgroundColor: 'black'}}}\n                    value={this.state.topicIndex}\n                    onChange={this.handleChange}\n                    variant=\"scrollable\"\n                    scrollButtons=\"on\"\n                    indicatorColor=\"primary\"\n                    textColor=\"inherit\"\n                    style={{background:\"#DDDDDD\"}}\n                    >\n                    {this.tabs}\n                    </Tabs>\n                </AppBar>\n                <div style={{border:\"5px solid transparent\"}}>\n                    {this.topic}\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('dataportalbody'));\n","var map = {\n\t\"./water/Basin/1980-2017_livestock_head_total.json\": 382,\n\t\"./water/Basin/1980-2017_livestock_tot_wat_consume.json\": 383,\n\t\"./water/metadata.json\": 209,\n\t\"./water_2/Basin/1980-2017_livestock_head_total.json\": 384,\n\t\"./water_2/Basin/1980-2017_livestock_tot_wat_consume.json\": 385,\n\t\"./water_2/metadata.json\": 210\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 74;"],"sourceRoot":""}