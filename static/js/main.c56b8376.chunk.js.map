{"version":3,"sources":["data sync /^/.//.*_group/.json$","data sync /^/.//.*_timeline/.json$","data sync /^/.//.*_bar/.json$","data sync /^/.//.*_scatter/.json$","LineGraph.js","BarGraph.js","ScatterGraph.js","RaceBar.js","App.js","index.js"],"names":["map","./0_group.json","./1_group.json","./2_group.json","./3_group.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","./0_timeline.json","./1_timeline.json","./0_bar.json","./1_bar.json","./2_bar.json","./3_bar.json","./0_scatter.json","./2_scatter.json","LineGraph","_this","this","min","props","area","react_default","a","createElement","nivo_line_esm","data","margin","top","right","bottom","left","xScale","type","max","yScale","stacked","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","title","curve","enableSlices","colors","pointSize","pointColor","enableArea","areaOpacity","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","useMesh","sliceTooltip","_ref","slice","style","background","padding","border","points","sort","b","yStacked","point","Row","key","alignItems","width","height","backgroundColor","serieColor","Col","minWidth","maxWidth","serieId","textAlign","yFormatted","y","Component","MyResponsiveScatterPlot","nivo_scatterplot_esm","xFormat","yFormat","blendMode","legends","anchor","direction","justify","translateX","translateY","itemWidth","itemHeight","itemsSpacing","itemDirection","symbolSize","symbolShape","effects","on","itemOpacity","BarComponent","txt","console","log","_color","_byIndex","color","toString","length","x","textAnchor","dominantBaseline","fill","fontWeight","fontSize","value","transform","concat","strokeWidth","stroke","fillOpacity","Sample","dataGenerator","groupMode","_useState","useState","_useState2","slicedToArray","current","setCurrent","useEffect","timer","setTimeout","clearTimeout","barData","_total","Fragment","nivo_bar_esm","barComponent","pkeys","indexBy","colorBy","layout","borderColor","modifiers","enableGridX","enableGridY","labelSkipWidth","labelSkipHeight","labelTextColor","animate","motionStiffness","motionDamping","marginLeft","Fab","onClick","size","aria-label","PlayArrow_default","Pause_default","Slider","aria-labelledby","step","onChange","event","newValue","marks","graphTypes","graphIcons","Timeline_default","Notes_default","ScatterPlot_default","Map_default","graphOptions","ScrollableTabs","i","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","yValue","grouping","lineType","valueInner","options","handleChange","bind","assertThisInitialized","changeLineType","changeYValue","changeInnerTab","changeGrouping","switchOption","currentGraph","tabs","projects","push","Tab","label","setState","opt","target","_this2","menuItems","menuCategoryItems","avail","graphtabs","hasOwnProperty","icon","display","graph","displayLegend","groupingdata","require","groups","MenuItem","headers","fontFamily","LineGraph_LineGraph","colorcode","item","reverse","chosenKeys","asum","yearEntry","entry","thiscolor","_index","RaceBar","ScatterGraph_MyResponsiveScatterPlot","flexGrow","AppBar","position","Tabs","TabIndicatorProps","variant","scrollButtons","indicatorColor","textColor","overflowY","paddingLeft","marginBottom","react_switch_default","onColor","checked","InputLabel","shrink","htmlFor","Select","input","Input","name","displayEmpty","borderRadius","ReactDOM","render","App_ScrollableTabs","document","getElementById"],"mappings":"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","file":"static/js/main.c56b8376.chunk.js","sourcesContent":["var map = {\n\t\"./0_group.json\": 413,\n\t\"./1_group.json\": 414,\n\t\"./2_group.json\": 415,\n\t\"./3_group.json\": 416\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 412;","var map = {\n\t\"./0_timeline.json\": 418,\n\t\"./1_timeline.json\": 419\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 417;","var map = {\n\t\"./0_bar.json\": 421,\n\t\"./1_bar.json\": 422,\n\t\"./2_bar.json\": 423,\n\t\"./3_bar.json\": 424\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 420;","var map = {\n\t\"./0_scatter.json\": 426,\n\t\"./2_scatter.json\": 427\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 425;","import React,{Component} from 'react';\nimport { ResponsiveLine } from '@nivo/line';\n// import {CustomLine} from './CustomLine';\nimport {Row,Col} from 'reactstrap';\n\nexport default class LineGraph extends Component {\n\n    render(){\n        var min='auto';\n        if(this.props.area){\n            min=0;\n        }\n    return(\n        <ResponsiveLine\n            data={this.props.data}\n            margin={{ top: 50, right: 10, bottom: 50, left: 60 }}\n            xScale={{ type: 'point', min: 'auto', max: 'auto' }}\n            yScale={{ type: 'linear', stacked: this.props.stacked, min: min, max: 'auto' }}\n            axisTop={null}\n            axisRight={null}\n            axisBottom={{\n                orient: 'bottom',\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: 'year',\n                legendOffset: 36,\n                legendPosition: 'middle'\n            }}\n            axisLeft={{\n                orient: 'left',\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: this.props.title,\n                legendOffset: -40,\n                legendPosition: 'middle'\n            }}\n            curve={this.props.curve}\n            enableSlices=\"x\"\n            colors={this.props.colors}\n            pointSize={10}\n            pointColor=\"#ffffff\"\n            enableArea={this.props.area}\n            areaOpacity={0.7}\n            pointBorderWidth={2}\n            pointBorderColor={{ from: 'serieColor' }}\n            pointLabel=\"y\"\n            pointLabelYOffset={-12}\n            useMesh={true}\n            sliceTooltip={({ slice }) => {\n                if(this.props.stacked){\n                    return (\n                    <div\n                        style={{\n                        background: 'white',\n                        padding: '9px 12px',\n                        border: '1px solid #ccc',\n                        }}\n                    >\n                        {slice.points.sort((a,b)=>b.data.yStacked-a.data.yStacked).map(point => (\n                            <Row key={point.id} style={{margin:\"0\", alignItems:\"center\"}}>\n                                <div style={{\n                                    margin: \"10px\",\n                                    width: \"10px\", height:\"10px\", \n                                    backgroundColor:point.serieColor}}></div>\n                                <Col style={{minWidth:\"300\",maxWidth:\"300\"}}>{point.serieId}</Col>\n                                <Col style={{minWidth:\"30\",maxWidth:\"100\", textAlign:\"right\"}}><strong>{point.data.yFormatted}</strong></Col>\n                            </Row>\n                        ))}\n                    </div>)\n                }\n                return (\n                    <div\n                        style={{\n                        background: 'white',\n                        padding: '9px 12px',\n                        border: '1px solid #ccc',\n                        }}\n                    >\n                        {slice.points.sort((a,b)=>b.data.y-a.data.y).map(point => (\n                            <Row key={point.id} style={{margin:\"0\", alignItems:\"center\"}}>\n                                <div style={{\n                                    margin: \"10px\",\n                                    width: \"10px\", height:\"10px\", \n                                    backgroundColor:point.serieColor}}></div>\n                                <Col style={{minWidth:\"300\",maxWidth:\"300\"}}>{point.serieId}</Col>\n                                <Col style={{minWidth:\"30\",maxWidth:\"100\", textAlign:\"right\"}}><strong>{point.data.yFormatted}</strong></Col>\n                            </Row>\n                        ))}\n                    </div>)\n            }}\n        />);\n    }\n}","import React, {Component} from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\n\nexport default class MyResponsiveBar extends Component {\n\n    render(){\n        var groupMode = \"grouped\";\n        if(this.props.stacked){\n            groupMode = \"stacked\";\n        }\n        return(\n            <ResponsiveBar\n                data={this.props.data}\n                keys={[ 'hot dog', 'burger', 'sandwich', 'kebab', 'fries', 'donut' ]}\n                indexBy=\"country\"\n                margin={{ top: 50, right: 60, bottom: 50, left: 60 }}\n                padding={0.3}\n                groupMode={groupMode}\n                layout=\"horizontal\"\n                colors={{ scheme: 'nivo' }}\n                borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                axisTop={null}\n                axisRight={null}\n                axisBottom={{\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: 'country',\n                    legendPosition: 'middle',\n                    legendOffset: 32\n                }}\n                enableGridX={false}\n                enableGridY={false}\n                axisLeft={{\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: 'food',\n                    legendPosition: 'middle',\n                    legendOffset: -40\n                }}\n                labelSkipWidth={12}\n                labelSkipHeight={12}\n                labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                animate={true}\n                motionStiffness={90}\n                motionDamping={15}\n            />\n        );\n    }\n    \n}","import React,{Component} from 'react';\nimport { ResponsiveScatterPlot } from '@nivo/scatterplot'\n\nexport default class MyResponsiveScatterPlot extends Component {\n    render(){\n        return(\n            <ResponsiveScatterPlot\n                data={this.props.data}\n                margin={{ top: 60, right: 140, bottom: 70, left: 90 }}\n                xScale={{ type: 'linear', min: 'auto', max: 'auto' }}\n                xFormat={function(e){return e+\" kg\"}}\n                yScale={{ type: 'linear', min: 'auto', max: 'auto' }}\n                yFormat={function(e){return e+\" cm\"}}\n                blendMode=\"multiply\"\n                axisTop={null}\n                axisRight={null}\n                axisBottom={{\n                    orient: 'bottom',\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: 'weight',\n                    legendPosition: 'middle',\n                    legendOffset: 46\n                }}\n                axisLeft={{\n                    orient: 'left',\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: 'size',\n                    legendPosition: 'middle',\n                    legendOffset: -60\n                }}\n                legends={[\n                    {\n                        anchor: 'bottom-right',\n                        direction: 'column',\n                        justify: false,\n                        translateX: 130,\n                        translateY: 0,\n                        itemWidth: 100,\n                        itemHeight: 12,\n                        itemsSpacing: 5,\n                        itemDirection: 'left-to-right',\n                        symbolSize: 12,\n                        symbolShape: 'circle',\n                        effects: [\n                            {\n                                on: 'hover',\n                                style: {\n                                    itemOpacity: 1\n                                }\n                            }\n                        ]\n                    }\n                ]}\n            />\n        );\n    }\n    \n}","\n/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useState, useEffect } from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { Bar } from '@nivo/bar';\nimport {Row} from 'reactstrap';\nimport PlayIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport Fab from '@material-ui/core/Fab';\n\nconst BarComponent = props => {\n    var txt = null;\n    console.log(props);\n\n    var _color = props.data.data._color;\n    if(props.data.data._byIndex){\n        _color = props.color\n    }\n\n    if(15*props.data.id.toString().length < props.width\n        &&\n        15*2 < props.height\n    ){\n        txt= [<text\n            key={props.data.data.id.toString()+props.data.id.toString()+\"id\"}\n            x={props.width - 16}\n            y={props.height / 2 - 8}\n            textAnchor=\"end\"\n            dominantBaseline=\"central\"\n            fill=\"black\"\n            style={{\n            fontWeight: 900,\n            fontSize: 15,\n            }}\n        >\n            {props.data.id}\n        </text>,\n        <text\n            key={props.data.data.id.toString()+props.data.id.toString()+\"val\"}\n            x={props.width - 16}\n            y={props.height / 2 + 10}\n            textAnchor=\"end\"\n            dominantBaseline=\"central\"\n            fill={\"rgb(0,0,0)\"}\n            style={{\n            fontWeight: 400,\n            fontSize: 13,\n            }}\n        >\n            {props.data.value}\n        </text>]\n    }\n  return (\n    <g transform={`translate(${props.x},${props.y})`}>\n      <rect x={-3} y={7} width={props.width} height={props.height} fill=\"rgba(0, 0, 0, .07)\" />\n      <rect width={props.width} height={props.height} fill={_color} style={{strokeWidth:2, stroke:\"rgb(0,0,0)\"}} />\n      <rect x={props.width - 5} width={5} height={props.height} fill={\"rgb(0,0,0)\"} fillOpacity={0.2} />\n      {txt}\n    </g>\n  );\n};\n\nconst Sample = (props) => {\n\n    const dataGenerator = props.dataGenerator;\n    var groupMode = \"grouped\";\n    if(props.groupMode){\n        groupMode = \"stacked\";\n    }\n  const [current, setCurrent] = useState([0,0]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n        if(current[1]){\n            setCurrent([(current[0] + 1)%dataGenerator.length,current[1]]);\n        }\n    }, 1400);\n    return () => clearTimeout(timer);\n  }, [current, setCurrent]);\n\n  const barData = dataGenerator[current[0]][1].sort((a, b) => a._total-b._total);\n\n  return (\n    <>\n      <Bar\n                barComponent={BarComponent}\n                width={700}\n                height={500}\n                data={barData}\n                keys={props.pkeys}\n                indexBy=\"id\"\n                colorBy=\"id\"\n                margin={{ top: 50, right: 60, bottom: 50, left: 80 }}\n                padding={0.3}\n                groupMode={groupMode}\n                layout=\"horizontal\"\n                colors={[\"red\",\"orange\",\"yellow\",\"green\",\"blue\",\"purple\"]}\n                borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                axisTop={null}\n                axisRight={null}\n                axisBottom={{\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: props.title,\n                    legendPosition: 'middle',\n                    legendOffset: 32\n                }}\n                enableGridX={false}\n                enableGridY={false}\n                axisLeft={{\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legendPosition: 'middle',\n                    legendOffset: -40\n                }}\n                labelSkipWidth={12}\n                labelSkipHeight={12}\n                labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                animate={true}\n                motionStiffness={90}\n                motionDamping={15}\n            />\n      <h2 style={{ marginLeft: 60, fontWeight: 400, color: '#555', textAlign:\"center\" }}>\n        <strong style={{ color: 'black', fontWeight: 900 }}>{dataGenerator[current[0]][0]}</strong>\n      </h2>\n      <Row style={{margin:0, padding:0, alignItems:\"center\"}}>\n            <Fab onClick={()=>{setCurrent([(current[0] - current[1]+1)%dataGenerator.length,1-current[1]])}}\n                size=\"medium\" aria-label=\"Add\" style={{marginLeft:50}}>\n                {[<PlayIcon />,<PauseIcon />][current[1]]}\n            </Fab>\n        <Slider value={current[0]}\n            style={{width:550, marginLeft:30}}\n            aria-labelledby=\"discrete-slider\"\n            step={1}\n            onChange={(event, newValue)=>{setCurrent([newValue,current[1]])}}\n            marks\n            min={0}\n            max={dataGenerator.length-1}/>\n        </Row>\n    </>\n  );\n};\n\nexport default Sample;","import React, {Component} from 'react';\nimport {Button, Row, Col} from 'reactstrap';\nimport LineGraph from './LineGraph'\nimport BarGraph from './BarGraph';\nimport ScatterGraph from './ScatterGraph';\nimport projects from './data/projects.json'\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport LineIcon from '@material-ui/icons/Timeline';\nimport BarIcon from '@material-ui/icons/Notes';\nimport ScatterIcon from '@material-ui/icons/ScatterPlot';\nimport MapIcon from '@material-ui/icons/Map';\nimport Switch from \"react-switch\";\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Sample from './RaceBar.js'\nimport \"./style.css\";\n\nconst graphTypes = [\"Line\", \"Bar\", \"Scatter\", \"Map\"];\nconst graphIcons = [<LineIcon />,<BarIcon />,<ScatterIcon />,<MapIcon />];\n// stacked, area, curve type, rank, stack group, years\nconst graphOptions = [  [\"flex\",\"flex\",\"\",\"none\",\"none\",\"none\"],\n                        [\"flex\",\"none\",\"none\",\"\",\"\",\"\"],\n                        [\"none\",\"none\",\"none\",\"none\",\"none\",\"\"],\n                        [\"none\",\"none\",\"none\",\"none\",\"none\",\"\"]];\n\nexport default class ScrollableTabs extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            value: 0, \n            yValue: \"\", \n            grouping:\"\",\n            lineType: 'cardinal', \n            valueInner:1, \n            options:[true,true,false]};\n        this.handleChange = this.handleChange.bind(this);\n        this.changeLineType = this.changeLineType.bind(this);\n        this.changeYValue = this.changeYValue.bind(this);\n        this.changeInnerTab = this.changeInnerTab.bind(this);\n        this.changeGrouping = this.changeGrouping.bind(this);\n        this.switchOption = this.switchOption.bind(this);\n\n        this.currentGraph = [\"None\"];\n\n        this.tabs = [];\n        for(var i in projects){\n            this.tabs.push(\n                <Tab key={i.toString()+\"project\"} label={projects[i].title}/>\n            );\n        }\n        \n    }\n\n    changeInnerTab(event, newValue){\n        this.setState({valueInner: newValue});\n    }\n\n    handleChange(event, newValue) {\n        this.setState({value: newValue});\n    }\n\n    switchOption(o){\n        var opt = this.state.options;\n        opt[o] = !opt[o];\n        this.setState({options:opt});\n    }\n\n    changeLineType(event){\n        this.setState({lineType: event.target.value})\n    }\n    \n    changeYValue(event){\n        this.setState({yValue: event.target.value})\n    }\n\n    changeGrouping(event){\n        this.setState({grouping: event.target.value})\n    }\n\n    render(){\n\n        var menuItems = [];\n        var menuCategoryItems = [];\n        var value = this.state.value;\n        var valueInner = 0;\n        var avail = [];\n        var graphtabs = [];\n\n        for(var i in graphTypes){\n            avail.push(projects[value].hasOwnProperty(graphTypes[i]));\n            if(avail[i]){\n                graphtabs.push(<Tab key={graphTypes[i]} label={graphTypes[i]} icon={graphIcons[i]}/>);\n            }else{\n                graphtabs.push(<Tab style={{display:\"none\"}} key={graphTypes[i]} label={graphTypes[i]} icon={graphIcons[i]}/>);\n\n            }\n        }\n        \n        if(avail[this.state.valueInner]){\n            valueInner = this.state.valueInner;\n        }else{\n            while(!avail[valueInner]){\n                valueInner+=1;\n                if(valueInner>=avail.length){\n                    valueInner = -1;\n                    break;\n                }\n            }\n            this.state.valueInner = valueInner;\n        }\n\n        var graph = null;\n        var legend = null;\n        var displayLegend = \"none\";\n\n        var groupingdata = require('./data/'+value.toString()+'_group.json');\n        var groups = [];\n        for(key in groupingdata){\n            if(key!==\"_index\"){\n                groups.push(key);\n                menuCategoryItems.push(\n                    <MenuItem key={key} value={key}>{key}</MenuItem>\n                );\n            }\n        }\n\n        if(!groupingdata.hasOwnProperty(this.state.grouping)){\n            this.state.grouping = \"None\";\n        }\n\n        if(this.state.valueInner === 0){\n            var data = require('./data/'+value.toString()+'_timeline.json');\n            var headers = [];\n            for(var key in data){\n                headers.push(key);\n                menuItems.push(\n                    <MenuItem key={key} value={key}>{key}</MenuItem>\n                );\n            }\n\n            if(!data.hasOwnProperty(this.state.yValue)){\n                this.state.yValue = headers[0];\n            }\n\n            graph = <div style={{fontFamily:\"cambria\", height:\"70vh\", backgroundColor:\"white\"}}>\n                {<LineGraph data={data[this.state.yValue].data} \n                            stacked={this.state.options[0]} \n                            area={this.state.options[1]}\n                            curve={this.state.lineType}\n                            title={data[this.state.yValue].title}\n                            colors={groupingdata[this.state.grouping][0]}/>}\n            </div>\n            displayLegend = \"inline-table\"\n            legend = []\n            \n            var colorcode = groupingdata[this.state.grouping][1];\n            for(var item in colorcode){\n                legend.push(\n                    <Row key={item} style={{margin:\"0\", alignItems:\"center\"}}>\n                        <div style={{\n                            margin: \"10px\",\n                            width: \"10px\", height:\"10px\", \n                            backgroundColor:colorcode[item]}}></div>\n                        <div>{item}</div>\n                    </Row>\n                );\n            }\n\n            legend.reverse();\n\n        }else if(this.state.valueInner === 1){\n            /*\n            graph = <div style={{fontFamily:\"cambria\", height:\"70vh\", backgroundColor:\"white\"}}>\n                {<BarGraph data={require('./data/'+value.toString()+'_bar.json')} stacked={this.state.options[0]}/>}\n            </div>*/\n\n            var data = require('./data/'+value.toString()+'_bar.json');\n            var headers = [];\n            for(var key in data){\n                headers.push(key);\n                menuItems.push(\n                    <MenuItem key={key} value={key}>{key}</MenuItem>\n                );\n            }\n\n            if(!data.hasOwnProperty(this.state.yValue)){\n                this.state.yValue = headers[0];\n            }\n\n            var chosenKeys = [\"value\",\"burger\"];\n\n            var asum = 0;\n\n            for(var yearEntry in data[this.state.yValue][\"data\"]){\n                for(var entry in data[this.state.yValue][\"data\"][yearEntry][1]){\n                    asum=0;\n                    for(var key in chosenKeys){\n                        asum+=data[this.state.yValue][\"data\"][yearEntry][1][entry][chosenKeys[key]];\n                    }\n\n                    if(this.state.grouping===\"None\"){\n                        data[this.state.yValue][\"data\"][yearEntry][1][entry][\"_byIndex\"] = true;\n                    }else{\n                        var thiscolor = groupingdata[this.state.grouping][0][\n                            groupingdata._index[\n                                data[this.state.yValue][\"data\"][yearEntry][1][entry].id\n                            ]\n                        ];\n                        data[this.state.yValue][\"data\"][yearEntry][1][entry][\"_color\"] = thiscolor;\n                        data[this.state.yValue][\"data\"][yearEntry][1][entry][\"_byIndex\"] = false;\n                    }\n\n                    data[this.state.yValue][\"data\"][yearEntry][1][entry][\"_total\"] = asum;\n                }\n            }\n\n            graph = <Sample \n                    title={data[this.state.yValue][\"title\"]}\n                    pkeys={chosenKeys}\n                    dataGenerator={data[this.state.yValue][\"data\"]} \n                    groupMode={this.state.options[0]}\n                    colors={groupingdata[this.state.grouping]}/>\n\n                    displayLegend = \"inline-table\"\n                    legend = []\n                    \n            if(this.state.grouping!==\"None\"){\n                var colorcode = groupingdata[this.state.grouping][1];\n                for(var item in colorcode){\n                    legend.push(\n                        <Row key={item} style={{margin:\"0\", alignItems:\"center\"}}>\n                            <div style={{\n                                margin: \"10px\",\n                                width: \"10px\", height:\"10px\", \n                                backgroundColor:colorcode[item]}}></div>\n                            <div>{item}</div>\n                        </Row>\n                    );\n                }\n                legend.reverse();\n            }\n\n        }else if(this.state.valueInner === 2){\n            graph = <div style={{fontFamily:\"cambria\", height:\"70vh\", backgroundColor:\"white\"}}>\n                {<ScatterGraph data={require('./data/'+value.toString()+'_scatter.json')} />}\n            </div>\n        }\n\n        return (\n            <div style={{\n                flexGrow: 1,\n                width: '100%',\n                backgroundColor: \"white\",\n            }}>\n                <AppBar position=\"static\" color=\"default\">\n                    <Tabs\n                    TabIndicatorProps={{style: {backgroundColor: 'black'}}}\n                    value={value}\n                    onChange={this.handleChange}\n                    variant=\"scrollable\"\n                    scrollButtons=\"on\"\n                    indicatorColor=\"primary\"\n                    textColor=\"inherit\"\n                    >\n                    {this.tabs}\n                    </Tabs>\n                </AppBar>\n\n                <AppBar position=\"static\">\n                    <Tabs\n                        TabIndicatorProps={{style: {backgroundColor: 'black'}}}\n                        value={valueInner}\n                        onChange={this.changeInnerTab}\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\"\n                        indicatorColor=\"primary\"\n                        textColor=\"inherit\"\n                        style={{background:\"gray\"}}\n                        >\n                    {graphtabs}\n                    </Tabs>\n                </AppBar>\n                <Row style={{width:\"100%\", margin:\"0\", padding:\"0\"}}>\n                    <div style={{width:\"80%\"}}>\n                        {graph}\n                    </div>\n                    <div style={{height:\"70vh\", width:\"20%\", padding:'2%', overflowY: \"scroll\"}}>\n                        <Row style={{display:graphOptions[this.state.valueInner][0],paddingLeft:\"10%\", marginBottom: \"5%\"}}>\n                            <Switch onColor=\"#222429\" checked={this.state.options[0]} onChange={() => {this.switchOption(0)}} value={this.state.options[0]} />\n                            <div style={{marginLeft:\"4%\", fontFamily:\"Verdana\"}}>Stacked</div>\n                        </Row>\n                        <Row style={{display:graphOptions[this.state.valueInner][1],paddingLeft:\"10%\", marginBottom: \"5%\"}}>\n                            <Switch onColor=\"#222429\" checked={this.state.options[1]} onChange={() => {this.switchOption(1)}} value={this.state.options[1]} />\n                            <div style={{marginLeft:\"4%\", fontFamily:\"Verdana\"}}>Area</div>\n                        </Row>\n                        <br />\n                        <div style={{display:graphOptions[this.state.valueInner][2]}}>\n                            <InputLabel shrink htmlFor=\"curve-label-placeholder\">\n                            Curve Type\n                            </InputLabel>\n                            <Select\n                                style={{width:\"100%\"}}\n                                value={this.state.lineType}\n                                onChange={this.changeLineType}\n                                input={<Input name=\"curve\" id=\"curve-label-placeholder\" />}\n                                displayEmpty\n                                name=\"curve\"\n                            >\n                            <MenuItem value={'basis'}>Basis</MenuItem>\n                            <MenuItem value={'cardinal'}>Cardinal</MenuItem>\n                            <MenuItem value={'linear'}>Linear</MenuItem>\n                            <MenuItem value={'natural'}>Natural</MenuItem>\n                            </Select>\n                        </div>\n                        <br style={{display:graphOptions[this.state.valueInner][2]}}/>\n                        <div>\n                            <InputLabel shrink htmlFor=\"value-label-placeholder\">\n                            Dependent Value\n                            </InputLabel>\n                            <Select\n                                style={{width:\"100%\"}}\n                                value={this.state.yValue}\n                                onChange={this.changeYValue}\n                                input={<Input name=\"value\" id=\"value-label-placeholder\" />}\n                                displayEmpty\n                                name=\"value\"\n                            >\n                                {menuItems}\n                            </Select>\n                        </div>\n                        <br />\n                        <div>\n                            <InputLabel shrink htmlFor=\"categorize-label-placeholder\">\n                            Categorize\n                            </InputLabel>\n                            <Select\n                                style={{width:\"100%\"}}\n                                value={this.state.grouping}\n                                onChange={this.changeGrouping}\n                                input={<Input name=\"categorize\" id=\"categorize-label-placeholder\" />}\n                                name=\"categorize\"\n                            >\n                                {menuCategoryItems}\n                            </Select>\n                        </div>\n                        <br />\n                        <div>\n                            <div style={{\n                                        display:displayLegend, \n                                        backgroundColor:\"lightGray\",\n                                        width: \"100%\",\n                                        borderRadius: \"2px\",\n                                        fontFamily:\"Georgia\"\n                                    }}>\n                                {legend}\n                            </div>\n                        </div>\n                    </div>\n                </Row>\n                <br />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('dataportalbody'));\n"],"sourceRoot":""}