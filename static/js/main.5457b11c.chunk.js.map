{"version":3,"sources":["data/new/get sync /^/.//.*/.json$","components/Charts/Line/LineGraph.js","color.js","components/Charts/Line/LineFrame.js","lighten.js","components/Charts/Bar/BarGraph.js","components/Charts/Bar/BarFrame.js","components/Charts/Scatter/ScatterGraph.js","components/Charts/Scatter/ScatterFrame.js","components/Chart.js","components/ChartsContainer.js","App.js","index.js"],"names":["map","./normalizer.json","./water.json","./water_2.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","LineGraph","div","this","props","data","length","Math","max","floor","min","stacked","min_value","max_stacked","max_value","yDiv","mul","abs","title","toString","react_default","a","createElement","Fragment","style","height","width","nivo_line_esm","fontFamily","margin","top","right","bottom","left","xScale","type","yScale","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","format","value","Number","axisLeft","round","labelFormat","curve","enableSlices","colors","pointSize","pointColor","enableArea","area","areaOpacity","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","useMesh","sliceTooltip","_ref","slice","background","padding","border","borderRadius","points","sort","b","hasOwnProperty","yStacked","y","point","Row","key","alignItems","font","backgroundColor","serieColor","Col","minWidth","maxWidth","serieId","textAlign","yFormatted","Component","src_color","parula","3","4","5","6","7","8","9","10","parula-reverse","jet","jet-reverse","hsv","hsv-reverse","hot","hot-reverse","cool","cool-reverse","spring","spring-reverse","summer","summer-reverse","autumn","autumn-reverse","winter","winter-reverse","gray","gray-reverse","bone","bone-reverse","copper","copper-reverse","pink","pink-reverse","getRandomSubarray","arr","n","temp","index","shuffled","i","random","LineFrame","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","projectName","topicName","variableX","storage","state","previousProjectName","undefined","normalizerData","selectedKeys","changeInput","bind","assertThisInitialized","checkBox","event","checked","name","target","indexOf","splice","push","setState","defineProperty","_this2","_this$props","classes","color","variableName","normalizerX","colormaps","_this$state","year","filteredEntries","filteredData","stacked_values","min_year","max_year","forEach","dataKey","normalizedEntry","varKey","console","log","variableEntryValue","parseFloat","normalizer","years","this_min_year","apply","toConsumableArray","this_max_year","entry","normalizedData","val","x","item","Grid","container","direction","justify","xs","sm","md","lg","LineGraph_LineGraph","className","optionsContainerRoot","maxHeight","display","optionsContainer","react_switch_default","onColor","onChange","marginLeft","TextField","select","label","InputLabelProps","shrink","MenuItem","FormControlLabel","control","Checkbox","includes","withStyles","theme","overflow","spacing","legends","formControl","lighten","col","usePound","num","parseInt","r","g","amt","StyledSlider","mark","Slider","BarComponent","txt","textAnchor","dominantBaseline","fill","fontWeight","fontSize","LightTooltip","tooltip","boxShadow","shadows","Tooltip","TransitionComponent","Zoom","marginTop","marginBottom","whiteSpace","placement","transform","concat","strokeWidth","stroke","fillOpacity","chartContainer","flexGrow","gridContainer","paddingBottom","justifyItems","dataGenerator","groupMode","_useState","useState","_useState2","slicedToArray","current","setCurrent","useEffect","timer","setTimeout","clearTimeout","barData","ranking","_total","numberOfItems","nivo_bar_esm","barComponent","pkeys","indexBy","colorBy","layout","borderColor","modifiers","axisTop","axisRight","enableGridX","enableGridY","labelSkipWidth","labelSkipHeight","labelTextColor","animate","motionStiffness","motionDamping","Fab","onClick","size","aria-label","PlayArrow_default","Pause_default","aria-labelledby","step","newValue","marks","BarFrame","_objectSpread","curr_v","Bar_BarGraph","CustomNode","node","blendMode","onMouseEnter","onMouseMove","onMouseLeave","mixBlendMode","max_x","max_y","xDiv","xmul","ymul","title_x","titleX","title_y","titleY","position","nivo_scatterplot_esm","zIndex","renderNode","_ref2","this_id","formattedX","formattedY","paddingLeft","ScatterGraph_StyledSlider","ScatterFrame","groups","variableY","normalizerY","variableEntryX","variableEntryY","show","Scatter_ScatterGraph","CustomCheckbox","root","assign","graphSettings","0","varTitle","1","2","Chart","graphIndex","handleChange","eventName","eventValue","projectData","variableNames","_this$props2","items","graph","Line_LineFrame","Bar_BarFrame","Scatter_ScatterFrame","gridLayout","FormControl","variant","disabled","SelectProps","ChartsContainer","handleTabChange","download","htmlToImage","toBlob","document","getElementById","then","blob","window","saveAs","catch","error","alert","_","rootContainer","AppBar","Tabs","tabContainer","TabIndicatorProps","tabIndicator","scrollButtons","indicatorColor","textColor","Tab","icon","Timeline_default","Notes_default","ScatterPlot_default","Map_default","components_Chart","downloadButton","downloadIcon","TopicTabs","projects","projectIndex","setProject","setInit","setData","setNormalizer","getNormalizer","n_data","fetched_projects","require","fetched_data","topicIndex","appbar","topicContainter","components_ChartsContainer","ReactDOM","render","App"],"mappings":"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","file":"static/js/main.5457b11c.chunk.js","sourcesContent":["var map = {\n\t\"./normalizer.json\": 239,\n\t\"./water.json\": 457,\n\t\"./water_2.json\": 458\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 240;","import React, { Component } from 'react';\nimport { ResponsiveLine } from '@nivo/line';\nimport { Row, Col } from 'reactstrap';\n\nexport default class LineGraph extends Component {\n\n    render() {\n\n        // set if area shown\n        const div = this.props.data.length===0?\n                    1:\n                    Math.max(Math.floor(this.props.data[0].data.length/10),1);\n\n        const min = this.props.stacked ? 0 : (this.props.min_value * 0.9);\n        const max = this.props.stacked ? this.props.max_stacked * 1.1 : this.props.max_value * 1.1;\n\n        var yDiv = 1;\n        var mul = 0;\n        while(Math.abs(max / yDiv) >= 1000){\n            yDiv *= 1000;\n            mul += 3;\n        }\n        while(Math.abs(max / yDiv) < 1){\n            yDiv /= 1000;\n            mul -= 3;\n        }\n\n        const title =   mul===0 ? this.props.title :\n                        this.props.title + \" x 10^\" + mul.toString();\n\n        return (\n            <>\n                <div >\n                    <div id=\"dp-graphdiv\" style={{ height: \"600px\", width: \"100%\" }}>\n                        <ResponsiveLine\n                            style={{fontFamily:\"Verdana\"}}\n                            data={this.props.data}\n                            margin={{ top: 50, right: 25, bottom: 50, left: 70 }}\n                            xScale={{ type: 'point', min: 'auto', max: 'auto' }}\n                            yScale={{ type: 'linear', \n                                        stacked: this.props.stacked, \n                                        min: min, \n                                        max: max}}\n\n                            axisBottom={{\n                                orient: 'bottom',\n                                tickSize: 5,\n                                tickPadding: 5,\n                                tickRotation: 0,\n                                legend: 'year',\n                                legendOffset: 40,\n                                legendPosition: 'middle',\n                                format: (value,props) => { return (Number(value)%div ===0 &&value); },\n                            }}\n                            axisLeft={{\n                                orient: 'left',\n                                tickSize: 4,\n                                tickPadding: 2,\n                                tickRotation: 0,\n                                legend: title,\n                                legendOffset: -50,\n                                legendPosition: 'middle',\n                                format: (value,props) => { return Math.round(value/yDiv*10)/10; },\n                            }}\n\n                            labelFormat=\".0s\"\n                            curve={this.props.curve}\n                            enableSlices=\"x\"\n                            colors={this.props.colors}\n                            pointSize={10}\n                            pointColor=\"#ffffff\"\n                            enableArea={this.props.area}\n                            areaOpacity={0.7}\n                            pointBorderWidth={2}\n                            pointBorderColor={{ from: 'serieColor' }}\n                            pointLabel=\"y\"\n                            pointLabelYOffset={-12}\n                            useMesh={true}\n                            sliceTooltip={({ slice }) => {\n                                // custom tooltip for stacked and not stacked\n                                return (\n                                    <div\n                                        style={{\n                                            background: 'white',\n                                            padding: '9px 12px',\n                                            border: '1px solid #ccc',\n                                            borderRadius:\"5px\"\n                                        }}\n                                    >\n                                        {slice.points.sort((a, b) => {\n                                            if (b.data.hasOwnProperty(\"yStacked\")) {\n                                                return b.data.yStacked - a.data.yStacked;\n                                            }\n                                            return b.data.y - a.data.y;\n                                        }).map(point => (\n                                            <Row \n                                                key={point.id} \n                                                style={{ margin: \"0\", alignItems: \"center\", font:\"bold 14px Courier\"}}>\n                                                {/* color mark box on the left */}\n                                                <div style={{\n                                                    margin: \"10px\",\n                                                    width: \"10px\", height: \"10px\",\n                                                    backgroundColor: point.serieColor\n                                                }}></div>\n\n                                                {/* line name */}\n                                                <Col style={{ minWidth: \"200\", maxWidth: \"200\" }}>{point.serieId}</Col>\n\n                                                {/* point value */}\n                                                <Col style={{ minWidth: \"40\", maxWidth: \"40\", textAlign: \"right\" }}>\n                                                    <strong>{point.data.yFormatted}</strong>\n                                                </Col>\n                                            </Row>\n                                        ))}\n                                    </div>)\n                            }}\n                        />\n                    </div>\n                </ div>\n            </>\n        );\n    }\n}","export default {\n    'parula': {\n        3: ['#3E26A8', '#12BEB9', '#F9FB15'],\n        4: ['#3E26A8', '#2797EB', '#81CC59', '#F9FB15'],\n        5: ['#3E26A8', '#347AFD', '#12BEB9', '#C8C129', '#F9FB15'],\n        6: ['#3E26A8', '#4367FD', '#1CAADF', '#48CB86', '#EABA30', '#F9FB15'],\n        7: ['#3E26A8', '#475BF9', '#2797EB', '#12BEB9', '#81CC59', '#FCBB3E', '#F9FB15'],\n        8: ['#3E26A8', '#4852F4', '#2E87F7', '#12B1D6', '#37C897', '#ABC739', '#FEC338', '#F9FB15'],\n        9: ['#3E26A8', '#484CEF', '#347AFD', '#21A3E3', '#12BEB9', '#5CCC76', '#C8C129', '#FECA33', '#F9FB15'],\n        10: ['#3E26A8', '#4747EB', '#3E6FFF', '#2797EB', '#08B5D0', '#31C69F', '#81CC59', '#DCBD29', '#FCCF30', '#F9FB15'],\n    },\n    'parula-reverse': {\n        3: ['#F9FB15', '#12BEB9', '#3E26A8'],\n        4: ['#F9FB15', '#81CC59', '#2797EB', '#3E26A8'],\n        5: ['#F9FB15', '#C8C129', '#12BEB9', '#347AFD', '#3E26A8'],\n        6: ['#F9FB15', '#EABA30', '#48CB86', '#1CAADF', '#4367FD', '#3E26A8'],\n        7: ['#F9FB15', '#FCBB3E', '#81CC59', '#12BEB9', '#2797EB', '#475BF9', '#3E26A8'],\n        8: ['#F9FB15', '#FEC338', '#ABC739', '#37C897', '#12B1D6', '#2E87F7', '#4852F4', '#3E26A8'],\n        9: ['#F9FB15', '#FECA33', '#C8C129', '#5CCC76', '#12BEB9', '#21A3E3', '#347AFD', '#484CEF', '#3E26A8'],\n        10: ['#F9FB15', '#FCCF30', '#DCBD29', '#81CC59', '#31C69F', '#08B5D0', '#2797EB', '#3E6FFF', '#4747EB', '#3E26A8'],\n    },\n    'jet': {\n        3: ['#0000FF', '#00FFFF', '#FFFF00'],\n        4: ['#0000FF', '#00FFFF', '#FFFF00', '#FF0000'],\n        5: ['#0080FF', '#00FFFF', '#80FF80', '#FFFF00', '#FF8000'],\n        6: ['#0000FF', '#0080FF', '#00FFFF', '#80FF80', '#FFFF00', '#FF8000'],\n        7: ['#0000FF', '#0080FF', '#00FFFF', '#80FF80', '#FFFF00', '#FF8000', '#FF0000'],\n        8: ['#0000FF', '#0080FF', '#00FFFF', '#80FF80', '#FFFF00', '#FF8000', '#FF0000', '#800000'],\n        9: ['#0000FF', '#0055FF', '#00AAFF', '#00FFFF', '#55FFAA', '#AAFF55', '#FFFF00', '#FFAA00', '#FF5500'],\n        10: ['#0000AA', '#0000FF', '#0055FF', '#00AAFF', '#00FFFF', '#55FFAA', '#AAFF55', '#FFFF00', '#FFAA00', '#FF5500'],\n    },\n    'jet-reverse': {\n        3: ['#FFFF00', '#00FFFF', '#0000FF'],\n        4: ['#FF0000', '#FFFF00', '#00FFFF', '#0000FF'],\n        5: ['#FF8000', '#FFFF00', '#80FF80', '#00FFFF', '#0080FF'],\n        6: ['#FF8000', '#FFFF00', '#80FF80', '#00FFFF', '#0080FF', '#0000FF'],\n        7: ['#FF0000', '#FF8000', '#FFFF00', '#80FF80', '#00FFFF', '#0080FF', '#0000FF'],\n        8: ['#800000', '#FF0000', '#FF8000', '#FFFF00', '#80FF80', '#00FFFF', '#0080FF', '#0000FF'],\n        9: ['#FF5500', '#FFAA00', '#FFFF00', '#AAFF55', '#55FFAA', '#00FFFF', '#00AAFF', '#0055FF', '#0000FF'],\n        10: ['#FF5500', '#FFAA00', '#FFFF00', '#AAFF55', '#55FFAA', '#00FFFF', '#00AAFF', '#0055FF', '#0000FF', '#0000AA'],\n    },\n    'hsv': {\n        3: ['#FF0000', '#00FF00', '#0000FF'],\n        4: ['#FF0000', '#80FF00', '#00FFFF', '#8000FF'],\n        5: ['#FF0000', '#CCFF00', '#00FF66', '#0066FF', '#CC00FF'],\n        6: ['#FF0000', '#FFFF00', '#00FF00', '#00FFFF', '#0000FF', '#FF00FF'],\n        7: ['#FF0000', '#FFDB00', '#49FF00', '#00FF92', '#0092FF', '#4900FF', '#FF00DB'],\n        8: ['#FF0000', '#FFBF00', '#80FF00', '#00FF40', '#00FFFF', '#0040FF', '#8000FF', '#FF00BF'],\n        9: ['#FF0000', '#FFAA00', '#AAFF00', '#00FF00', '#00FFAA', '#00AAFF', '#0000FF', '#AA00FF', '#FF00AA'],\n        10: ['#FF0000', '#FF9900', '#CCFF00', '#33FF00', '#00FF66', '#00FFFF', '#0066FF', '#3300FF', '#CC00FF', '#FF0099'],\n    },\n    'hsv-reverse': {\n        3: ['#0000FF', '#00FF00', '#FF0000'],\n        4: ['#8000FF', '#00FFFF', '#80FF00', '#FF0000'],\n        5: ['#CC00FF', '#0066FF', '#00FF66', '#CCFF00', '#FF0000'],\n        6: ['#FF00FF', '#0000FF', '#00FFFF', '#00FF00', '#FFFF00', '#FF0000'],\n        7: ['#FF00DB', '#4900FF', '#0092FF', '#00FF92', '#49FF00', '#FFDB00', '#FF0000'],\n        8: ['#FF00BF', '#8000FF', '#0040FF', '#00FFFF', '#00FF40', '#80FF00', '#FFBF00', '#FF0000'],\n        9: ['#FF00AA', '#AA00FF', '#0000FF', '#00AAFF', '#00FFAA', '#00FF00', '#AAFF00', '#FFAA00', '#FF0000'],\n        10: ['#FF0099', '#CC00FF', '#3300FF', '#0066FF', '#00FFFF', '#00FF66', '#33FF00', '#CCFF00', '#FF9900', '#FF0000'],\n    },\n    'hot': {\n        3: ['#FF0000', '#FFFF00', '#FFFFFF'],\n        4: ['#FF0000', '#FFFF00', '#FFFF80', '#FFFFFF'],\n        5: ['#FF0000', '#FFFF00', '#FFFF55', '#FFFFAA', '#FFFFFF'],\n        6: ['#800000', '#FF0000', '#FF8000', '#FFFF00', '#FFFF80', '#FFFFFF'],\n        7: ['#800000', '#FF0000', '#FF8000', '#FFFF00', '#FFFF55', '#FFFFAA', '#FFFFFF'],\n        8: ['#550000', '#AA0000', '#FF0000', '#FF5500', '#FFAA00', '#FFFF00', '#FFFF80', '#FFFFFF'],\n        9: ['#550000', '#AA0000', '#FF0000', '#FF5500', '#FFAA00', '#FFFF00', '#FFFF55', '#FFFFAA', '#FFFFFF'],\n        10: ['#550000', '#AA0000', '#FF0000', '#FF5500', '#FFAA00', '#FFFF00', '#FFFF40', '#FFFF80', '#FFFFBF', '#FFFFFF'],\n    },\n    'hot-reverse': {\n        3: ['#FFFFFF', '#FFFF00', '#FF0000'],\n        4: ['#FFFFFF', '#FFFF80', '#FFFF00', '#FF0000'],\n        5: ['#FFFFFF', '#FFFFAA', '#FFFF55', '#FFFF00', '#FF0000'],\n        6: ['#FFFFFF', '#FFFF80', '#FFFF00', '#FF8000', '#FF0000', '#800000'],\n        7: ['#FFFFFF', '#FFFFAA', '#FFFF55', '#FFFF00', '#FF8000', '#FF0000', '#800000'],\n        8: ['#FFFFFF', '#FFFF80', '#FFFF00', '#FFAA00', '#FF5500', '#FF0000', '#AA0000', '#550000'],\n        9: ['#FFFFFF', '#FFFFAA', '#FFFF55', '#FFFF00', '#FFAA00', '#FF5500', '#FF0000', '#AA0000', '#550000'],\n        10: ['#FFFFFF', '#FFFFBF', '#FFFF80', '#FFFF40', '#FFFF00', '#FFAA00', '#FF5500', '#FF0000', '#AA0000', '#550000'],\n    },\n    'cool': {\n        3: ['#00FFFF', '#8080FF', '#FF00FF'],\n        4: ['#00FFFF', '#55AAFF', '#AA55FF', '#FF00FF'],\n        5: ['#00FFFF', '#40BFFF', '#8080FF', '#BF40FF', '#FF00FF'],\n        6: ['#00FFFF', '#33CCFF', '#6699FF', '#9966FF', '#CC33FF', '#FF00FF'],\n        7: ['#00FFFF', '#2BD5FF', '#55AAFF', '#8080FF', '#AA55FF', '#D52AFF', '#FF00FF'],\n        8: ['#00FFFF', '#24DBFF', '#49B6FF', '#6D92FF', '#926DFF', '#B649FF', '#DB24FF', '#FF00FF'],\n        9: ['#00FFFF', '#20DFFF', '#40BFFF', '#609FFF', '#8080FF', '#9F60FF', '#BF40FF', '#DF20FF', '#FF00FF'],\n        10: ['#00FFFF', '#1CE3FF', '#39C6FF', '#55AAFF', '#718EFF', '#8E71FF', '#AA55FF', '#C639FF', '#E31CFF', '#FF00FF'],\n    },\n    'cool-reverse': {\n        3: ['#FF00FF', '#8080FF', '#00FFFF'],\n        4: ['#FF00FF', '#AA55FF', '#55AAFF', '#00FFFF'],\n        5: ['#FF00FF', '#BF40FF', '#8080FF', '#40BFFF', '#00FFFF'],\n        6: ['#FF00FF', '#CC33FF', '#9966FF', '#6699FF', '#33CCFF', '#00FFFF'],\n        7: ['#FF00FF', '#D52AFF', '#AA55FF', '#8080FF', '#55AAFF', '#2BD5FF', '#00FFFF'],\n        8: ['#FF00FF', '#DB24FF', '#B649FF', '#926DFF', '#6D92FF', '#49B6FF', '#24DBFF', '#00FFFF'],\n        9: ['#FF00FF', '#DF20FF', '#BF40FF', '#9F60FF', '#8080FF', '#609FFF', '#40BFFF', '#20DFFF', '#00FFFF'],\n        10: ['#FF00FF', '#E31CFF', '#C639FF', '#AA55FF', '#8E71FF', '#718EFF', '#55AAFF', '#39C6FF', '#1CE3FF', '#00FFFF'],\n    },\n    'spring': {\n        3: ['#FF00FF', '#FF8080', '#FFFF00'],\n        4: ['#FF00FF', '#FF55AA', '#FFAA55', '#FFFF00'],\n        5: ['#FF00FF', '#FF40BF', '#FF8080', '#FFBF40', '#FFFF00'],\n        6: ['#FF00FF', '#FF33CC', '#FF6699', '#FF9966', '#FFCC33', '#FFFF00'],\n        7: ['#FF00FF', '#FF2BD5', '#FF55AA', '#FF8080', '#FFAA55', '#FFD52A', '#FFFF00'],\n        8: ['#FF00FF', '#FF24DB', '#FF49B6', '#FF6D92', '#FF926D', '#FFB649', '#FFDB24', '#FFFF00'],\n        9: ['#FF00FF', '#FF20DF', '#FF40BF', '#FF609F', '#FF8080', '#FF9F60', '#FFBF40', '#FFDF20', '#FFFF00'],\n        10: ['#FF00FF', '#FF1CE3', '#FF39C6', '#FF55AA', '#FF718E', '#FF8E71', '#FFAA55', '#FFC639', '#FFE31C', '#FFFF00'],\n    },\n    'spring-reverse': {\n        3: ['#FFFF00', '#FF8080', '#FF00FF'],\n        4: ['#FFFF00', '#FFAA55', '#FF55AA', '#FF00FF'],\n        5: ['#FFFF00', '#FFBF40', '#FF8080', '#FF40BF', '#FF00FF'],\n        6: ['#FFFF00', '#FFCC33', '#FF9966', '#FF6699', '#FF33CC', '#FF00FF'],\n        7: ['#FFFF00', '#FFD52A', '#FFAA55', '#FF8080', '#FF55AA', '#FF2BD5', '#FF00FF'],\n        8: ['#FFFF00', '#FFDB24', '#FFB649', '#FF926D', '#FF6D92', '#FF49B6', '#FF24DB', '#FF00FF'],\n        9: ['#FFFF00', '#FFDF20', '#FFBF40', '#FF9F60', '#FF8080', '#FF609F', '#FF40BF', '#FF20DF', '#FF00FF'],\n        10: ['#FFFF00', '#FFE31C', '#FFC639', '#FFAA55', '#FF8E71', '#FF718E', '#FF55AA', '#FF39C6', '#FF1CE3', '#FF00FF'],\n    },\n    'summer': {\n        3: ['#008066', '#80BF66', '#FFFF66'],\n        4: ['#008066', '#55AA66', '#AAD466', '#FFFF66'],\n        5: ['#008066', '#409F66', '#80BF66', '#BFDF66', '#FFFF66'],\n        6: ['#008066', '#339966', '#66B366', '#99CC66', '#CCE666', '#FFFF66'],\n        7: ['#008066', '#2B9566', '#55AA66', '#80BF66', '#AAD466', '#D5EA66', '#FFFF66'],\n        8: ['#008066', '#249266', '#49A466', '#6DB666', '#92C866', '#B6DB66', '#DBED66', '#FFFF66'],\n        9: ['#008066', '#208F66', '#409F66', '#60AF66', '#80BF66', '#9FCF66', '#BFDF66', '#DFEF66', '#FFFF66'],\n        10: ['#008066', '#1C8E66', '#399C66', '#55AA66', '#71B866', '#8EC666', '#AAD466', '#C6E366', '#E3F166', '#FFFF66'],\n    },\n    'summer-reverse': {\n        3: ['#FFFF66', '#80BF66', '#008066'],\n        4: ['#FFFF66', '#AAD466', '#55AA66', '#008066'],\n        5: ['#FFFF66', '#BFDF66', '#80BF66', '#409F66', '#008066'],\n        6: ['#FFFF66', '#CCE666', '#99CC66', '#66B366', '#339966', '#008066'],\n        7: ['#FFFF66', '#D5EA66', '#AAD466', '#80BF66', '#55AA66', '#2B9566', '#008066'],\n        8: ['#FFFF66', '#DBED66', '#B6DB66', '#92C866', '#6DB666', '#49A466', '#249266', '#008066'],\n        9: ['#FFFF66', '#DFEF66', '#BFDF66', '#9FCF66', '#80BF66', '#60AF66', '#409F66', '#208F66', '#008066'],\n        10: ['#FFFF66', '#E3F166', '#C6E366', '#AAD466', '#8EC666', '#71B866', '#55AA66', '#399C66', '#1C8E66', '#008066'],\n    },\n    'autumn': {\n        3: ['#FF0000', '#FF8000', '#FFFF00'],\n        4: ['#FF0000', '#FF5500', '#FFAA00', '#FFFF00'],\n        5: ['#FF0000', '#FF4000', '#FF8000', '#FFBF00', '#FFFF00'],\n        6: ['#FF0000', '#FF3300', '#FF6600', '#FF9900', '#FFCC00', '#FFFF00'],\n        7: ['#FF0000', '#FF2B00', '#FF5500', '#FF8000', '#FFAA00', '#FFD500', '#FFFF00'],\n        8: ['#FF0000', '#FF2400', '#FF4900', '#FF6D00', '#FF9200', '#FFB600', '#FFDB00', '#FFFF00'],\n        9: ['#FF0000', '#FF2000', '#FF4000', '#FF6000', '#FF8000', '#FF9F00', '#FFBF00', '#FFDF00', '#FFFF00'],\n        10: ['#FF0000', '#FF1C00', '#FF3900', '#FF5500', '#FF7100', '#FF8E00', '#FFAA00', '#FFC600', '#FFE300', '#FFFF00'],\n    },\n    'autumn-reverse': {\n        3: ['#FFFF00', '#FF8000', '#FF0000'],\n        4: ['#FFFF00', '#FFAA00', '#FF5500', '#FF0000'],\n        5: ['#FFFF00', '#FFBF00', '#FF8000', '#FF4000', '#FF0000'],\n        6: ['#FFFF00', '#FFCC00', '#FF9900', '#FF6600', '#FF3300', '#FF0000'],\n        7: ['#FFFF00', '#FFD500', '#FFAA00', '#FF8000', '#FF5500', '#FF2B00', '#FF0000'],\n        8: ['#FFFF00', '#FFDB00', '#FFB600', '#FF9200', '#FF6D00', '#FF4900', '#FF2400', '#FF0000'],\n        9: ['#FFFF00', '#FFDF00', '#FFBF00', '#FF9F00', '#FF8000', '#FF6000', '#FF4000', '#FF2000', '#FF0000'],\n        10: ['#FFFF00', '#FFE300', '#FFC600', '#FFAA00', '#FF8E00', '#FF7100', '#FF5500', '#FF3900', '#FF1C00', '#FF0000'],\n    },\n    'winter': {\n        3: ['#0000FF', '#0080BF', '#00FF80'],\n        4: ['#0000FF', '#0055D5', '#00AAAA', '#00FF80'],\n        5: ['#0000FF', '#0040DF', '#0080BF', '#00BF9F', '#00FF80'],\n        6: ['#0000FF', '#0033E6', '#0066CC', '#0099B3', '#00CC99', '#00FF80'],\n        7: ['#0000FF', '#002BEA', '#0055D5', '#0080BF', '#00AAAA', '#00D595', '#00FF80'],\n        8: ['#0000FF', '#0024ED', '#0049DB', '#006DC8', '#0092B6', '#00B6A4', '#00DB92', '#00FF80'],\n        9: ['#0000FF', '#0020EF', '#0040DF', '#0060CF', '#0080BF', '#009FAF', '#00BF9F', '#00DF8F', '#00FF80'],\n        10: ['#0000FF', '#001CF1', '#0039E3', '#0055D5', '#0071C6', '#008EB8', '#00AAAA', '#00C69C', '#00E38E', '#00FF80'],\n    },\n    'winter-reverse': {\n        3: ['#00FF80', '#0080BF', '#0000FF'],\n        4: ['#00FF80', '#00AAAA', '#0055D5', '#0000FF'],\n        5: ['#00FF80', '#00BF9F', '#0080BF', '#0040DF', '#0000FF'],\n        6: ['#00FF80', '#00CC99', '#0099B3', '#0066CC', '#0033E6', '#0000FF'],\n        7: ['#00FF80', '#00D595', '#00AAAA', '#0080BF', '#0055D5', '#002BEA', '#0000FF'],\n        8: ['#00FF80', '#00DB92', '#00B6A4', '#0092B6', '#006DC8', '#0049DB', '#0024ED', '#0000FF'],\n        9: ['#00FF80', '#00DF8F', '#00BF9F', '#009FAF', '#0080BF', '#0060CF', '#0040DF', '#0020EF', '#0000FF'],\n        10: ['#00FF80', '#00E38E', '#00C69C', '#00AAAA', '#008EB8', '#0071C6', '#0055D5', '#0039E3', '#001CF1', '#0000FF'],\n    },\n    'gray': {\n        3: ['#000000', '#808080', '#FFFFFF'],\n        4: ['#000000', '#555555', '#AAAAAA', '#FFFFFF'],\n        5: ['#000000', '#404040', '#808080', '#BFBFBF', '#FFFFFF'],\n        6: ['#000000', '#333333', '#666666', '#999999', '#CCCCCC', '#FFFFFF'],\n        7: ['#000000', '#2B2B2B', '#555555', '#808080', '#AAAAAA', '#D5D5D5', '#FFFFFF'],\n        8: ['#000000', '#242424', '#494949', '#6D6D6D', '#929292', '#B6B6B6', '#DBDBDB', '#FFFFFF'],\n        9: ['#000000', '#202020', '#404040', '#606060', '#808080', '#9F9F9F', '#BFBFBF', '#DFDFDF', '#FFFFFF'],\n        10: ['#000000', '#1C1C1C', '#393939', '#555555', '#717171', '#8E8E8E', '#AAAAAA', '#C6C6C6', '#E3E3E3', '#FFFFFF'],\n    },\n    'gray-reverse': {\n        3: ['#FFFFFF', '#808080', '#000000'],\n        4: ['#FFFFFF', '#AAAAAA', '#555555', '#000000'],\n        5: ['#FFFFFF', '#BFBFBF', '#808080', '#404040', '#000000'],\n        6: ['#FFFFFF', '#CCCCCC', '#999999', '#666666', '#333333', '#000000'],\n        7: ['#FFFFFF', '#D5D5D5', '#AAAAAA', '#808080', '#555555', '#2B2B2B', '#000000'],\n        8: ['#FFFFFF', '#DBDBDB', '#B6B6B6', '#929292', '#6D6D6D', '#494949', '#242424', '#000000'],\n        9: ['#FFFFFF', '#DFDFDF', '#BFBFBF', '#9F9F9F', '#808080', '#606060', '#404040', '#202020', '#000000'],\n        10: ['#FFFFFF', '#E3E3E3', '#C6C6C6', '#AAAAAA', '#8E8E8E', '#717171', '#555555', '#393939', '#1C1C1C', '#000000'],\n    },\n    'bone': {\n        3: ['#000020', '#708F8F', '#FFFFFF'],\n        4: ['#000020', '#4A6A6A', '#A5B5B5', '#FFFFFF'],\n        5: ['#000020', '#385858', '#7A8F8F', '#BDC7C7', '#FFFFFF'],\n        6: ['#000010', '#2D2D4D', '#596979', '#86A6A6', '#C2D2D2', '#FFFFFF'],\n        7: ['#000010', '#252545', '#4A5A6A', '#708F8F', '#9FB5B5', '#CFDADA', '#FFFFFF'],\n        8: ['#00000B', '#202035', '#404060', '#606A80', '#80959F', '#9FBFBF', '#CFDFDF', '#FFFFFF'],\n        9: ['#00000B', '#1C1C31', '#383858', '#545E74', '#70858F', '#8BABAB', '#B2C7C7', '#D8E3E3', '#FFFFFF'],\n        10: ['#00000B', '#19192E', '#323251', '#4A556A', '#637883', '#7C9C9C', '#9DB5B5', '#BDCDCD', '#DEE6E6', '#FFFFFF'],\n    },\n    'bone-reverse': {\n        3: ['#FFFFFF', '#708F8F', '#000020'],\n        4: ['#FFFFFF', '#A5B5B5', '#4A6A6A', '#000020'],\n        5: ['#FFFFFF', '#BDC7C7', '#7A8F8F', '#385858', '#000020'],\n        6: ['#FFFFFF', '#C2D2D2', '#86A6A6', '#596979', '#2D2D4D', '#000010'],\n        7: ['#FFFFFF', '#CFDADA', '#9FB5B5', '#708F8F', '#4A5A6A', '#252545', '#000010'],\n        8: ['#FFFFFF', '#CFDFDF', '#9FBFBF', '#80959F', '#606A80', '#404060', '#202035', '#00000B'],\n        9: ['#FFFFFF', '#D8E3E3', '#B2C7C7', '#8BABAB', '#70858F', '#545E74', '#383858', '#1C1C31', '#00000B'],\n        10: ['#FFFFFF', '#DEE6E6', '#BDCDCD', '#9DB5B5', '#7C9C9C', '#637883', '#4A556A', '#323251', '#19192E', '#00000B'],\n    },\n    'copper': {\n        3: ['#000000', '#9F643F', '#FFC77F'],\n        4: ['#000000', '#6A422A', '#D48555', '#FFC77F'],\n        5: ['#000000', '#503220', '#9F643F', '#EF955F', '#FFC77F'],\n        6: ['#000000', '#402819', '#805033', '#BF784C', '#FF9F65', '#FFC77F'],\n        7: ['#000000', '#352115', '#6A422A', '#9F643F', '#D48555', '#FFA66A', '#FFC77F'],\n        8: ['#000000', '#2E1C12', '#5B3924', '#895536', '#B67248', '#E48E5B', '#FFAB6D', '#FFC77F'],\n        9: ['#000000', '#281910', '#503220', '#784B30', '#9F643F', '#C77D4F', '#EF955F', '#FFAE6F', '#FFC77F'],\n        10: ['#000000', '#23160E', '#472C1C', '#6A422A', '#8E5938', '#B16F46', '#D48555', '#F89B63', '#FFB171', '#FFC77F'],\n    },\n    'copper-reverse': {\n        3: ['#FFC77F', '#9F643F', '#000000'],\n        4: ['#FFC77F', '#D48555', '#6A422A', '#000000'],\n        5: ['#FFC77F', '#EF955F', '#9F643F', '#503220', '#000000'],\n        6: ['#FFC77F', '#FF9F65', '#BF784C', '#805033', '#402819', '#000000'],\n        7: ['#FFC77F', '#FFA66A', '#D48555', '#9F643F', '#6A422A', '#352115', '#000000'],\n        8: ['#FFC77F', '#FFAB6D', '#E48E5B', '#B67248', '#895536', '#5B3924', '#2E1C12', '#000000'],\n        9: ['#FFC77F', '#FFAE6F', '#EF955F', '#C77D4F', '#9F643F', '#784B30', '#503220', '#281910', '#000000'],\n        10: ['#FFC77F', '#FFB171', '#F89B63', '#D48555', '#B16F46', '#8E5938', '#6A422A', '#472C1C', '#23160E', '#000000'],\n    },\n    'pink': {\n        3: ['#930000', '#D0D093', '#FFFFFF'],\n        4: ['#930000', '#BEBE78', '#E1E1C7', '#FFFFFF'],\n        5: ['#930000', '#B4B468', '#D0D0AA', '#E9E9D9', '#FFFFFF'],\n        6: ['#680000', '#AE5D5D', '#C6A884', '#DADAA1', '#EDEDD5', '#FFFFFF'],\n        7: ['#680000', '#AA5555', '#BE9F78', '#D0D093', '#E1E1BE', '#F0F0E1', '#FFFFFF'],\n        8: ['#550000', '#904F4F', '#B96F6F', '#C9A188', '#D8C69D', '#E5E5B0', '#F3F3DB', '#FFFFFF'],\n        9: ['#550000', '#8D4A4A', '#B46868', '#C39980', '#D0BE93', '#DDDDA5', '#E9E9C7', '#F4F4E5', '#FFFFFF'],\n        10: ['#550000', '#8B4545', '#B16262', '#BE9378', '#CAB88B', '#D6D69B', '#E1E1B9', '#EBEBD3', '#F5F5EA', '#FFFFFF'],\n    },\n    'pink-reverse': {\n        3: ['#FFFFFF', '#D0D093', '#930000'],\n        4: ['#FFFFFF', '#E1E1C7', '#BEBE78', '#930000'],\n        5: ['#FFFFFF', '#E9E9D9', '#D0D0AA', '#B4B468', '#930000'],\n        6: ['#FFFFFF', '#EDEDD5', '#DADAA1', '#C6A884', '#AE5D5D', '#680000'],\n        7: ['#FFFFFF', '#F0F0E1', '#E1E1BE', '#D0D093', '#BE9F78', '#AA5555', '#680000'],\n        8: ['#FFFFFF', '#F3F3DB', '#E5E5B0', '#D8C69D', '#C9A188', '#B96F6F', '#904F4F', '#550000'],\n        9: ['#FFFFFF', '#F4F4E5', '#E9E9C7', '#DDDDA5', '#D0BE93', '#C39980', '#B46868', '#8D4A4A', '#550000'],\n        10: ['#FFFFFF', '#F5F5EA', '#EBEBD3', '#E1E1B9', '#D6D69B', '#CAB88B', '#BE9378', '#B16262', '#8B4545', '#550000'],\n    },\n}","import React, { Component } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, TextField, MenuItem, FormControl, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core'\n\nimport Switch from \"react-switch\";\n\nimport LineGraph from './LineGraph.js'\n\nimport colormaps from '../../../color'\n\nconst styles = theme => ({\n    optionsContainerRoot: {\n        padding: '2%',\n        overflow: \"scroll\",\n    },\n    optionsContainer: {\n        margin: theme.spacing(0, 0, 3, 0)\n    },\n    select: {\n        width: \"90%\"\n    },\n    legends: {\n        maxHeight: \"310px\"\n    },\n    formControl: {\n        margin: theme.spacing(0, 0, 0, 0),\n    },\n});\n\n// choose n random values from array\n// credit to https://stackoverflow.com/questions/11935175/sampling-a-random-subset-from-an-array\nfunction getRandomSubarray(arr, n) {\n    var shuffled = arr.slice(0), i = arr.length, temp, index;\n    while (i--) {\n        index = Math.floor((i + 1) * Math.random());\n        temp = shuffled[index];\n        shuffled[index] = shuffled[i];\n        shuffled[i] = temp;\n    }\n    return shuffled.slice(0, n);\n}\n\nclass LineFrame extends Component {\n\n    constructor(props) {\n        super(props);\n\n        const { projectName, topicName, variableX, storage } = props;\n\n        this.state = {\n            previousProjectName: undefined,\n            normalizerData: undefined,\n\n            curve: \"cardinal\",\n            stacked: false,\n            selectedKeys: getRandomSubarray(Object.keys(storage), 6)\n        }\n\n        this.changeInput = this.changeInput.bind(this);\n        this.checkBox = this.checkBox.bind(this);\n    }\n\n    // ============================ Input Handlers ========================== //\n    checkBox(event, checked) {\n        const { selectedKeys } = this.state\n\n        if (selectedKeys.length === 10 && checked) {\n            // maximum data point comparision exceed, do nothing\n            return;\n        }\n\n        const name = event.target.name;\n        const index = selectedKeys.indexOf(name);\n\n        if (index >= 0) {\n            selectedKeys.splice(index, 1)\n        } else {\n            selectedKeys.push(name)\n        }\n        this.setState({\n            selectedKeys: selectedKeys\n        })\n    }\n\n    changeInput(event) {\n        if (event === \"stacked\") {\n            this.setState({\n                stacked: !this.state.stacked\n            })\n        } else {\n            this.setState({\n                [event.target.name]: event.target.value\n            })\n        }\n    }\n\n    render() {\n        const { classes, color, variableName, variableX, normalizerX, storage, projectName, normalizerData } = this.props;\n        const colors = colormaps[color][10];\n\n        const { stacked, curve, selectedKeys } = this.state;\n\n        var title = projectName;\n        if (normalizerX !== \"None\") {\n            title = title + \" / \" + normalizerX\n        }\n\n        // ------------------------------------- block -------------------------------\n        let filteredEntries = [];\n        let filteredData = [];\n\n        var year;\n        var min_value = undefined;\n        var max_value = undefined;\n        var stacked_values = [];\n        var max_stacked = undefined;\n\n        if(selectedKeys.length>0){\n\n            var min_year = undefined;\n            var max_year = undefined;\n            \n            selectedKeys.sort().forEach(dataKey => {\n\n                var normalizedEntry = {\"id\":dataKey};\n\n                variableX.forEach(varKey => {\n                    // initialize\n                    if(normalizedEntry.data===undefined){\n                        normalizedEntry.data = {};\n                        for(year in storage[dataKey][varKey]) normalizedEntry.data[year] = 0;\n                    }\n\n                    // loop, will be undefined if not all variables have the value in that year\n                    if(varKey===\"3\" && dataKey===\"Livestock Head Total\") console.log(storage[dataKey][varKey])\n                    for(year in normalizedEntry.data){\n                        if( storage[dataKey][varKey]        !== undefined &&    // missing item\n                            storage[dataKey][varKey][year]  !== undefined &&    // missing year of item\n                            normalizedEntry.data[year]      !== undefined)      // missing year of other items\n                        {\n                            \n                            if(varKey===\"3\" && dataKey===\"Livestock Head Total\") console.log(\"HERE\")\n                            var variableEntryValue = Number(storage[dataKey][varKey][year]);\n                            if (normalizerX !== \"None\"){\n\n                                if( normalizerData[normalizerX].hasOwnProperty(varKey) &&\n                                    normalizerData[normalizerX][varKey].hasOwnProperty(year) &&\n                                    parseFloat(normalizerData[normalizerX][varKey][year]) !== 0){\n\n                                    const normalizer = normalizerData[normalizerX][varKey][year];\n                                    normalizedEntry.data[year] += variableEntryValue/normalizer;\n\n                                }else normalizedEntry.data[year] = undefined;\n\n                            }else normalizedEntry.data[year] += variableEntryValue;\n\n                        }else normalizedEntry.data[year] = undefined;\n                    };\n                })\n\n                const years = Object.keys(normalizedEntry.data);\n                const this_min_year = Math.min(...years);\n                const this_max_year = Math.max(...years);\n\n                if(min_year===undefined || this_min_year < min_year) min_year = this_min_year;\n                if(max_year===undefined || this_max_year > max_year) max_year = this_max_year;\n\n                filteredEntries.push(normalizedEntry);\n            })\n\n            for(year=min_year; year<=max_year; year++) stacked_values.push(0);\n\n            filteredData = filteredEntries.map(entry => {\n                var normalizedData = [];\n                for(year=min_year; year<=max_year; year++){\n                    if(entry.data[year]===undefined){\n                        entry.data[year]=null;\n                        stacked_values[year-min_year] = null;\n                    }\n                    else{\n                        var val = entry.data[year];\n                        if(min_value===undefined || val < min_value) min_value = val;\n                        if(max_value===undefined || val > max_value) max_value = val;\n                        if(stacked_values[year-min_year]!==null) \n                            stacked_values[year-min_year] += val;\n                    }\n\n                    normalizedData.push({\n                        \"x\": year.toString(),\n                        \"y\": entry.data[year]\n                    })\n                }\n\n                return {\n                    \"data\": normalizedData,\n                    \"id\": entry.id\n                }\n            });\n        }\n\n        stacked_values.forEach(item => {\n            if(item !== null && (max_stacked===undefined || max_stacked < item)) max_stacked = item;\n        })\n\n        // ------------------------------------- block -------------------------------\n\n        return (\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n                <Grid item xs={12} sm={12} md={9} lg={9}>\n                    <LineGraph\n                        data={filteredData}\n                        stacked={stacked}\n                        area={stacked}\n                        curve={curve}\n                        title={title}\n                        colors={colors}\n                        min_value={min_value}\n                        max_value={max_value}\n                        max_stacked={max_stacked}\n                    />\n                </Grid>\n                <Grid item container xs={12} sm={12} md={3} lg={3} className={classes.optionsContainerRoot}  style={{ maxHeight: \"580px\" }}>\n                    <Grid item xs={12} style={{ display: 'flex' }} className={classes.optionsContainer}>\n                        <Switch onColor=\"#222429\"\n                            onChange={() => { this.changeInput(\"stacked\") }}\n                            checked={stacked}\n                            value={stacked} />\n                        <div style={{ marginLeft: \"4%\", fontFamily: \"Verdana\" }}>Stacked</div>\n                    </Grid>\n                    <Grid item xs={12} className={classes.optionsContainer}>\n                        <TextField select\n                            className={classes.select}\n\n                            label=\"Curve Type\"\n                            onChange={this.changeInput}\n                            value={curve}\n                            name=\"curve\"\n                            InputLabelProps={{ shrink: true }}\n                        >\n                            <MenuItem value={'cardinal'}>Curved</MenuItem>\n                            <MenuItem value={'linear'}  >Linear</MenuItem>\n                        </TextField>\n                    </Grid>\n                    <Grid item xs={12} className={classes.optionsContainer}>\n                        {selectedKeys.map(dataKey =>\n                            <FormControlLabel key={dataKey} label={dataKey}\n                                control={<Checkbox name={dataKey} checked={true} onChange={this.checkBox} />}\n                            />\n                        )}\n                        <hr/>\n                        {Object.keys(storage).map((dataKey, i) => {\n                            return !selectedKeys.includes(dataKey) && <FormControlLabel key={i} label={dataKey}\n                                control={<Checkbox name={dataKey} checked={false} onChange={this.checkBox} />}\n                            />\n                        })}\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(styles)(LineFrame)","export default function lighten(col) {\n  \n    var usePound = false;\n  \n    if (col[0] == \"#\") {\n        col = col.slice(1);\n        usePound = true;\n    }\n \n    var num = parseInt(col,16);\n \n    var r = (num >> 16);\n    var b = ((num >> 8) & 0x00FF);\n    var g = (num & 0x0000FF);\n\n    var amt = (660-r-g-b)/3;\n\n    r+=amt;\n    b+=amt;\n    g+=amt;\n\n    if(r>255) r = 255;\n    if(r<150) r = 150;\n    if(g>255) g = 255;\n    if(g<150) g = 150;\n    if(b>255) b = 255;\n    if(b<150) b = 150;\n \n    return (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n  \n}","import React, { useState, useEffect } from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { Bar } from '@nivo/bar';\nimport PlayIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport Fab from '@material-ui/core/Fab';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\nimport { withStyles } from '@material-ui/core/styles';\nimport lighten from '../../../lighten';\n\n\nconst styles = theme => ({\n    chartContainer: {\n        flexGrow: 1,\n        width: '100%',\n        backgroundColor: \"white\",\n\n        padding: 0,\n        margin: 0,\n    },\n    gridContainer: {\n        paddingBottom: \"10px\",\n        alignItems:\"center\",\n        justifyItems:\"center\",\n        textAlign:\"center\"\n    },\n    formControl: {\n        width: \"100%\",\n        marginTop: \"10px\",\n    },\n    select: {\n        height: \"40px\"\n    }\n});\n\nconst stylesM = {\n    mark :{\n        width:\"2px\",\n        height:\"5px\",\n        backgroundColor:\"blue\"\n    }\n}\n\nconst StyledSlider = withStyles(stylesM)(Slider);\n\n\n// custom bar component, label inside\nconst BarComponent = props => {\n    var txt = null;\n\n    // if bar too small for text\n    if(15*props.data.id.toString().length < props.width && 15*2 < props.height){\n        txt= [<text\n            key={props.data.data.id.toString()+props.data.id.toString()+\"id\"}\n            x={props.width - 16}\n            y={props.height / 2 - 8}\n            textAnchor=\"end\"\n            dominantBaseline=\"central\"\n            fill=\"black\"\n            style={{\n            fontWeight: 900,\n            fontSize: 15,\n            }}\n        >\n            {props.data.id}\n        </text>,\n        <text\n            key={props.data.data.id.toString()+props.data.id.toString()+\"val\"}\n            x={props.width - 16}\n            y={props.height / 2 + 10}\n            textAnchor=\"end\"\n            dominantBaseline=\"central\"\n            fill={\"rgb(0,0,0)\"}\n            style={{\n            fontWeight: 400,\n            fontSize: 13,\n            }}\n        >\n            {props.data.value}\n        </text>]\n    }\n\n    const LightTooltip = withStyles(theme => ({\n        tooltip: {\n          backgroundColor: lighten(props.color),\n          color: 'rgba(0, 0, 0, 0.87)',\n          boxShadow: theme.shadows[1],\n          fontSize: 11,\n        },\n      }))(Tooltip);\n\n    return (\n        <LightTooltip TransitionComponent={Zoom} title={\n            <React.Fragment >\n                <Grid container direction=\"row\" \n                    style={{\n                            marginTop:\"5px\",marginBottom:\"5px\", \n                            font:\"bold 12px Courier\", whiteSpace:\"nowrap\"}}>\n                    {props.data.id} - {props.data.value}\n                </Grid>\n            </React.Fragment>\n        } placement=\"right\">\n            <g transform={`translate(${props.x},${props.y})`}>\n                <rect   x={-3} y={7} width={props.width} height={props.height} \n                        fill=\"rgba(0, 0, 0, .07)\" />\n                <rect   width={props.width} height={props.height} fill={props.color} \n                        style={{strokeWidth:2, stroke:\"rgb(0,0,0)\"}} />\n                <rect   x={props.width - 5} width={5} height={props.height} \n                        fill={\"rgb(0,0,0)\"} fillOpacity={0.2} />\n                {txt}\n            </g>\n        </LightTooltip>\n    );\n};\n\nconst BarGraph = (props) => {\n\n    const classes = props.classes;\n\n    const dataGenerator = props.data;\n    var groupMode = \"grouped\";\n    if(props.groupMode){\n        groupMode = \"stacked\";\n    }\n    const [current, setCurrent] = useState([0,0]);\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if(current[1]){\n                setCurrent([(current[0] + 1)%dataGenerator.length,current[1]]);\n            }\n        }, 1400);\n        return () => clearTimeout(timer);\n    }, [current, setCurrent]);\n\n    if(props.data.length===0){\n        current[0] = 0;\n        return null;\n    } \n    \n    if(current[0] >= props.data.length){\n        current[0] = props.data.length-1;\n    }\n\n    var barData = [];\n\n    if(props.ranking===\"top\"){\n        barData = dataGenerator[current[0]][1].sort((a, b) => a._total-b._total);\n    }else{\n        barData = dataGenerator[current[0]][1].sort((a, b) => b._total-a._total);\n    }\n    barData = barData.slice(dataGenerator[current[0]][1].length-props.numberOfItems);\n\n\n    const max = props.stacked ? dataGenerator[current[0]][2] : dataGenerator[current[0]][3];\n\n    var yDiv = 1;\n    var mul = 0;\n    while(Math.abs(max / yDiv) >= 1000){ yDiv *= 1000; mul+=3}\n    while(Math.abs(max / yDiv) < 1){ yDiv /= 1000; mul-=3;}\n\n    const title =   yDiv===1 ? props.title : \n                    props.title + \" x 10^\" + mul.toString();\n\n    \n    return (\n        <>\n            <div id=\"dp-graphdiv\" style={{width:\"700px\",height:\"500px\"}}>\n                <Bar\n                    barComponent={BarComponent}\n                    width={700}\n                    height={500}\n                    data={barData}\n                    keys={props.pkeys}\n                    indexBy=\"id\"\n                    colorBy=\"id\"\n                    margin={{ top: 50, right: 60, bottom: 50, left: 80 }}\n                    padding={0.3}\n                    groupMode={groupMode}\n                    layout=\"horizontal\"\n                    colors={props.colors}\n                    borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                    axisTop={null}\n                    axisRight={null}\n                    axisBottom={{\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: title,\n                        legendPosition: 'middle',\n                        legendOffset: 32,\n                        format: (value) => {return Math.round(value/yDiv*10)/10;}\n                    }}\n                    enableGridX={false}\n                    enableGridY={false}\n                    axisLeft={{\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legendPosition: 'middle',\n                        legendOffset: -40\n                    }}\n                    labelSkipWidth={12}\n                    labelSkipHeight={12}\n                    labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                    animate={true}\n                    motionStiffness={90}\n                    motionDamping={15}\n                />\n            </div>\n        \n            {/* ----------------------------------- Year ----------------------------------- */}\n            <h2 style={{ marginLeft: 60, fontWeight: 400, color: '#555', textAlign:\"center\" }}>\n                <strong style={{ color: 'black', fontWeight: 900 }}>{dataGenerator[current[0]][0]}</strong>\n            </h2>\n\n            {/* --------------------------  Player and Progress Bar-------------------------- */}\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className={classes.chartContainer}>\n                <Grid item xs={2} className={classes.gridContainer}>\n                    <Fab onClick={()=>{setCurrent([(current[0] - current[1]+1)%dataGenerator.length,1-current[1]])}}\n                        size=\"medium\" aria-label=\"Add\">\n                        {[<PlayIcon />,<PauseIcon />][current[1]]}\n                    </Fab>\n                </Grid>\n                \n                <Grid item xs={9} className={classes.gridContainer}>\n                    <StyledSlider value={current[0]}\n                            style={{width:\"100%\"}}\n                            aria-labelledby=\"discrete-slider\"\n                            step={1}\n                            onChange={(event, newValue)=>{setCurrent([newValue,current[1]])}}\n                            marks\n                            min={0}\n                            max={dataGenerator.length-1}/>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default withStyles(styles)(BarGraph);","// missing data will not be shown\n\nimport React, { Component } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, TextField, MenuItem, FormControl, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core'\n\nimport Switch from \"react-switch\";\n\nimport BarGraph from './BarGraph.js'\n\nimport colormaps from '../../../color'\n\nconst styles = theme => ({\n    optionsContainerRoot: {\n        padding: '2%',\n        overflow: \"scroll\",\n    },\n    optionsContainer: {\n        margin: theme.spacing(0, 0, 3, 0)\n    },\n    select: {\n        width: \"90%\"\n    },\n    legends: {\n        maxHeight: \"310px\"\n    },\n    formControl: {\n        margin: theme.spacing(0, 0, 0, 0),\n    },\n});\n\n// choose n random values from array\n// credit to https://stackoverflow.com/questions/11935175/sampling-a-random-subset-from-an-array\nfunction getRandomSubarray(arr, n) {\n    var shuffled = arr.slice(0), i = arr.length, temp, index;\n    while (i--) {\n        index = Math.floor((i + 1) * Math.random());\n        temp = shuffled[index];\n        shuffled[index] = shuffled[i];\n        shuffled[i] = temp;\n    }\n    return shuffled.slice(0, n);\n}\n\nclass BarFrame extends Component {\n\n    constructor(props) {\n        super(props);\n\n        const { projectName, topicName, storage } = props;\n\n        this.state = {\n            previousProjectName: undefined,\n            normalizerData: undefined,\n\n            curve: \"cardinal\",\n            stacked: true,\n            selectedKeys: getRandomSubarray(Object.keys(storage), 6),\n            ranking         : \"top\",\n            numberOfItems   : 10\n        }\n\n        this.changeInput = this.changeInput.bind(this);\n        this.checkBox = this.checkBox.bind(this);\n    }\n\n    // ============================ Input Handlers ========================== //\n    checkBox(event, checked) {\n        const { selectedKeys } = this.state\n\n        if (selectedKeys.length === 10 && checked) {\n            // maximum data point comparision exceed, do nothing\n            return;\n        }\n\n        const name = event.target.name;\n        const index = selectedKeys.indexOf(name);\n\n        if (index >= 0) {\n            selectedKeys.splice(index, 1)\n        } else {\n            selectedKeys.push(name)\n        }\n        this.setState({\n            selectedKeys: selectedKeys\n        })\n    }\n\n    changeInput(event) {\n        if (event === \"stacked\") {\n            this.setState({\n                stacked: !this.state.stacked\n            })\n        } else {\n            this.setState({\n                [event.target.name]: event.target.value\n            })\n        }\n    }\n\n    render() {\n        const { classes, color, variableName, normalizerX, storage, projectName, normalizerData } = this.props;\n        const colors = colormaps[color][10];\n\n        const { stacked, curve, selectedKeys,numberOfItems, ranking } = this.state;\n\n        var title = projectName;\n        if (normalizerX !== \"None\") {\n            title = title + \" / \" + normalizerX\n        }\n\n        // ------------------------------------- block -------------------------------\n        let filteredEntries = {};\n        let filteredData = [];\n        var year, item;\n\n        if(selectedKeys.length>0){\n\n            selectedKeys.sort().forEach(dataKey => {\n                for(var varKey in storage[dataKey]){\n                    for(year in storage[dataKey][varKey]){\n\n                        if(filteredEntries[year]===undefined){\n                            filteredEntries[year]={};\n                        }\n\n                        if(filteredEntries[year][varKey]===undefined) \n                            filteredEntries[year][varKey]={_total:0};\n                        \n                        var variableEntryValue = Number(storage[dataKey][varKey][year]);\n                        if (normalizerX === \"None\") {\n                            filteredEntries[year][varKey][dataKey] = variableEntryValue;\n                            filteredEntries[year][varKey]._total += variableEntryValue;\n                        }\n                        else {\n                            if( normalizerData[normalizerX].hasOwnProperty(varKey) &&\n                                normalizerData[normalizerX][varKey].hasOwnProperty(year) &&\n                                parseFloat(normalizerData[normalizerX][varKey][year]) !== 0){\n                                const normalizer = normalizerData[normalizerX][varKey][year];\n                                variableEntryValue /= normalizer;\n                                filteredEntries[year][varKey][dataKey] = variableEntryValue;\n                                filteredEntries[year][varKey]._total += variableEntryValue;\n                            }\n                        }\n                    };\n                }\n            })\n\n            Object.keys(filteredEntries).sort().forEach(year => {\n\n                const entry = filteredEntries[year];\n                var max_stacked = undefined;\n                var max_value = undefined;\n                var normalizedData = [];\n                for(item in entry){\n                    if(Object.keys(entry[item]).length-1===selectedKeys.length){\n                        normalizedData.push({\"id\": item,...entry[item]});\n                        if(max_stacked===undefined || max_stacked<entry[item]._total) \n                            max_stacked = entry[item]._total;\n\n                        for(var value in entry[item]){\n                            const curr_v = entry[item][value];\n                            if(max_value===undefined || curr_v > max_value) max_value = curr_v;\n                        }\n                    }\n                }\n\n                filteredData.push([year,normalizedData,max_stacked, max_value])\n            });\n        }\n\n        // ------------------------------------- block -------------------------------\n\n        return (\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n                <Grid item xs={12} sm={12} md={9} lg={9}>\n                    <BarGraph\n                        data            = {filteredData} \n                        groupMode       = {stacked}\n                        title           = {title}\n                        pkeys           = {selectedKeys}\n                        numberOfItems   = {numberOfItems}\n                        ranking         = {ranking}\n                        colors          = {colors}\n                    />\n                </Grid>\n                <Grid item container xs={12} sm={12} md={3} lg={3} className={classes.optionsContainerRoot}  style={{ maxHeight: \"580px\" }}>\n                    <Grid item xs={12} style={{ display: 'flex' }} className={classes.optionsContainer}>\n                        <Switch onColor=\"#222429\"\n                            onChange={() => { this.changeInput(\"stacked\") }}\n                            checked={stacked}\n                            value={stacked} />\n                        <div style={{ marginLeft: \"4%\", fontFamily: \"Verdana\" }}>Stacked</div>\n                    </Grid>\n                    <Grid item xs={8} className={classes.optionsContainer}>\n                        <TextField select\n                            className={classes.select}\n\n                            label=\"Ranking\"\n                            onChange={this.changeInput}\n                            value={ranking}\n                            name=\"ranking\"\n                            InputLabelProps={{ shrink: true }}\n                        >\n                            <MenuItem value={'top'}>Top</MenuItem>\n                            <MenuItem value={'bottom'}  >Bottom</MenuItem>\n                        </TextField>\n                    </Grid>\n                    <Grid item xs={4} className={classes.optionsContainer}>\n                        <TextField select\n                            className={classes.select}\n\n                            label=\" \"\n                            onChange={this.changeInput}\n                            value={numberOfItems}\n                            name=\"numberOfItems\"\n                            InputLabelProps={{ shrink: true }}\n                        >\n                            {[5,10,15,20,25,30].map(key=> <MenuItem key={key} value={key}>{key}</MenuItem>)}\n                        </TextField>\n                    </Grid>\n                    <Grid item xs={12} className={classes.optionsContainer}>\n                        {selectedKeys.map(dataKey =>\n                            <FormControlLabel key={dataKey} label={dataKey}\n                                control={<Checkbox name={dataKey} checked={true} onChange={this.checkBox} />}\n                            />\n                        )}\n                        <hr/>\n                        {Object.keys(storage).map((dataKey, i) => {\n                            return !selectedKeys.includes(dataKey) && <FormControlLabel key={i} label={dataKey}\n                                control={<Checkbox name={dataKey} checked={false} onChange={this.checkBox} />}\n                            />\n                        })}\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(styles)(BarFrame)","import React, { useState, useEffect } from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { ResponsiveScatterPlot } from '@nivo/scatterplot'\nimport {Row} from 'reactstrap';\nimport PlayIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport Fab from '@material-ui/core/Fab';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport lighten from '../../../lighten';\n\n// styling slider to make mark bigger\nconst styles = {\n    mark :{\n        width:\"2px\",\n        height:\"5px\",\n        backgroundColor:\"blue\"\n    }\n}\nconst StyledSlider = withStyles(styles)(Slider);\n\nconst CustomNode = ({ node, x, y, size, blendMode, onMouseEnter, onMouseMove, onMouseLeave, onClick }) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n        <circle\n            r={size / 2}\n            fill={node.data.color}\n            style={{ mixBlendMode: blendMode }}\n            onMouseEnter={onMouseEnter}\n            onMouseMove={onMouseMove}\n            onMouseLeave={onMouseLeave}\n            onClick={onClick}\n        />\n        </g>\n    );\n}\n\nconst ScatterGraph = (props) => {\n\n    const classes = props.classes\n\n    const dataGenerator = props.dataGenerator;\n    const [current, setCurrent] = useState([0,0]);\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if(current[1]){\n                setCurrent([(current[0] + 1)%dataGenerator.length,current[1]]);\n            }\n        }, 1400);\n        return () => clearTimeout(timer);\n    }, [current, setCurrent]);\n\n\n    if(props.dataGenerator.length===0){\n        current[0] = 0;\n        return null;\n    }\n    \n    if(current[0] >= props.dataGenerator.length){\n        current[0] = props.dataGenerator.length-1;\n    }\n\n    const max_x = props.max_x[dataGenerator[current[0]][0]];\n    const max_y = props.max_y[dataGenerator[current[0]][0]];\n\n    console.log(props.max_x,props.max_y);\n\n    var xDiv = 1;\n    var xmul = 0;\n    while(Math.abs(max_x / xDiv) >= 1000){\n        xDiv *= 1000;\n        xmul += 3;\n    }\n    while(Math.abs(max_x / xDiv) < 1){\n        xDiv /= 1000;\n        xmul -= 3;\n    }\n\n    var yDiv = 1;\n    var ymul = 0;\n    while(Math.abs(max_y / yDiv) >= 1000){\n        yDiv *= 1000;\n        ymul += 3;\n    }\n    while(Math.abs(max_y / yDiv) < 1){\n        yDiv /= 1000;\n        ymul -= 3;\n    }\n\n    const title_x =     xmul===0 ? props.titleX : props.titleX + \" x 10^\" + xmul.toString();\n    const title_y =     ymul===0 ? props.titleY : props.titleY + \" x 10^\" + ymul.toString();\n\n    return (\n        <>\n        \n            <div style={{width:'100%',height:\"500px\"}} id=\"dp-graphdiv\" position=\"relative\">\n\n                <ResponsiveScatterPlot\n                    style={{zIndex: 1}}\n                    data={dataGenerator[current[0]][1]}\n                    useMesh={false}\n                    margin={{ top: 60, right: 60, bottom: 70, left: 90 }}\n                    xScale={{ type: 'linear', min: 'auto', max: 'auto' }}\n                    // xFormat={function(e){return e+\" kg\"}}\n                    yScale={{ type: 'linear', min: 'auto', max: 'auto' }}\n                    // yFormat={function(e){return e+\" cm\"}}\n                    colors={props.colors}\n                    blendMode=\"multiply\"\n                    axisTop={null}\n                    axisRight={null}\n                    axisBottom={{\n                        orient: 'bottom',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: title_x,\n                        legendPosition: 'middle',\n                        legendOffset: 60,\n                        format: (value) => {return Math.round(value/xDiv*10)/10;}\n                    }}\n                    renderNode={CustomNode}\n                    axisLeft={{\n                        orient: 'left',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: title_y,\n                        legendPosition: 'middle',\n                        legendOffset: -60,\n                        format: (value) => {return Math.round(value/yDiv*10)/10;}\n                    }}\n                    tooltip={({ node }) => {\n                        return(\n                        <div\n                          style={{\n                            color: \"black\",\n                            background: lighten(node.data.color),\n                            border: '2px solid #333',\n                            borderRadius: \"5px\",\n                            padding: '12px 16px',\n                          }}\n                        >\n                          <strong>\n                          {node.data.this_id} - {node.data.serieId}\n                          </strong>\n                          <br />\n                          {`${props.titleX}: ${node.data.formattedX}`}\n                          <br />\n                          {`${props.titleY}: ${node.data.formattedY}`}\n                        </div>\n                      )}}\n                />\n            </div>\n\n            {/* ----------------------------------- Year ----------------------------------- */}\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className={classes.chartContainer}>\n                <Grid item xs={12} className={classes.gridContainer}>\n                    <h2 style={{ paddingLeft:\"30px\", fontWeight: 400, color: '#555', textAlign:\"center\" }}>\n                        <strong style={{ color: 'black', fontWeight: 900 }}>{dataGenerator[current[0]][0]}</strong>\n                    </h2>\n                </Grid>\n            </Grid>\n\n            {/* --------------------------  Player and Progress Bar-------------------------- */}\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className={classes.chartContainer}>\n                <Grid item xs={1} className={classes.gridContainer}>\n                    <Fab onClick={()=>{setCurrent([(current[0] - current[1]+1)%dataGenerator.length,1-current[1]])}}\n                        size=\"medium\" aria-label=\"Add\">\n                        {[<PlayIcon />,<PauseIcon />][current[1]]}\n                    </Fab>\n                </Grid>\n                \n                <Grid item xs={10} className={classes.gridContainer}>\n                    <StyledSlider value={current[0]}\n                            style={{width:\"100%\"}}\n                            aria-labelledby=\"discrete-slider\"\n                            step={1}\n                            onChange={(event, newValue)=>{setCurrent([newValue,current[1]])}}\n                            marks\n                            min={0}\n                            max={dataGenerator.length-1}/>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default withStyles({gridContainer: {\n    paddingBottom: \"10px\",\n    alignItems:\"center\",\n    justifyItems:\"center\",\n    textAlign:\"left\"\n}})(ScatterGraph);","import React, { Component } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, TextField, MenuItem, FormControl, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core'\n\nimport Switch from \"react-switch\";\n\nimport ScatterGraph from './ScatterGraph.js'\n\nimport colormaps from '../../../color'\n\nconst styles = theme => ({\n    optionsContainerRoot: {\n        padding: '2%',\n        overflow: \"scroll\",\n    },\n    optionsContainer: {\n        margin: theme.spacing(0, 0, 3, 0)\n    },\n    select: {\n        width: \"90%\"\n    },\n    legends: {\n        maxHeight: \"310px\"\n    },\n    formControl: {\n        margin: theme.spacing(0, 0, 0, 0),\n    },\n});\n\n// choose n random values from array\n// credit to https://stackoverflow.com/questions/11935175/sampling-a-random-subset-from-an-array\nfunction getRandomSubarray(arr, n) {\n    var shuffled = arr.slice(0), i = arr.length, temp, index;\n    while (i--) {\n        index = Math.floor((i + 1) * Math.random());\n        temp = shuffled[index];\n        shuffled[index] = shuffled[i];\n        shuffled[i] = temp;\n    }\n    return shuffled.slice(0, n);\n}\n\nclass ScatterFrame extends Component {\n\n    constructor(props) {\n        super(props);\n\n        const { groups } = props;\n\n        this.state = {\n            previousProjectName: undefined,\n            topicName: undefined,\n            normalizerData: undefined,\n\n            selectedKeys: getRandomSubarray(Object.keys(groups), 6)\n        }\n\n        this.changeInput = this.changeInput.bind(this);\n        this.checkBox = this.checkBox.bind(this);\n    }\n\n    // ============================ Input Handlers ========================== //\n    checkBox(event, checked) {\n        const { selectedKeys } = this.state\n\n        if (selectedKeys.length === 10 && checked) {\n            // maximum data point comparision exceed, do nothing\n            return;\n        }\n\n        const name = event.target.name;\n        const index = selectedKeys.indexOf(name);\n\n        if (index >= 0) {\n            selectedKeys.splice(index, 1)\n        } else {\n            selectedKeys.push(name)\n        }\n        this.setState({\n            selectedKeys: selectedKeys\n        })\n    }\n\n    changeInput(event) {\n        if (event === \"stacked\") {\n            this.setState({\n                stacked: !this.state.stacked\n            })\n        } else {\n            this.setState({\n                [event.target.name]: event.target.value\n            })\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if(props.topicName !== state.topicName){\n            return{\n                topicName: props.topicName,\n                selectedKeys: getRandomSubarray(Object.keys(props.groups), 6)\n            }\n        }\n    }\n\n    render() {\n        const { classes, color, variableX, normalizerX, \n                storage, projectName,variableY, normalizerY, \n                groups, normalizerData} = this.props;\n        const colors = colormaps[color][10];\n\n        const { stacked, curve, selectedKeys } = this.state;\n\n        var title = projectName;\n        if (normalizerX !== \"None\") {\n            title = title + \" / \" + normalizerX\n        }\n\n        /*\n        [year,[\n            {\n                \"id\": \"group A\",\n                \"data\": [\n                {\n                    \"x\": 7,\n                    \"y\": 54\n                }]\n            }\n        ]]\n\n        */\n\n        // ------------------------------------- block -------------------------------\n        let filteredEntries = {};\n        let filteredData = [];\n\n        var year, item;\n        var max_x = {};\n        var max_y = {};\n\n        if(selectedKeys.length>0){\n            selectedKeys.sort().forEach((key,i)=>{\n                groups[key].forEach(item=>{\n                    for(year in storage[variableX][item]){\n\n                        if(filteredEntries[year]===undefined){\n                            filteredEntries[year]={};\n                        }\n\n                        if(filteredEntries[year][item]===undefined) \n                            filteredEntries[year][item]=[];\n                        \n                        var variableEntryX = Number(storage[variableX][item][year]);\n                        if(storage[variableY][item]!==undefined){\n                            var variableEntryY = Number(storage[variableY][item][year]);\n                            if (normalizerX !== \"None\") {\n                                if( normalizerData[normalizerX].hasOwnProperty(item) &&\n                                    normalizerData[normalizerX][item].hasOwnProperty(year) &&\n                                    parseFloat(normalizerData[normalizerX][item][year]) !== 0){\n                                        const normalizer_x = normalizerData[normalizerX][item][year];\n                                        variableEntryX /= normalizer_x;\n                                }else{\n                                    variableEntryX = null;\n                                }\n                            }\n\n                            if (normalizerY !== \"None\") {\n                                if( normalizerData[normalizerY].hasOwnProperty(item) &&\n                                    normalizerData[normalizerY][item].hasOwnProperty(year) &&\n                                    parseFloat(normalizerData[normalizerY][item][year]) !== 0){\n                                        const normalizer_y = normalizerData[normalizerY][item][year];\n                                        variableEntryY /= normalizer_y;\n                                }else{\n                                    variableEntryY = null;\n                                }\n                            }\n                            \n                            if(variableEntryX !== null && variableEntryY !==null){\n                                filteredEntries[year][item].push({\n                                    \"x\":variableEntryX,\n                                    \"y\":variableEntryY,\n                                    \"color\":colors[i],\n                                    \"this_id\":key\n                                });\n\n                                if(max_x[year]===undefined || max_x[year]<variableEntryX) \n                                    max_x[year] = variableEntryX;\n                                if(max_y[year]===undefined || max_y[year]<variableEntryY) \n                                    max_y[year] = variableEntryY;\n                            }\n\n                        }\n                    }\n                })\n                \n            })\n\n            filteredData = Object.keys(filteredEntries).sort().map(year => {\n                const entry = Object.keys(filteredEntries[year])\n                return [year, entry.sort().map(key=>{\n                    if(filteredEntries[year][key] === undefined) filteredEntries[year][key] = [];\n                    return {\"id\": key, \"data\":filteredEntries[year][key]}\n                })]\n            });\n        }\n\n        const titleX = normalizerX === \"None\" ? variableX : variableX + \" / \" + normalizerX;\n        const titleY = normalizerY === \"None\" ? variableY : variableY + \" / \" + normalizerY;\n\n\n        // ------------------------------------- block -------------------------------\n        const show = Object.keys(groups).length > 1;\n        return (\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n                <Grid item xs={12} sm={12} md={show ? 9 : 12} lg={show ? 9 : 12}>\n                    <ScatterGraph\n                        titleX={titleX}\n                        titleY={titleY}\n                        dataGenerator={filteredData}\n                        colors={colors}\n                        max_y = {max_y}\n                        max_x = {max_x}\n                    />\n                </Grid>\n                { show &&\n                <Grid item container xs={12} sm={12} md={3} lg={3} className={classes.optionsContainerRoot} style={{ maxHeight: \"580px\" }}>\n                    <Grid item xs={12} className={classes.optionsContainer}>\n                        {selectedKeys.sort().map((dataKey,i) => {\n\n                            var CustomCheckbox = withStyles({\n                                root: {\n                                    color: colors[i]\n                                }\n                            })(props => <Checkbox color=\"default\" {...props} />);\n\n                            return (\n                                <Grid item xs={12}>\n                                <FormControlLabel key={dataKey} label={dataKey}\n                                    control={\n                                <CustomCheckbox name={dataKey} checked={true} onChange={this.checkBox} />}\n                            /></Grid>);\n                        })}\n                        <hr/>\n                        {Object.keys(groups).sort().map((dataKey, i) => {\n                            return !selectedKeys.includes(dataKey) && \n                            <Grid item xs={12}>\n                                <FormControlLabel key={i} label={dataKey}\n                                    control={\n                                    <Checkbox name={dataKey} checked={false} onChange={this.checkBox} />\n                                }\n                            /></Grid>\n                        })}\n                    </Grid>\n                </Grid>}\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(styles)(ScatterFrame)","import React, { Component } from 'react';\n\nimport { withStyles } from '@material-ui/styles';\nimport { Grid, MenuItem, FormControl, TextField } from '@material-ui/core'\n\nimport LineFrame from './Charts/Line/LineFrame'\nimport BarFrame from './Charts/Bar/BarFrame'\nimport ScatterFrame from './Charts/Scatter/ScatterFrame'\n\n// import MapFrame from './Charts/Map/MapFrame'\n\nimport colors from '../color'\n\nconst styles = theme => ({\n    chartContainer: {\n        flexGrow: 1,\n        width: '100%',\n        backgroundColor: \"white\",\n\n        padding: 0,\n        margin: 0,\n    },\n    gridContainer: {\n        padding: \"10px\"\n    },\n    formControl: {\n        width: \"100%\",\n        marginTop: \"10px\",\n    },\n    select: {\n        height: \"40px\"\n    }\n});\n\nconst graphSettings = {\n    0: {\n        varTitle: \"Item\"\n    },\n    1: {\n        varTitle: \"Item\"\n    },\n    2: {\n        varTitle: \"Variable X\"\n    },\n    3: {\n        varTitle: \"Variable\"\n    }\n}\n\nclass Chart extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            topicName: \"None\",\n            projectName: undefined,\n\n            graphIndex: undefined,\n\n            variableX: undefined,\n            variableY: undefined,\n\n            normalizerX: \"None\",\n            normalizerY: \"None\",\n\n            color: \"jet\",\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        var eventName = event.target.name;\n        var eventValue = event.target.value;\n\n        // no need to update if no value is changed\n        if (this.state[eventName] === eventValue) {\n            return;\n        }\n\n        const { projectData, storage, graphIndex } = this.props;\n        const { topicName } = this.state;\n\n        this.setState({\n            [eventName]: eventValue\n        })\n        if (eventName === \"topicName\") {\n\n            const variableNames = graphIndex === 0 ? \n                                Object.keys(projectData.groups[eventValue][0]) :\n                                Object.keys(storage);\n\n            this.setState({\n                topicName: eventValue,\n                variableNames: variableNames,\n                variableX: variableNames[0],\n                variableY: variableNames.length > 1 ? variableNames[1] : variableNames[0],\n\n                normalizerX: \"None\",\n                normalizerY: \"None\"\n            });\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n\n\n        const { projectData, storage, graphIndex, projectName } = props;\n\n        if (state.projectName !== projectName || state.graphIndex !== graphIndex) {\n\n            var variableNames = graphIndex === 0 ? \n                                Object.keys(projectData.groups[\"None\"][0]) : \n                                Object.keys(storage);\n\n            return {\n                projectName: projectName,\n                topicName: graphIndex === 2 ? \"All\" : \"None\",\n\n                graphIndex: graphIndex,\n\n                variableX: variableNames[0],\n                variableY: variableNames.length > 1 ? variableNames[1] : variableNames[0],\n\n                normalizerX: \"None\",\n                normalizerY: \"None\",\n            }\n        }\n        return {}\n    }\n\n    render() {\n\n        const { classes, projectName, graphIndex, projectData, storage, normalizerData } = this.props\n\n        const { topicName, normalizerX, color, variableX,variableY,normalizerY } = this.state\n\n        // const topicType = topicInfo[topicName].Type\n        const keys = Object.keys(projectData.groups)\n        var variableNames = undefined;\n        var items = undefined;\n\n        if(graphIndex === 0){\n            variableNames = Object.keys(projectData.groups[topicName][0]);\n            items = projectData.groups[topicName][0][variableX];\n        }\n        else                    variableNames = Object.keys(storage)\n\n        // this.graph = <MapFrame />\n        this.graph = [\n            <LineFrame\n                projectName={projectName}\n                topicName={topicName}\n\n                variableX={items}\n                variableName={variableX}\n                normalizerX={normalizerX}\n                normalizerData={normalizerData}\n\n                color={color}\n\n                storage={storage}\n            />,\n            <BarFrame\n                projectName={projectName}\n                topicName={topicName}\n\n                variableName={variableX}\n                normalizerX={normalizerX}\n                normalizerData={normalizerData}\n\n                color={color}\n\n                storage={storage}\n                groups={projectData.groups}\n            />,\n            <ScatterFrame\n                projectName={projectName}\n                topicName={topicName}\n\n                variableX={variableX}\n                normalizerX={normalizerX}\n                normalizerData={normalizerData}\n\n                variableY={variableY}\n                normalizerY={normalizerY}\n\n                color={color}\n\n                groups={projectData.groups[topicName][0]}\n                storage={storage}\n            />,\n            // <MapFrame />,\n            null,null,null,null\n        ][this.props.graphIndex];\n\n\n        const gridLayout = graphIndex === 2 ? 4 : 6;\n        const { varTitle } = graphSettings[graphIndex]\n        \n        return (\n            <React.Fragment>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className={classes.chartContainer}>\n                    {/* // --------------------------- Type & Color --------------------------- // */}\n                    <Grid item xs={12} sm={gridLayout} md={gridLayout} lg={gridLayout} className={classes.gridContainer}>\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            <TextField select\n                                disabled={1===graphIndex}\n                                variant=\"outlined\"\n                                label=\"Group By\"\n                                onChange={this.handleChange}\n                                value={this.state.topicName}\n                                name=\"topicName\"\n                                SelectProps={{ className: classes.select }}\n                                InputLabelProps={{ shrink: true }}\n                            >\n                                {keys.map((key, i) => (\n                                    <MenuItem key={i} value={key}>\n                                        {key}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </FormControl>\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            <TextField select\n                                variant=\"outlined\"\n                                label=\"Color Map\"\n                                onChange={this.handleChange}\n                                value={this.state.color}\n                                name=\"color\"\n                                SelectProps={{ className: classes.select }}\n                                InputLabelProps={{ shrink: true }}\n                            >\n                                {Object.keys(colors).map(key => (\n                                    <MenuItem key={key} value={key}>\n                                        {key}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </FormControl>\n                    </Grid>\n                    {/* // --------------------------- Variable ------------------------------- // */}\n                    <Grid item xs={12} sm={gridLayout} md={gridLayout} lg={gridLayout} className={classes.gridContainer}>\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            <TextField select\n                                disabled={1===graphIndex}\n                                variant=\"outlined\"\n                                label={varTitle}\n                                onChange={this.handleChange}\n                                value={variableX}\n                                name={\"variableX\"}\n                                SelectProps={{ className: classes.select }}\n                                InputLabelProps={{ shrink: true }}\n                            >\n                                {variableNames.map(key => (\n                                    <MenuItem key={key} value={key}>\n                                        {key}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </FormControl>\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            <TextField select\n                                // disabled\n                                variant=\"outlined\"\n                                label=\"Normalizer\"\n                                onChange={this.handleChange}\n                                value={this.state.normalizerX}\n                                name=\"normalizerX\"\n                                SelectProps={{ className: classes.select }}\n                                InputLabelProps={{ shrink: true }}\n                            >\n                                <MenuItem key={\"None\"} value={\"None\"}>None</MenuItem>\n                                {Object.keys(normalizerData).map(key => (\n                                    <MenuItem key={key} value={key}>\n                                        {key}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </FormControl>\n                    </Grid>\n                    {/* // --------------------------- Variable Y (Scatter) ------------------- // */}\n                    { this.props.graphIndex === 2 && <Grid item xs={12} sm={gridLayout} md={gridLayout} lg={gridLayout} className={classes.gridContainer}>\n                        <FormControl variant=\"outlined\" style={{ width: \"100%\", marginTop: \"10px\" }}>\n                            <TextField select\n                                variant=\"outlined\"\n                                label=\"Variable Y\"\n                                onChange={this.handleChange}\n                                value={this.state.variableY}\n                                name=\"variableY\"\n                                SelectProps={{ className: classes.select }}\n                                InputLabelProps={{ shrink: true }}\n                            >\n                                {variableNames.map(key => (\n                                    <MenuItem key={key} value={key}>\n                                        {key}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </FormControl>\n                        <FormControl variant=\"outlined\" style={{ width: \"100%\", marginTop: \"10px\" }}>\n                            <TextField select\n                                // disabled\n                                variant=\"outlined\"\n                                label=\"Normalizer Y\"\n                                onChange={this.handleChange}\n                                value={this.state.normalizerY}\n                                name=\"normalizerY\"\n                                SelectProps={{ className: classes.select }}\n                                InputLabelProps={{ shrink: true }}\n                            >\n                                <MenuItem key={\"None\"} value={\"None\"}>\n                                    None\n                            </MenuItem>\n                                {Object.keys(normalizerData).map(key => (\n                                    <MenuItem key={key} value={key}>\n                                        {key}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </FormControl>\n                    </Grid>}\n                </Grid>\n                {this.graph}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(Chart)","import React, { Component } from 'react';\n\nimport { withStyles } from '@material-ui/styles';\nimport { AppBar, Tabs, Tab, Button } from '@material-ui/core';\n\nimport LineIcon from '@material-ui/icons/Timeline';\nimport BarIcon from '@material-ui/icons/Notes';\nimport ScatterIcon from '@material-ui/icons/ScatterPlot';\nimport MapIcon from '@material-ui/icons/Map';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nimport htmlToImage from 'html-to-image';\nimport Topic from './Chart'\n\nconst styles = theme => ({\n    rootContainer: {\n        flexGrow: 1,\n        width: '100%'\n    },\n    tabContainer: {\n        background: \"gray\"\n    },\n    tabIndicator: {\n        backgroundColor: 'black'\n    },\n\n    downloadButton: {\n        textAlign: \"right\"\n    },\n    downloadIcon: {\n        marginLeft: \"10px\"\n    }\n});\n\nclass ChartsContainer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            graphIndex: 0\n        };\n\n        this.handleTabChange = this.handleTabChange.bind(this);\n        this.download = this.download.bind(this);\n    }\n\n    download() {\n        htmlToImage.toBlob(document.getElementById('dp-graphdiv'))\n            .then(blob => {\n                window.saveAs(blob, 'graph.png');\n            }).catch(error => {\n                console.log(error)\n                alert(\"Please download using Google Chrome\");\n            });\n    }\n\n    // newValue is the index of the tab clicked\n    handleTabChange(_, newValue) {\n        this.setState({ graphIndex: newValue });\n    }\n\n    render() {\n        const { classes, projectName, projectData, normalizerData } = this.props;\n        const { graphIndex } = this.state;  // this is index of chart \n\n        return (\n            <div className={classes.rootContainer}>\n                <AppBar position=\"static\">\n                    <Tabs\n                        className={classes.tabContainer}\n                        TabIndicatorProps={{ className: classes.tabIndicator }}\n\n                        value={graphIndex}\n                        onChange={this.handleTabChange}\n\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\"\n                        indicatorColor=\"primary\"\n                        textColor=\"inherit\"\n                    >\n                        <Tab key=\"Line\" label=\"Line\" icon={<LineIcon />} />\n                        <Tab key=\"Bar\" label=\"Bar\" icon={<BarIcon />} />\n                        <Tab key=\"Scatter\" label=\"Scatter\" icon={<ScatterIcon />} />\n                        <Tab key=\"Map\" label=\"Map\" icon={<MapIcon />} />\n                    </Tabs>\n                </AppBar>\n\n                <Topic \n                    storage={this.props.storage}\n                    projectData={projectData}\n                    projectName={projectName} \n                    graphIndex={graphIndex} \n                    normalizerData={normalizerData}/>\n\n                {/* <br />\n                <div className={classes.downloadButton}>\n                    <Button onClick={this.download} color=\"default\" variant=\"contained\">\n                        Download <CloudDownloadIcon className={classes.downloadIcon} />\n                    </Button>\n                </div> */}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(ChartsContainer)","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport { AppBar, Tabs, Tab } from '@material-ui/core';\n\nimport ChartsContainer from './components/ChartsContainer'\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n        backgroundColor: \"white\",\n    },\n    appbar: {\n        background: \"#DDDDDD\",\n    },\n    tabIndicator: {\n        backgroundColor: 'black'\n    },\n    topicContainter: {\n        border: \"5px solid transparent\"\n    }\n});\n\nclass TopicTabs extends Component {\n\n    constructor(props) {\n        super(props);\n\n        // initial states\n        this.state = {\n            projectData: undefined,\n            projects: undefined,    // this stores all the avaible project names\n            projectIndex: -1,         // index of the project that is currently selected.\n            normalizerData: undefined\n        }\n\n        this.storage = {};\n\n        // bind functions\n        this.setProject = this.setProject.bind(this);\n        this.setInit = this.setInit.bind(this);\n        this.setData = this.setData.bind(this);\n        this.setNormalizer = this.setNormalizer.bind(this);\n        this.getNormalizer = this.getNormalizer.bind(this);\n        this.handleTabChange = this.handleTabChange.bind(this);\n    }\n\n    setNormalizer(n_data, fetched_projects){\n        this.setState({\n            projectIndex: 0,\n            projectData: fetched_projects,\n            projects: Object.keys(fetched_projects),\n            normalizerData: n_data\n        });\n    }\n\n    getNormalizer(fetched_projects){\n        const n_data = require(\"./data/new/get/normalizer.json\");\n        this.setNormalizer(n_data, fetched_projects);\n    }\n\n    setInit(fetched_projects, fetched_data) {\n        const projectName = Object.keys(fetched_projects)[0];\n        this.storage[projectName] = fetched_data;\n        this.getNormalizer(fetched_projects);\n    }\n\n    setProject(fetched_projects) {\n        const projectName = Object.keys(fetched_projects)[0];\n        const fetched_data = require(\"./data/new/get/\" + projectName + \".json\");\n        this.setInit(fetched_projects, fetched_data);\n    }\n\n    setData(fetched_data, newValue) {\n        const projectName = this.state.projects[newValue];\n        this.storage[projectName] = fetched_data;\n        this.setState({ projectIndex: newValue });\n    }\n\n    componentDidMount() {\n        /*\n        $.ajax({\n            url: \"https://54.219.61.146:5000/new/list\",\n            context: document.body,\n            crossDomain: true\n        }).done(this.set);*/\n        // this.set(require(\"./data/new/list.json\"));\n\n        const fetched_projects = require(\"./data/new/list.json\");\n        this.setProject(fetched_projects);\n    }\n\n    handleTabChange(_, newValue) {\n        if (this.state.topicIndex !== newValue) {\n            if(!this.storage.hasOwnProperty(newValue)){\n                const projectName = this.state.projects[newValue];\n                const fetched_data = require(\"./data/new/get/\" + projectName + \".json\");\n                this.setData(fetched_data, newValue);\n            }else{\n                this.setState({ projectIndex: newValue });\n            }\n        }\n    }\n\n    render() {\n\n        const { projectData, projects, projectIndex, normalizerData } = this.state;\n        const { classes } = this.props; // style classes\n\n        if (projects === undefined) {\n            return null;\n        }\n\n        const projectName = projects[projectIndex];\n\n        return (\n            <div className={classes.root}>\n                <AppBar\n                    position=\"static\"\n                    color=\"default\">\n                    <Tabs\n                        className={classes.appbar}\n                        value={projectIndex}\n                        onChange={this.handleTabChange}\n\n                        // TabIndicatorProps={classes.tabIndicator}\n                        TabIndicatorProps={{className: classes.tabIndicator}}\n                        indicatorColor=\"primary\"\n\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\"\n                        textColor=\"inherit\"\n                    >\n                        {projects.map((projectName, i) =>\n                            <Tab key={i} label={projectName} />\n                        )}\n                    </Tabs>\n                </AppBar>\n\n                <div className={classes.topicContainter}>\n                    <ChartsContainer \n                        projectName={projectName}\n                        projectData={projectData[projectName]}\n                        storage={this.storage[projectName]}\n                        normalizerData={normalizerData}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(TopicTabs)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('dataportalbody'));"],"sourceRoot":""}