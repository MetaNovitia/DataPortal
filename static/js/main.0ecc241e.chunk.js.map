{"version":3,"sources":["data sync /^/.//.*_group/.json$","data sync /^/.//.*_normalizer/.json$","data sync /^/.//.*_timeline/.json$","data sync /^/.//.*_bar/.json$","Timeline/LineGraph.js","Bar/RaceBar.js","Topic/Topic.js","App.js","index.js"],"names":["map","./0_group.json","./1_group.json","./2_group.json","./3_group.json","./4_group.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","./0_normalizer.json","./3_normalizer.json","./0_timeline.json","./1_timeline.json","./3_timeline.json","./0_bar.json","./1_bar.json","./2_bar.json","./3_bar.json","./4_bar.json","LineGraph","min","this","props","area","react_default","a","createElement","nivo_line_esm","data","margin","top","right","bottom","left","xScale","type","max","yScale","stacked","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","title","curve","enableSlices","colors","pointSize","pointColor","enableArea","areaOpacity","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","useMesh","sliceTooltip","_ref","slice","style","background","padding","border","points","sort","b","hasOwnProperty","yStacked","y","point","Row","key","alignItems","width","height","backgroundColor","serieColor","Col","minWidth","maxWidth","serieId","textAlign","yFormatted","Component","StyledSlider","withStyles","mark","Slider","BarComponent","txt","_color","_byIndex","color","toString","length","x","textAnchor","dominantBaseline","fill","fontWeight","fontSize","value","transform","concat","strokeWidth","stroke","fillOpacity","Sample","dataGenerator","groupMode","_useState","useState","_useState2","slicedToArray","current","setCurrent","useEffect","timer","setTimeout","clearTimeout","barData","_total","Fragment","nivo_bar_esm","barComponent","pkeys","indexBy","colorBy","layout","borderColor","modifiers","enableGridX","enableGridY","labelSkipWidth","labelSkipHeight","labelTextColor","animate","motionStiffness","motionDamping","marginLeft","Fab","onClick","size","aria-label","PlayArrow_default","Pause_default","aria-labelledby","step","onChange","event","newValue","marks","graphTypes","graphIcons","Timeline_default","Notes_default","ScatterPlot_default","Map_default","graphOptions","Topic","_this","i","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","options","category","variable","normalize","selectedKeys","selectedVariables","state","graphIndex","changeInput","bind","assertThisInitialized","changeInnerTab","checkBox","topicIndex","menuCategoryItems","menuVariableItems","menuNormalizerItems","displayLegend","filteredtimelineData","normalizedata","graphtabs","push","Tab","label","icon","checked","target","name","setState","_this2","lineVariable","barVariable","display","groupingdata","require","groups","MenuItem","colorcode","ind","item","ColorCheckbox","root","&$checked","Checkbox","assign","undefined","wordWrap","checkboxes","member","timelineData","timelineHeaders","fliteredColors","normalizeOpt","selectedIndexes","t_entry","filteredEntry","t_year","t_value","bargraphData","bargraphHeaders","chosenKeys","ckey","asum","yearEntry","entry","thiscolor","_index","flexGrow","AppBar","position","Tabs","TabIndicatorProps","variant","scrollButtons","indicatorColor","textColor","LineGraph_LineGraph","RaceBar","overflowY","paddingLeft","marginBottom","react_switch_default","onColor","fontFamily","InputLabel","shrink","htmlFor","Select","input","Input","displayEmpty","whiteSpace","borderRadius","ScrollableTabs","handleChange","tabs","projects","Topic_Topic","ReactDOM","render","App_ScrollableTabs","document","getElementById"],"mappings":"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","file":"static/js/main.0ecc241e.chunk.js","sourcesContent":["var map = {\n\t\"./0_group.json\": 415,\n\t\"./1_group.json\": 416,\n\t\"./2_group.json\": 417,\n\t\"./3_group.json\": 418,\n\t\"./4_group.json\": 419\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 414;","var map = {\n\t\"./0_normalizer.json\": 421,\n\t\"./3_normalizer.json\": 422\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 420;","var map = {\n\t\"./0_timeline.json\": 424,\n\t\"./1_timeline.json\": 425,\n\t\"./3_timeline.json\": 426\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 423;","var map = {\n\t\"./0_bar.json\": 428,\n\t\"./1_bar.json\": 429,\n\t\"./2_bar.json\": 430,\n\t\"./3_bar.json\": 431,\n\t\"./4_bar.json\": 432\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 427;","import React,{Component} from 'react';\nimport { ResponsiveLine } from '@nivo/line';\nimport {Row,Col} from 'reactstrap';\n\nexport default class LineGraph extends Component {\n\n    render(){\n\n        // set if area shown\n        var min='auto';\n        if(this.props.area){min=0;}\n\n        return(\n            <ResponsiveLine\n                data={this.props.data}\n                margin={{ top: 50, right: 10, bottom: 50, left: 60 }}\n                xScale={{ type: 'point', min: 'auto', max: 'auto' }}\n                yScale={{ type: 'linear', stacked: this.props.stacked, min: min, max: 'auto' }}\n                axisTop={null}\n                axisRight={null}\n                axisBottom={{\n                    orient: 'bottom',\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: -55,\n                    legend: 'year',\n                    legendOffset: 36,\n                    legendPosition: 'middle'\n                }}\n                axisLeft={{\n                    orient: 'left',\n                    tickSize: 4,\n                    tickPadding: 2,\n                    tickRotation: 0,\n                    legend: this.props.title,\n                    legendOffset: -40,\n                    legendPosition: 'middle'\n                }}\n                curve={this.props.curve}\n                enableSlices=\"x\"\n                colors={this.props.colors}\n                pointSize={10}\n                pointColor=\"#ffffff\"\n                enableArea={this.props.area}\n                areaOpacity={0.7}\n                pointBorderWidth={2}\n                pointBorderColor={{ from: 'serieColor' }}\n                pointLabel=\"y\"\n                pointLabelYOffset={-12}\n                useMesh={true}\n                sliceTooltip={({ slice }) => {\n                    // custom tooltip for stacked and not stacked\n                    return (\n                    <div\n                        style={{\n                        background: 'white',\n                        padding: '9px 12px',\n                        border: '1px solid #ccc',\n                        }}\n                    >\n                        {slice.points.sort((a,b)=>{\n                            if(b.data.hasOwnProperty(\"yStacked\")){\n                                return b.data.yStacked-a.data.yStacked;\n                            }\n                            return b.data.y-a.data.y;\n                        }).map(point => (\n                            <Row key={point.id} style={{margin:\"0\", alignItems:\"center\"}}>\n                                {/* color mark box on the left */}\n                                <div style={{\n                                    margin: \"10px\",\n                                    width: \"10px\", height:\"10px\", \n                                    backgroundColor:point.serieColor}}></div>\n\n                                {/* line name */}\n                                <Col style={{minWidth:\"300\",maxWidth:\"300\"}}>{point.serieId}</Col>\n\n                                {/* point value */}\n                                <Col style={{minWidth:\"30\",maxWidth:\"100\", textAlign:\"right\"}}>\n                                    <strong>{point.data.yFormatted}</strong>\n                                </Col>\n                            </Row>\n                        ))}\n                    </div>)\n                }}\n            />);\n    }\n}","import React, { useState, useEffect } from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { Bar } from '@nivo/bar';\nimport {Row} from 'reactstrap';\nimport PlayIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport Fab from '@material-ui/core/Fab';\nimport { withStyles } from '@material-ui/core/styles';\n\n\n// styling slider to make mark bigger\nconst styles = {\n    mark :{\n        width:\"2px\",\n        height:\"5px\",\n        backgroundColor:\"blue\"\n    }\n}\nconst StyledSlider = withStyles(styles)(Slider);\n\n\n// custom bar component, label inside\nconst BarComponent = props => {\n    var txt = null;\n\n    // set color if grouped\n    var _color = props.data.data._color;\n    if(props.data.data._byIndex){\n        _color = props.color\n    }\n\n    // if bar too small for text\n    if(15*props.data.id.toString().length < props.width && 15*2 < props.height){\n        txt= [<text\n            key={props.data.data.id.toString()+props.data.id.toString()+\"id\"}\n            x={props.width - 16}\n            y={props.height / 2 - 8}\n            textAnchor=\"end\"\n            dominantBaseline=\"central\"\n            fill=\"black\"\n            style={{\n            fontWeight: 900,\n            fontSize: 15,\n            }}\n        >\n            {props.data.id}\n        </text>,\n        <text\n            key={props.data.data.id.toString()+props.data.id.toString()+\"val\"}\n            x={props.width - 16}\n            y={props.height / 2 + 10}\n            textAnchor=\"end\"\n            dominantBaseline=\"central\"\n            fill={\"rgb(0,0,0)\"}\n            style={{\n            fontWeight: 400,\n            fontSize: 13,\n            }}\n        >\n            {props.data.value}\n        </text>]\n    }\n    return (\n        <g transform={`translate(${props.x},${props.y})`}>\n        <rect x={-3} y={7} width={props.width} height={props.height} fill=\"rgba(0, 0, 0, .07)\" />\n        <rect width={props.width} height={props.height} fill={_color} \n                style={{strokeWidth:2, stroke:\"rgb(0,0,0)\"}} />\n        <rect x={props.width - 5} width={5} height={props.height} fill={\"rgb(0,0,0)\"} fillOpacity={0.2} />\n        {txt}\n        </g>\n    );\n};\n\nconst Sample = (props) => {\n\n    const dataGenerator = props.dataGenerator;\n    var groupMode = \"grouped\";\n    if(props.groupMode){\n        groupMode = \"stacked\";\n    }\n  const [current, setCurrent] = useState([0,0]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n        if(current[1]){\n            setCurrent([(current[0] + 1)%dataGenerator.length,current[1]]);\n        }\n    }, 1400);\n    return () => clearTimeout(timer);\n  }, [current, setCurrent]);\n\n  const barData = dataGenerator[current[0]][1].sort((a, b) => a._total-b._total);\n\n  return (\n    <>\n        <Bar\n            barComponent={BarComponent}\n            width={700}\n            height={500}\n            data={barData}\n            keys={props.pkeys}\n            indexBy=\"id\"\n            colorBy=\"id\"\n            margin={{ top: 50, right: 60, bottom: 50, left: 80 }}\n            padding={0.3}\n            groupMode={groupMode}\n            layout=\"horizontal\"\n            colors={[\"red\",\"orange\",\"yellow\",\"green\",\"blue\",\"purple\"]}\n            borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n            axisTop={null}\n            axisRight={null}\n            axisBottom={{\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: props.title,\n                legendPosition: 'middle',\n                legendOffset: 32\n            }}\n            enableGridX={false}\n            enableGridY={false}\n            axisLeft={{\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legendPosition: 'middle',\n                legendOffset: -40\n            }}\n            labelSkipWidth={12}\n            labelSkipHeight={12}\n            labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n            animate={true}\n            motionStiffness={90}\n            motionDamping={15}\n        />\n      \n        {/* ----------------------------------- Year ----------------------------------- */}\n        <h2 style={{ marginLeft: 60, fontWeight: 400, color: '#555', textAlign:\"center\" }}>\n            <strong style={{ color: 'black', fontWeight: 900 }}>{dataGenerator[current[0]][0]}</strong>\n        </h2>\n\n        {/* --------------------------  Player and Progress Bar-------------------------- */}\n        <Row style={{margin:0, padding:0, alignItems:\"center\"}}>\n            <Fab onClick={()=>{setCurrent([(current[0] - current[1]+1)%dataGenerator.length,1-current[1]])}}\n                size=\"medium\" aria-label=\"Add\" style={{marginLeft:50}}>\n                {[<PlayIcon />,<PauseIcon />][current[1]]}\n            </Fab>\n            \n            <StyledSlider value={current[0]}\n                    style={{width:550, marginLeft:30}}\n                    aria-labelledby=\"discrete-slider\"\n                    step={1}\n                    onChange={(event, newValue)=>{setCurrent([newValue,current[1]])}}\n                    marks\n                    min={0}\n                    max={dataGenerator.length-1}/>\n        </Row>\n    </>\n  );\n};\n\nexport default Sample;","import React, {Component} from 'react';\nimport { Row} from 'reactstrap';\nimport LineGraph from '../Timeline/LineGraph.js'\n// import ScatterGraph from './Scatter/ScatterGraph';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport LineIcon from '@material-ui/icons/Timeline';\nimport BarIcon from '@material-ui/icons/Notes';\nimport ScatterIcon from '@material-ui/icons/ScatterPlot';\nimport MapIcon from '@material-ui/icons/Map';\nimport Switch from \"react-switch\";\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Sample from '../Bar/RaceBar.js'\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst graphTypes = [\"Line\", \"Bar\", \"Scatter\", \"Map\"];\nconst graphIcons = [<LineIcon />,<BarIcon />,<ScatterIcon />,<MapIcon />];\n// stacked, area, curve type, rank, stack group, years\nconst graphOptions = [  [\"flex\",\"flex\",\"\",\"none\",\"none\",\"none\"],\n                        [\"flex\",\"none\",\"none\",\"\",\"\",\"\"],\n                        [\"none\",\"none\",\"none\",\"none\",\"none\",\"\"],\n                        [\"none\",\"none\",\"none\",\"none\",\"none\",\"\"]];\n\nexport default class Topic extends Component {\n\n    constructor(props){\n        super(props);\n        this.options = {\n            \"category\" : \"\",\n            \"variable\" : [\"\",\"\",\"\",\"\"],\n            \"curve\" : \"cardinal\",\n            \"normalize\" : [\"\",\"\",\"\",\"\"],\n            stacked : true,\n            selectedKeys:{},\n            selectedVariables:{}\n        }\n        this.state = {graphIndex:0};\n        this.changeInput = this.changeInput.bind(this);\n        this.changeInnerTab = this.changeInnerTab.bind(this);\n        this.checkBox = this.checkBox.bind(this);\n        this.topicIndex = -1;\n        this.menuCategoryItems = [];\n        this.menuVariableItems = [[],[],[],[]];\n        this.menuNormalizerItems = [];\n        this.legend = [];\n        this.colors = [];\n        this.displayLegend = \"none\"\n        this.filteredtimelineData = [];\n        this.normalizedata = {};\n\n        this.graphtabs =[];\n        for(var i in graphTypes){\n            this.graphtabs.push(<Tab key={graphTypes[i]} label={graphTypes[i]} icon={graphIcons[i]}/>);\n        }\n        \n    }\n\n    checkBox(event, checked){\n        this.options.selectedKeys[event.target.name] = checked;\n        this.setState({});\n    }\n\n    changeInnerTab(event, newValue){\n        this.setState({graphIndex: newValue});\n    }\n\n    changeInput(event){\n        if(event===\"stacked\"){\n            this.options.stacked = !this.options.stacked\n        }else{\n            if( event.target.name===\"variable\" || \n                event.target.name===\"normalize\"){\n                this.options[event.target.name][this.state.graphIndex] = event.target.value;\n            }else{\n                this.options[event.target.name] = event.target.value;\n            }\n        }\n        this.setState({})\n    }\n\n    render(){\n\n        // ---------------------------- Init ---------------------------- //\n        var topicIndex = this.props.topicIndex;\n        var graphIndex = this.state.graphIndex;\n        var stacked = this.options.stacked;\n        var category = this.options[\"category\"];\n        var curve = this.options[\"curve\"];\n        var lineVariable = this.options[\"variable\"][0];\n        var barVariable = this.options[\"variable\"][1];\n\n\n        // --------------------------- Display --------------------------- //\n        var display = [\"none\",\"none\",\"none\",\"none\"]\n        display[graphIndex] = \"initial\"\n\n\n        // --------------------- Grouping & Normalize --------------------- //\n        if(this.topicIndex!==topicIndex){\n\n            // grouping\n            this.groupingdata = require('../data/'+topicIndex.toString()+'_group.json');\n            this.groups = [];\n            this.menuCategoryItems = [];\n            for(var key in this.groupingdata){\n                if(key!==\"_index\"){\n                    this.groups.push(key);\n                    this.menuCategoryItems.push(\n                        <MenuItem key={key} value={key}>{key}</MenuItem>\n                    );\n                }\n            }\n\n            if(!this.groupingdata.hasOwnProperty(category)){\n                category = \"None\";\n                this.options.category = \"None\";\n            }\n            this.options.selectedKeys={}\n\n            // normalize\n            this.normalizedata = require('../data/'+topicIndex.toString()+'_normalizer.json');\n            this.menuNormalizerItems = []\n            for(key in this.normalizedata){\n                this.menuNormalizerItems.push(\n                    <MenuItem key={key} value={key}>{key}</MenuItem>\n                );\n            }\n        }\n\n        // ---------------------------- Legend ---------------------------- //\n        this.legend = [];\n        this.displayLegend = \"inline-table\"\n        this.colorcode = this.groupingdata[category];\n        \n        this.colors = [];\n\n        if(this.topicIndex!=topicIndex){\n            var ind = 0\n            for(key in this.groupingdata[\"_index\"]){\n                this.options.selectedKeys[key] = true;\n                ind+=1\n                if(ind===10){break;}\n            }\n        }\n\n        for(var item in this.colorcode){\n\n            var color = this.colorcode[item][\"color\"];\n            var ColorCheckbox = withStyles({\n            root: {\n                color: color,\n                '&$checked': {\n                color: color,\n                },\n            },\n            checked: {},\n            })(props => <Checkbox color=\"default\" {...props} />);\n\n            if(this.colorcode[item][\"members\"]===undefined){\n                this.colors[\n                    this.groupingdata[\"_index\"][item]\n                ] = color\n                this.legend.push(\n                    <Row key={item} style={{margin:\"0\", alignItems:\"center\"}}>\n                        <ColorCheckbox\n                            name={item}\n                            checked={this.options.selectedKeys[item]}\n                            onChange={this.checkBox}\n                            value=\"checkedG\"\n                        />\n                        <div style={{maxWidth:\"80px\",wordWrap: \"break-word\"}}>{item}</div>\n                    </Row>\n                )\n            }else{\n\n                var checkboxes = [];\n                for(var member in this.colorcode[item][\"members\"]){\n                    this.colors[\n                        this.groupingdata[\"_index\"][this.colorcode[item][\"members\"][member]]\n                    ] = color\n                    checkboxes.push(\n                        <Row key={this.colorcode[item][\"members\"][member]} style={{margin:\"0\", alignItems:\"center\"}}>\n                            <ColorCheckbox\n                                name={this.colorcode[item][\"members\"][member]}\n                                checked={this.options.selectedKeys[this.colorcode[item][\"members\"][member]]}\n                                onChange={this.checkBox}\n                                value=\"checkedG\"\n                            />\n                            <div style={{width:\"80px\",wordWrap: \"break-word\"}}>\n                                {this.colorcode[item][\"members\"][member]}\n                            </div>\n                        </Row>\n                    )\n                }\n    \n                this.legend.push(\n                    <Row key={item} style={{margin:\"0\", alignItems:\"center\"}}>\n                        {/* <div style={{\n                            margin: \"10px\",\n                            width: \"10px\", height:\"10px\", \n                            backgroundColor: color}}></div> */}\n                        <div style={{wordWrap: \"break-word\",width:\"100%\"}}>{item}</div>\n                        {checkboxes}\n                    </Row>\n                );\n            }\n        }\n        \n\n        // --------------------------- Timeline --------------------------- //\n        if(graphIndex===0 || this.topicIndex!=topicIndex){\n            this.timelineData = require('../data/'+topicIndex.toString()+'_timeline.json');\n            this.timelineHeaders = [];\n            this.menuVariableItems[0] = [];\n            for(key in this.timelineData){\n                this.timelineHeaders.push(key);\n                this.menuVariableItems[0].push(\n                    <MenuItem key={key} value={key}>{key}</MenuItem>\n                );\n            }\n\n            if(!this.timelineData.hasOwnProperty(lineVariable)){\n                this.options[\"variable\"][0] = this.timelineHeaders[0];\n                lineVariable = this.timelineHeaders[0];\n            }\n            this.filteredtimelineData = [];\n            this.fliteredColors = [];\n            var normalizeOpt = this.options.normalize[0];\n\n            for(var selectedIndexes in this.options.selectedKeys){\n\n                // filter\n                if(this.options.selectedKeys[selectedIndexes]){\n\n                    var t_entry = this.timelineData[lineVariable][\"data\"][\n                        this.groupingdata[\"_index\"][selectedIndexes]];\n                    var filteredEntry = {data:[],id:t_entry.id}\n\n                    // normalize data\n                    if(normalizeOpt !== \"\"){\n                        for(key in t_entry[\"data\"]){\n                            var t_year = t_entry[\"data\"][key]['x'].toString();\n                            var t_value =  t_entry[\"data\"][key]['y'];\n                            filteredEntry[\"data\"].push({\n                                \"x\":t_year,\n                                \"y\": t_value / this.normalizedata[normalizeOpt][t_entry.id][t_year]\n                            });\n                        }\n                    }else{\n                        filteredEntry = t_entry;\n                    }\n                    this.filteredtimelineData.push(filteredEntry);\n                    this.fliteredColors.push(\n                        this.colors[this.groupingdata[\"_index\"][selectedIndexes]]\n                    );\n                }\n            }\n        }\n\n        // --------------------------- BarGraph --------------------------- //\n        if(graphIndex===1 || this.topicIndex!=topicIndex){\n            this.bargraphData = require('../data/'+topicIndex.toString()+'_bar.json');\n            this.bargraphHeaders = [];\n            this.menuVariableItems[1] = [];\n            for(key in this.bargraphData){\n                this.bargraphHeaders.push(key);\n                this.menuVariableItems[1].push(\n                    <MenuItem key={key} value={key}>{key}</MenuItem>\n                );\n            }\n            if(!this.bargraphData.hasOwnProperty(barVariable)){\n                this.options[\"variable\"][1] = this.bargraphHeaders[0];\n                barVariable = this.bargraphHeaders[0];\n            }\n\n            // copy keys\n            this.chosenKeys = [];\n            var ckey = this.bargraphData[barVariable][\"keys\"].length;\n            while(ckey--) this.chosenKeys[ckey] = this.bargraphData[barVariable][\"keys\"][ckey];\n            \n            var asum = 0;\n\n            for(var yearEntry in this.bargraphData[barVariable][\"data\"]){\n                for(var entry in this.bargraphData[barVariable][\"data\"][yearEntry][1]){\n                    asum=0;\n                    for(key in this.chosenKeys){\n                        asum+=this.bargraphData[barVariable][\"data\"][yearEntry][1][entry][this.chosenKeys[key]];\n                    }\n\n                    if(category===\"None\"){\n                        this.bargraphData[barVariable][\"data\"][yearEntry][1][entry][\"_byIndex\"] = true;\n                    }else{\n                        var thiscolor = this.colors[\n                            this.groupingdata._index[\n                                this.bargraphData[barVariable][\"data\"][yearEntry][1][entry].id\n                            ]\n                        ];\n                        this.bargraphData[barVariable][\"data\"][yearEntry][1][entry][\"_color\"] = thiscolor;\n                        this.bargraphData[barVariable][\"data\"][yearEntry][1][entry][\"_byIndex\"] = false;\n                    }\n\n                    this.bargraphData[barVariable][\"data\"][yearEntry][1][entry][\"_total\"] = asum;\n                }\n            }\n        }\n\n        \n\n        this.topicIndex=topicIndex;\n        this.category=category;\n\n        return (\n            <div style={{\n                flexGrow: 1,\n                width: '100%'\n            }}>\n\n                <AppBar position=\"static\">\n                    <Tabs\n                        TabIndicatorProps={{style: {backgroundColor: 'black'}}}\n                        value={graphIndex}\n                        onChange={this.changeInnerTab}\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\"\n                        indicatorColor=\"primary\"\n                        textColor=\"inherit\"\n                        style={{background:\"gray\"}}\n                        >\n                    {this.graphtabs}\n                    </Tabs>\n                </AppBar>\n                <Row style={{width:\"100%\", margin:\"0\", padding:\"0\"}}>\n\n                    {/* // --------------------------- Timeline --------------------------- // */}\n                    <div style={{width:\"80%\", display:display[0]}}>\n                        {<LineGraph\n                                    data={this.filteredtimelineData} \n                                    stacked={stacked} \n                                    area={stacked}\n                                    curve={curve}\n                                    title={this.timelineData[lineVariable].title}\n                                    colors={this.fliteredColors}/>}\n                    </div>\n                    {/* // --------------------------- BarGraph --------------------------- // */}\n                    <div style={{width:\"80%\", display:display[1]}}>\n                        {<Sample \n                                    title={this.bargraphData[barVariable][\"title\"]}\n                                    pkeys={this.chosenKeys}\n                                    dataGenerator={this.bargraphData[barVariable][\"data\"]} \n                                    groupMode={stacked}/>}\n                    </div>\n                    {/* // --------------------------- Options --------------------------- // */}\n                    <div style={{height:\"70vh\", width:\"20%\", padding:'2%', overflowY: \"scroll\"}}>\n\n                        {/* // --------------------------- Stacked --------------------------- // */}\n                        <Row style={{display:graphOptions[graphIndex][0],paddingLeft:\"10%\", marginBottom: \"5%\"}}>\n                            <Switch onColor=\"#222429\" checked={stacked} \n                                    onChange={() => {this.changeInput(\"stacked\")}} value={stacked} />\n                            <div style={{marginLeft:\"4%\", fontFamily:\"Verdana\"}}>Stacked</div>\n                        </Row>\n                        <br />\n                        {/* // --------------------------- Curve --------------------------- // */}\n                        <div style={{display:graphOptions[graphIndex][2]}}>\n                            <InputLabel shrink htmlFor=\"curve-label-placeholder\">\n                            Curve Type\n                            </InputLabel>\n                            <Select\n                                style={{width:\"100%\"}}\n                                value={curve}\n                                onChange={this.changeInput}\n                                input={<Input name=\"curve\" id=\"curve-label-placeholder\" />}\n                                displayEmpty\n                                name=\"curve\"\n                            >\n                            <MenuItem value={'cardinal'}>Curved</MenuItem>\n                            <MenuItem value={'linear'}>Linear</MenuItem>\n                            </Select>\n                        </div>\n                        <br style={{display:graphOptions[graphIndex][2]}}/>\n                        {/* // --------------------------- Variable --------------------------- // */}\n                        <div>\n                            <InputLabel shrink htmlFor=\"variable-label-placeholder\">\n                            Variable\n                            </InputLabel>\n                            <Select\n                                style={{width:\"100%\"}}\n                                value={this.options[\"variable\"][graphIndex]}\n                                onChange={this.changeInput}\n                                input={<Input name=\"variable\" id=\"variable-label-placeholder\" />}\n                                displayEmpty\n                                name=\"variable\"\n                            >\n                                {this.menuVariableItems[graphIndex]}\n                            </Select>\n                        </div>\n                        <br />\n                        {/* // --------------------------- Normalize --------------------------- // */}\n                        <div>\n                            <InputLabel shrink htmlFor=\"normalize-label-placeholder\">\n                            Normalize\n                            </InputLabel>\n                            <Select\n                                style={{width:\"100%\"}}\n                                value={this.options[\"normalize\"][graphIndex]}\n                                onChange={this.changeInput}\n                                input={<Input name=\"normalize\" id=\"normalize-label-placeholder\" />}\n                                displayEmpty\n                                name=\"normalize\"\n                            >\n                                <MenuItem value={''}>None</MenuItem>\n                                {this.menuNormalizerItems}\n                            </Select>\n                        </div>\n                        <br />\n                        {/* // --------------------------- Categorize --------------------------- // */}\n                        <div>\n                            <InputLabel shrink htmlFor=\"categorize-label-placeholder\">\n                            Categorize\n                            </InputLabel>\n                            <Select\n                                style={{width:\"100%\"}}\n                                value={category}\n                                onChange={this.changeInput}\n                                input={<Input name=\"categorize\" id=\"categorize-label-placeholder\" />}\n                                name=\"category\"\n                            >\n                                {this.menuCategoryItems}\n                            </Select>\n                        </div>\n                        <br />\n                        {/* // --------------------------- Legend --------------------------- // */}\n                        <div>\n                            <div style={{\n                                        display:this.displayLegend,\n                                        width: \"100%\",\n                                        minWidth: \"100%\",\n                                        whiteSpace: \"nowrap\",\n                                        borderRadius: \"2px\",\n                                        fontFamily:\"Georgia\"\n                                    }}>\n                                {this.legend}\n                            </div>\n                        </div>\n                    </div>\n                </Row>\n                <br />\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport projects from './data/projects.json'\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Topic from './Topic/Topic.js'\n\nexport default class ScrollableTabs extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {topicIndex: 0};\n        this.handleChange = this.handleChange.bind(this);\n\n        this.tabs = [];\n        for(var i in projects){\n            this.tabs.push(\n                <Tab key={i.toString()+\"topic\"} label={projects[i].title}/>\n            );\n        }\n    }\n\n    handleChange(event, newValue) {\n        this.setState({topicIndex: newValue});\n    }\n\n    render(){\n        return (\n            <div style={{\n                flexGrow: 1,\n                width: '100%',\n                backgroundColor: \"white\",\n            }}>\n                <AppBar position=\"static\" color=\"default\">\n                    <Tabs\n                    TabIndicatorProps={{style: {backgroundColor: 'black'}}}\n                    value={this.state.topicIndex}\n                    onChange={this.handleChange}\n                    variant=\"scrollable\"\n                    scrollButtons=\"on\"\n                    indicatorColor=\"primary\"\n                    textColor=\"inherit\"\n                    >\n                    {this.tabs}\n                    </Tabs>\n                </AppBar>\n                <Topic topicIndex={this.state.topicIndex}/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('dataportalbody'));\n"],"sourceRoot":""}