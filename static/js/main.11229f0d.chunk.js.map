{"version":3,"sources":["data/new/get sync /^/.//.*//metadata/.json$","components/Charts/Timeline/LineGraph.js","components/Charts/Timeline/LineFrame.js","components/Charts/Bar/RaceBar.js","components/Charts/Bar/BarFrame.js","components/Charts/Scatter/ScatterGraph.js","components/Charts/Scatter/ScatterFrame.js","components/Topic.js","components/Type.js","App.js","index.js","data/new/get sync /^/.//.*/.json$"],"names":["map","./water/metadata.json","./water_2/metadata.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","LineGraph","min","this","props","area","react_default","a","createElement","Fragment","style","height","width","nivo_line_esm","data","margin","top","right","bottom","left","xScale","type","max","yScale","stacked","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","title","curve","enableSlices","colors","pointSize","pointColor","enableArea","areaOpacity","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","useMesh","sliceTooltip","_ref","slice","background","padding","border","points","sort","b","hasOwnProperty","yStacked","y","point","Row","key","alignItems","backgroundColor","serieColor","Col","minWidth","maxWidth","serieId","textAlign","yFormatted","Component","LineFrame","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","options","category","selectedKeys","undefined","topicIndex","categoryItems","groups","filteredData","filteredColors","selectedChanged","changeInput","bind","assertThisInitialized","checkBox","set","setNormalizer","done1","done2","normchanged","varchanged","storage","event","checked","target","name","setState","value","normalizerdata","normalizer","variable","_this2","nData","require","i","ct","colorType","color","vItems","linear_colors","Math","floor","length","colorcode","ColorCheckbox","withStyles","root","Checkbox","assign","push","onChange","wordWrap","checkboxes","member","temp_years_index","years_index","t_entry","normalizedEntry","t_year","t_value","t_index","t_normalizer","x","LineGraph_LineGraph","overflowY","display","paddingLeft","marginBottom","react_switch_default","onColor","marginLeft","fontFamily","InputLabel","shrink","htmlFor","Select","input","Input","displayEmpty","MenuItem","whiteSpace","borderRadius","StyledSlider","mark","Slider","BarComponent","txt","_color","_byIndex","toString","textAnchor","dominantBaseline","fill","fontWeight","fontSize","transform","concat","strokeWidth","stroke","fillOpacity","Sample","dataGenerator","groupMode","_useState","useState","_useState2","slicedToArray","current","setCurrent","useEffect","timer","setTimeout","clearTimeout","barData","ranking","_total","numberOfItems","nivo_bar_esm","barComponent","pkeys","indexBy","colorBy","layout","borderColor","modifiers","enableGridX","enableGridY","labelSkipWidth","labelSkipHeight","labelTextColor","animate","motionStiffness","motionDamping","Fab","onClick","size","aria-label","PlayArrow_default","Pause_default","aria-labelledby","step","newValue","marks","BarFrame","changedMul","mul","console","log","done","firstVar","firstItem","t_sum","item","n_entry","Number","isNaN","RaceBar","Scatter","position","nivo_scatterplot_esm","zIndex","blendMode","titleX","titleY","tooltip","node","formattedX","formattedY","ScatterGraph_StyledSlider","ScatterFrame","setY","setNormalizerY","done1Y","done2Y","normalizerdataY","normalizerY","dataY","variableY","year","t_normalized","t_normalizedY","ScatterGraph","TypeTabs","state","typeIndex","handleChange","variables","variablesMenu","newstate","list","newV","obj","types","reload","graph","LineFrame_LineFrame","Type","BarFrame_BarFrame","ScatterFrame_ScatterFrame","graphIndex","w","dY","varTitle","h","mulw","flexGrow","FormControl","variant","marginTop","OutlinedInput","labelWidth","multiple","React","useRef","graphTypes","graphIcons","Timeline_default","Notes_default","ScatterPlot_default","Map_default","changeInnerTab","download","graphtabs","Tab","label","icon","htmlToImage","toBlob","document","getElementById","then","blob","window","saveAs","catch","error","alert","AppBar","Tabs","TabIndicatorProps","scrollButtons","indicatorColor","textColor","Topic_TypeTabs","Button","marginRight","CloudDownload_default","TopicTabs","tabs","topic","projects","Type_Type","ReactDOM","render","App_TopicTabs","./water/Basin/1980-2017_livestock_head_total.json","./water/Basin/1980-2017_livestock_tot_wat_consume.json","./water_2/Basin/1980-2017_livestock_head_total.json","./water_2/Basin/1980-2017_livestock_tot_wat_consume.json"],"mappings":"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","file":"static/js/main.11229f0d.chunk.js","sourcesContent":["var map = {\n\t\"./water/metadata.json\": 234,\n\t\"./water_2/metadata.json\": 235\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 240;","import React,{Component} from 'react';\nimport { ResponsiveLine } from '@nivo/line';\nimport {Row,Col} from 'reactstrap';\n\nexport default class LineGraph extends Component {\n\n    render(){\n\n        // set if area shown\n        var min='auto';\n        if(this.props.area){min=0;}\n\n        return(\n            <>\n                <div >\n                    <div id=\"dp-graphdiv\" style={{height:\"600px\", width:\"100%\"}}>\n                        <ResponsiveLine\n                            data={this.props.data}\n                            margin={{ top: 50, right: 25, bottom: 50, left: 80 }}\n                            xScale={{ type: 'point', min: 'auto', max: 'auto' }}\n                            yScale={{ type: 'linear', stacked: this.props.stacked, min: min, max: 'auto' }}\n                            axisTop={null}\n                            axisRight={null}\n                            axisBottom={{\n                                orient: 'bottom',\n                                tickSize: 5,\n                                tickPadding: 5,\n                                tickRotation: -55,\n                                legend: 'year',\n                                legendOffset: 40,\n                                legendPosition: 'middle'\n                            }}\n                            axisLeft={{\n                                orient: 'left',\n                                tickSize: 4,\n                                tickPadding: 2,\n                                tickRotation: 0,\n                                legend: this.props.title,\n                                legendOffset: -70,\n                                legendPosition: 'middle'\n                            }}\n                            curve={this.props.curve}\n                            enableSlices=\"x\"\n                            colors={this.props.colors}\n                            pointSize={10}\n                            pointColor=\"#ffffff\"\n                            enableArea={this.props.area}\n                            areaOpacity={0.7}\n                            pointBorderWidth={2}\n                            pointBorderColor={{ from: 'serieColor' }}\n                            pointLabel=\"y\"\n                            pointLabelYOffset={-12}\n                            useMesh={true}\n                            sliceTooltip={({ slice }) => {\n                                // custom tooltip for stacked and not stacked\n                                return (\n                                <div\n                                    style={{\n                                    background: 'white',\n                                    padding: '9px 12px',\n                                    border: '1px solid #ccc',\n                                    }}\n                                >\n                                    {slice.points.sort((a,b)=>{\n                                        if(b.data.hasOwnProperty(\"yStacked\")){\n                                            return b.data.yStacked-a.data.yStacked;\n                                        }\n                                        return b.data.y-a.data.y;\n                                    }).map(point => (\n                                        <Row key={point.id} style={{margin:\"0\", alignItems:\"center\"}}>\n                                            {/* color mark box on the left */}\n                                            <div style={{\n                                                margin: \"10px\",\n                                                width: \"10px\", height:\"10px\", \n                                                backgroundColor:point.serieColor}}></div>\n\n                                            {/* line name */}\n                                            <Col style={{minWidth:\"300\",maxWidth:\"300\"}}>{point.serieId}</Col>\n\n                                            {/* point value */}\n                                            <Col style={{minWidth:\"30\",maxWidth:\"100\", textAlign:\"right\"}}>\n                                                <strong>{point.data.yFormatted}</strong>\n                                            </Col>\n                                        </Row>\n                                    ))}\n                                </div>)\n                            }}\n                        />\n                    </div>\n                </ div>\n            </>\n            );\n    }\n}","/*\n    Notes:\n    - Group and Category are the same thing\n\n*/\n\nimport React, {Component} from 'react';\nimport { Row} from 'reactstrap';\nimport LineGraph from './LineGraph.js'\nimport Switch from \"react-switch\";\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport linear_colors from '../../../data/Numerical.json';\nimport $ from 'jquery';\n\nconst maxInitalKeys   = 40;\n\nexport default class LineFrame extends Component {\n\n    constructor(props){\n        super(props);\n        this.options = {\n            category        : \"None\",\n            curve           : \"cardinal\",\n            stacked         : true,\n            selectedKeys    : {}\n        }\n\n        this.data               = undefined;\n        this.topicIndex         = -1;\n        this.type               = \"\";\n        this.category           = \"None\";\n        this.categoryItems      = [];\n\n        this.legend             = [];\n        this.colors             = {};\n        this.groups             = {};\n        this.filteredData       = [];\n        this.filteredColors     = [];\n        this.selectedChanged    = false;\n        // this.normalizedData     = {};\n\n        this.changeInput        = this.changeInput.bind(this);\n        this.checkBox           = this.checkBox.bind(this);\n        this.set                = this.set.bind(this);\n        this.setNormalizer      = this.setNormalizer.bind(this);\n        this.done1              = false;\n        this.done2              = false;\n        this.normchanged        = false;\n        this.varchanged         = false;\n        this.storage            = this.props.storage;\n    }\n\n\n    // ============================ Input Handlers ========================== //\n    checkBox(event, checked){\n        this.options.selectedKeys[event.target.name] = checked;\n        this.selectedChanged = true;\n        this.setState({});\n    }\n\n    changeInput(event){\n        if(event===\"stacked\"){\n            this.options.stacked = !this.options.stacked;\n        }else{\n            if( event.target.name===\"normalizer\" && \n                this.options[event.target.name] !== event.target.value){\n                this.selectedChanged = true;\n            }\n            this.options[event.target.name] = event.target.value;\n        }\n        this.setState({});\n    }\n    // ====================================================================== //\n\n    setNormalizer(data){\n        this.normalizerdata = data;\n        \n        this.done2 = true;\n\n        this.normalizer     = this.props.normalizer;\n        this.normchanged    = true;\n\n        this.setState({});\n    }\n\n    set(data){\n         \n        this.data = data;\n        this.done1 = true;\n\n        this.variable       = this.props.variable;\n        this.varchanged     = true;\n\n        this.setState({});\n    }\n\n    \n    render(){\n\n        if(this.variable !== this.props.variable){\n            if(!this.storage.hasOwnProperty(this.props.variable)){\n                this.done1 = false;\n                // $.ajax({\n                //     url: \"https://54.219.61.146:5000/new/get/\"+this.props.topicIndex,\n                //     context: document.body,\n                //     crossDomain: true\n                // }).done(data => {\n                //     this.storage[this.props.variable] = data;\n                //     this.set(data);\n                // });\n                var nData = require(\n                    \"../../../data/new/get/\" + this.props.topicIndex+\n                    \"/\" + this.props.type +\n                    \"/\"+ this.props.variable +\n                    \".json\");\n                this.storage[this.props.variable] = nData;\n                this.set(nData);\n            }else this.set(this.storage[this.props.variable]);\n\n        }\n        \n        if(this.normalizer !== this.props.normalizer){\n            if(!this.storage.hasOwnProperty(this.props.normalizer)){\n                this.done2 = false;\n                if(this.props.normalizer!==\"None\"){\n                    // $.ajax({\n                    //     url: \"https://54.219.61.146:5000/new/get/\"+this.props.topicIndex,\n                    //     context: document.body,\n                    //     crossDomain: true\n                    // }).done(this.set);\n                    var nData = require(\n                        \"../../../data/new/get/\" + this.props.topicIndex+\n                        \"/\" + this.props.type +\n                        \"/\"+ this.props.normalizer +\n                        \".json\");\n                    this.storage[this.props.normalizer] = nData;\n                    this.setNormalizer(nData);\n                }else{\n                    this.setNormalizer(\"None\");\n                }\n            }else this.setNormalizer(this.storage[this.props.normalizer]);\n        }\n\n        if(this.done1 && this.done2){\n\n            // ============================ General ========================== //\n            var i = 0;      // array index\n            var ct = 0;     // counter\n            var key = \"\";   // object key\n\n            // ============================= Init ============================= //\n            var stacked         = this.options[\"stacked\"];\n            var curve           = this.options[\"curve\"];\n            var category        = this.options[\"category\"];\n            var type            = this.props.type;\n            var colorType       = this.props.colorType;\n\n            /*\n            // ------------------- Group Menu ------------------- //\n            this.categoryItems = [];\n            for(key in groupingdata){\n                this.categoryItems.push(\n                    <MenuItem key={key} value={key}>{key}</MenuItem>\n                );\n            }*/\n\n            // =========================== Reload Type =========================== //\n            if(this.type !== type){\n\n                // ------------------ Selected Keys ------------------ //\n                this.options[\"selectedKeys\"] = {};\n                ct = 0;\n                for(key in this.data){\n                    this.options[\"selectedKeys\"][key] = ((ct++ % maxInitalKeys === 0) && ct!==1);\n                }\n\n                this.options[\"category\"] = \"None\";\n                category = this.options[\"category\"];\n            }\n\n            if(this.type != type || this.color!=this.props.color){\n                this.groups = {};\n                if(colorType === \"Numerical\"){\n                    var vItems = Object.keys(this.data);\n\n                    this.groups[\"None\"] = {};\n                    for(i in vItems){\n                        this.groups[\"None\"][vItems[i]] = {\n                            \"color\": linear_colors[this.props.color][Math.floor(i/vItems.length*1000)]\n                        };\n                    }\n                }\n            }\n\n            // =========================== Reload Category =========================== //\n            if(this.category !== category || this.type!== type || this.selectedChanged || this.color!=this.props.color){\n                // --------------------- Legend --------------------- //\n                this.legend     = [];\n                this.colors     = {};\n                var colorcode   = this.groups[category];\n\n                for(key in colorcode){\n                    var color = colorcode[key][\"color\"];\n                    var ColorCheckbox = withStyles({\n                            root: {\n                                color: color\n                            }\n                        })(props => <Checkbox color=\"default\" {...props} />);\n\n                    // No Grouping\n                    if(colorcode[key][\"members\"]===undefined){\n                        this.colors[key] = color;\n                        this.legend.push(\n                            <Row key={key} style={{margin:\"0\", alignItems:\"center\"}}>\n                                <ColorCheckbox\n                                    name={key}\n                                    checked={this.options.selectedKeys[key]}\n                                    onChange={this.checkBox}\n                                    value=\"checkedG\"\n                                />\n                                <div style={{maxWidth:\"80px\",wordWrap: \"break-word\"}}>{key}</div>\n                            </Row>\n                        )\n                    }\n                    // Has Grouping\n                    else{\n                        // Add all members of the group\n                        var checkboxes = [];\n                        for(var member in colorcode[key][\"members\"]){\n                            this.colors[colorcode[key][\"members\"][member]] = color;\n                            checkboxes.push(\n                                <Row key={colorcode[key][\"members\"][member]} style={{margin:\"0\", alignItems:\"center\"}}>\n                                    <ColorCheckbox\n                                        name={colorcode[key][\"members\"][member]}\n                                        checked={this.options.selectedKeys[colorcode[key][\"members\"][member]]}\n                                        onChange={this.checkBox}\n                                        value=\"checkedG\"\n                                    />\n                                    <div style={{width:\"80px\",wordWrap: \"break-word\"}}>\n                                        {colorcode[key][\"members\"][member]}\n                                    </div>\n                                </Row>\n                            )\n                        }\n            \n                        this.legend.push(\n                            <Row key={key} style={{margin:\"0\", alignItems:\"center\"}}>\n                                <div style={{wordWrap: \"break-word\",width:\"100%\"}}>{key}</div>\n                                {checkboxes}\n                            </Row>\n                        );\n                    }\n                }\n                this.selectedChanged = true;\n            }\n\n            // =========================== Reload Selected =========================== //\n            if(this.selectedChanged || this.normchanged || this.varchanged){ \n                this.filteredData       = [];\n                this.filteredColors     = [];\n                \n                var temp_years_index    = Object.keys(this.data[Object.keys(this.data)[0]]);\n                var years_index         = {};\n                for(i in temp_years_index){\n                    years_index[temp_years_index[i]] = i;\n                }\n\n                // filter\n                for(key in this.options.selectedKeys){\n                    if(this.options.selectedKeys[key]){\n                        var t_entry = this.data[key];\n                        var normalizedEntry = {data:[],id:key};\n\n                        // normalize data\n                        for(var t_year in t_entry){\n\n                            var t_value         = t_entry[t_year];\n                            var t_index         = years_index[t_year];\n                            if(this.normalizer !== \"None\"){\n                                var t_normalizer    = this.normalizerdata[key][t_year];\n                                if(t_normalizer!==undefined && t_normalizer!==0 && t_normalizer!==0.0){\n                                    normalizedEntry[\"data\"][t_index] = {\n                                        \"x\": t_year,\n                                        \"y\": t_value / t_normalizer\n                                    };\n                                }else{\n                                    normalizedEntry[\"data\"][t_index] = {\n                                        \"x\": t_year,\n                                        \"y\": null\n                                    };\n                                }\n                            }else{\n                                normalizedEntry[\"data\"][t_index] = {\n                                    \"x\": t_year,\n                                    \"y\": t_value\n                                };\n                            }\n\n\n                        }\n\n                        this.filteredData.push(normalizedEntry);\n                        this.filteredColors.push(this.colors[key]);\n                    }\n                }\n            }\n\n            this.category           = category;\n            this.selectedChanged    = false;\n            this.normchanged        = false;\n            this.varchanged         = false;\n            this.type               = type;\n            this.color              = this.props.color;\n            var title               = this.variable + \" / \"+ this.normalizer;\n            if(this.normalizer===\"None\") title = this.variable\n\n            return (\n                    <div>\n                        <Row style={{width:\"100%\", margin:\"0\", padding:\"0\"}}>\n\n                            {/* // =========================== Graph =========================== // */}\n                            <div style={{height:\"600px\", width:\"77%\"}}>\n                                {<LineGraph\n                                            data    = {this.filteredData} \n                                            stacked = {stacked} \n                                            area    = {stacked}\n                                            curve   = {curve}\n                                            title   = {title}\n                                            colors  = {this.filteredColors}/>}\n                            </div>\n                    \n                            {/* // =========================== Options =========================== // */}\n                            <div style={{height:\"600px\", width:\"23%\", padding:'2%', overflowY: \"scroll\"}}>\n\n                                {/* // --------------------------- Stacked --------------------------- // */}\n                                <Row style={{display:'flex',paddingLeft:\"10%\", marginBottom: \"5%\"}}>\n                                    <Switch onColor     = \"#222429\" \n                                            onChange    = {() => {this.changeInput(\"stacked\")}} \n                                            checked     = {stacked}\n                                            value       = {stacked} />\n                                    <div style={{marginLeft:\"4%\", fontFamily:\"Verdana\"}}>Stacked</div>\n                                </Row>\n                                <br />\n\n                                {/* // --------------------------- Curve --------------------------- // */}\n                                <div>\n                                    <InputLabel shrink htmlFor=\"curve-label-placeholder\">\n                                    Curve Type\n                                    </InputLabel>\n                                    <Select\n                                        style       = {{width:\"100%\"}}\n                                        value       = {curve}\n                                        onChange    = {this.changeInput}\n                                        input       = {<Input name=\"curve\" id=\"curve-label-placeholder\" />}\n                                        name        = \"curve\"\n                                        displayEmpty\n                                    >\n                                        <MenuItem value={'cardinal'}>Curved</MenuItem>\n                                        <MenuItem value={'linear'}  >Linear</MenuItem>\n                                    </Select>\n                                </div>\n                                <br/>\n\n                                {/* // --------------------------- Categorize --------------------------- // */}\n                                <div>\n                                    <InputLabel shrink htmlFor=\"categorize-label-placeholder\">\n                                    Categorize\n                                    </InputLabel>\n                                    <Select\n                                        style       = {{width:\"100%\"}}\n                                        value       = {category}\n                                        onChange    = {this.changeInput}\n                                        input       = {<Input name=\"categorize\" id=\"categorize-label-placeholder\" />}\n                                        name        = \"category\"\n                                        displayEmpty\n                                    >\n                                        <MenuItem value={\"None\"}>None</MenuItem>\n                                        {this.categoryItems}\n                                    </Select>\n                                </div>\n                                <br />\n\n                                {/* // --------------------------- Legend --------------------------- // */}\n                                <div>\n                                    <div style={{\n                                                display         : \"inline-table\",\n                                                width           : \"100%\",\n                                                minWidth        : \"100%\",\n                                                whiteSpace      : \"nowrap\",\n                                                borderRadius    : \"2px\",\n                                                fontFamily      : \"Georgia\"\n                                            }}>\n                                        {this.legend}\n                                    </div>\n                                </div>\n                            </div>\n                    </Row>\n                </div>\n            );\n        }\n        return null;\n    }\n}","import React, { useState, useEffect } from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { Bar } from '@nivo/bar';\nimport {Row} from 'reactstrap';\nimport PlayIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport Fab from '@material-ui/core/Fab';\nimport { withStyles } from '@material-ui/core/styles';\n\n\n// styling slider to make mark bigger\nconst styles = {\n    mark :{\n        width:\"2px\",\n        height:\"5px\",\n        backgroundColor:\"blue\"\n    }\n}\nconst StyledSlider = withStyles(styles)(Slider);\n\n\n// custom bar component, label inside\nconst BarComponent = props => {\n    var txt = null;\n\n    // set color if grouped\n    var _color = props.data.data._color;\n    if(props.data.data._byIndex){\n        _color = props.color\n    }\n\n    // if bar too small for text\n    if(15*props.data.id.toString().length < props.width && 15*2 < props.height){\n        txt= [<text\n            key={props.data.data.id.toString()+props.data.id.toString()+\"id\"}\n            x={props.width - 16}\n            y={props.height / 2 - 8}\n            textAnchor=\"end\"\n            dominantBaseline=\"central\"\n            fill=\"black\"\n            style={{\n            fontWeight: 900,\n            fontSize: 15,\n            }}\n        >\n            {props.data.id}\n        </text>,\n        <text\n            key={props.data.data.id.toString()+props.data.id.toString()+\"val\"}\n            x={props.width - 16}\n            y={props.height / 2 + 10}\n            textAnchor=\"end\"\n            dominantBaseline=\"central\"\n            fill={\"rgb(0,0,0)\"}\n            style={{\n            fontWeight: 400,\n            fontSize: 13,\n            }}\n        >\n            {props.data.value}\n        </text>]\n    }\n    return (\n        <g transform={`translate(${props.x},${props.y})`}>\n            <rect   x={-3} y={7} width={props.width} height={props.height} \n                    fill=\"rgba(0, 0, 0, .07)\" />\n            <rect   width={props.width} height={props.height} fill={_color} \n                    style={{strokeWidth:2, stroke:\"rgb(0,0,0)\"}} />\n            <rect   x={props.width - 5} width={5} height={props.height} \n                    fill={\"rgb(0,0,0)\"} fillOpacity={0.2} />\n            {txt}\n        </g>\n    );\n};\n\nconst Sample = (props) => {\n\n    const dataGenerator = props.data;\n    var groupMode = \"grouped\";\n    if(props.groupMode){\n        groupMode = \"stacked\";\n    }\n    const [current, setCurrent] = useState([0,0]);\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if(current[1]){\n                setCurrent([(current[0] + 1)%dataGenerator.length,current[1]]);\n            }\n        }, 1400);\n        return () => clearTimeout(timer);\n    }, [current, setCurrent]);\n\n    if(current[0] >= props.data.length){\n        current[0] = props.data.length-1;\n    }\n\n    var barData = [];\n    if(props.ranking===\"top\"){\n        barData = dataGenerator[current[0]][1].sort((a, b) => a._total-b._total);\n    }else{\n        barData = dataGenerator[current[0]][1].sort((a, b) => b._total-a._total);\n    }\n    barData = barData.slice(dataGenerator[current[0]][1].length-props.numberOfItems);\n\n    return (\n        <>\n            <div id=\"dp-graphdiv\" style={{width:\"700px\",height:\"500px\"}}>\n                <Bar\n                    barComponent={BarComponent}\n                    width={700}\n                    height={500}\n                    data={barData}\n                    keys={props.pkeys}\n                    indexBy=\"id\"\n                    colorBy=\"id\"\n                    margin={{ top: 50, right: 60, bottom: 50, left: 80 }}\n                    padding={0.3}\n                    groupMode={groupMode}\n                    layout=\"horizontal\"\n                    // colors={\"\"}\n                    borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                    axisTop={null}\n                    axisRight={null}\n                    axisBottom={{\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: props.title,\n                        legendPosition: 'middle',\n                        legendOffset: 32\n                    }}\n                    enableGridX={false}\n                    enableGridY={false}\n                    axisLeft={{\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legendPosition: 'middle',\n                        legendOffset: -40\n                    }}\n                    labelSkipWidth={12}\n                    labelSkipHeight={12}\n                    labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                    animate={true}\n                    motionStiffness={90}\n                    motionDamping={15}\n                />\n            </div>\n        \n            {/* ----------------------------------- Year ----------------------------------- */}\n            <h2 style={{ marginLeft: 60, fontWeight: 400, color: '#555', textAlign:\"center\" }}>\n                <strong style={{ color: 'black', fontWeight: 900 }}>{dataGenerator[current[0]][0]}</strong>\n            </h2>\n\n            {/* --------------------------  Player and Progress Bar-------------------------- */}\n            <Row style={{margin:0, padding:0, alignItems:\"center\"}}>\n                <Fab onClick={()=>{setCurrent([(current[0] - current[1]+1)%dataGenerator.length,1-current[1]])}}\n                    size=\"medium\" aria-label=\"Add\" style={{marginLeft:50}}>\n                    {[<PlayIcon />,<PauseIcon />][current[1]]}\n                </Fab>\n                \n                <StyledSlider value={current[0]}\n                        style={{width:550, marginLeft:30}}\n                        aria-labelledby=\"discrete-slider\"\n                        step={1}\n                        onChange={(event, newValue)=>{setCurrent([newValue,current[1]])}}\n                        marks\n                        min={0}\n                        max={dataGenerator.length-1}/>\n            </Row>\n        </>\n    );\n};\n\nexport default Sample;","/*\n    Notes:\n    - Group and Category are the same thing\n\n*/\n\nimport React, {Component} from 'react';\nimport { Row} from 'reactstrap';\nimport BarGraph from './RaceBar.js'\nimport Switch from \"react-switch\";\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport linear_colors from '../../../data/Numerical.json';\nimport $ from 'jquery';\n\nconst maxInitalKeys   = 40;\n\nexport default class BarFrame extends Component {\n\n    constructor(props){\n        super(props);\n        this.options = {\n            category        : \"None\",\n            stacked         : true,\n            selectedKeys    : {},\n            ranking         : \"top\",\n            numberOfItems   : 4\n        }\n\n        this.data               = {};\n        this.topicIndex         = -1;\n        this.type               = \"\";\n        this.category           = \"None\";\n        this.categoryItems      = [];\n\n        this.legend             = [];\n        this.colors             = {};\n        this.groups             = {};\n        this.filteredData       = [];\n        this.filteredColors     = [];\n        this.selectedChanged    = false;\n        // this.normalizedData     = {};\n\n        this.changeInput        = this.changeInput.bind(this);\n        this.checkBox           = this.checkBox.bind(this);\n        this.set                = this.set.bind(this);\n        this.setNormalizer      = this.setNormalizer.bind(this);\n        this.done1              = false;\n        this.done2              = false;\n        this.normchanged        = false;\n        this.varchanged         = false;\n        this.changedMul         = undefined;\n        this.storage            = this.props.storage;\n    }\n\n\n    // ============================ Input Handlers ========================== //\n    checkBox(event, checked){\n        this.options.selectedKeys[event.target.name] = checked;\n        this.selectedChanged = true;\n        this.setState({});\n    }\n\n    changeInput(event){\n        if(event===\"stacked\"){\n            this.options.stacked = !this.options.stacked;\n        }else{\n            if( event.target.name===\"normalizer\" && \n                this.options[event.target.name] !== event.target.value){\n                this.selectedChanged = true;\n            }\n            this.options[event.target.name] = event.target.value;\n        }\n        this.setState({});\n    }\n    // ====================================================================== //\n\n    setNormalizer(data){\n        this.normalizerdata = data;\n        this.done2 = true;\n\n        this.normalizer     = this.props.normalizer;\n        this.normchanged    = true;\n\n        this.setState({});\n    }\n\n    set(data,i){\n         \n        this.data[this.props.mul[i]] = data;\n        this.done1[i] = true;\n\n        this.variable       = this.props.variable;\n        this.varchanged     = true;\n\n        this.setState({});\n    }\n\n    \n    render(){\n\n\n        // ============================ General ========================== //\n        var i = 0;      // array index\n        var ct = 0;     // counter\n        var key = \"\";   // object key\n\n        if(this.changedMul !== this.props.changedMul){\n            this.changedMul = this.props.changedMul;\n            this.done1 = [];\n            this.data = {};\n            // $.ajax({\n            //     url: \"https://54.219.61.146:5000/new/get/\"+this.props.topicIndex,\n            //     context: document.body,\n            //     crossDomain: true\n            // }).done(this.set);\n            for(i in this.props.mul){\n                if(!this.storage.hasOwnProperty(this.props.mul[i])){\n                    this.done1.push(false);\n                    console.log(\"One\");\n                    var nData = require(\n                        \"../../../data/new/get/\" + this.props.topicIndex+\n                        \"/\" + this.props.type +\n                        \"/\"+ this.props.mul[i] +\n                        \".json\")\n                    this.storage[this.props.mul[i]] = nData;\n                    this.set(nData,i);\n                }else this.set(this.storage[this.props.mul[i]],i);\n            }\n        }\n        \n        if(this.normalizer !== this.props.normalizer){\n            if(!this.storage.hasOwnProperty(this.props.normalizer)){\n                this.done2 = false;\n                if(this.props.normalizer!==\"None\"){\n                    // $.ajax({\n                    //     url: \"https://54.219.61.146:5000/new/get/\"+this.props.topicIndex,\n                    //     context: document.body,\n                    //     crossDomain: true\n                    // }).done(this.set);\n                    var nData = require(\n                        \"../../../data/new/get/\" + this.props.topicIndex+\n                        \"/\" + this.props.type +\n                        \"/\"+ this.props.normalizer +\n                        \".json\");\n                    this.storage[this.props.normalizer] = nData;\n                    this.setNormalizer(nData);\n                }else{\n                    this.setNormalizer(\"None\");\n                }\n            }else this.setNormalizer(this.storage[this.props.normalizer]);\n        }\n\n        // check if all variables are read\n        this.done = true;\n        for(i=0; i<this.props.mul.length; i++){\n            if(this.done1[i]!==true){\n                this.done=false;\n                break;\n            }\n        }\n\n        if(this.done && this.done2 && Object.keys(this.data).length!==0){\n\n            // ============================= Init ============================= //\n            var stacked         = this.options[\"stacked\"];\n            var category        = this.options[\"category\"];\n            var type            = this.props.type;\n            var colorType       = this.props.colorType;\n            var firstVar        = Object.keys(this.data)[0];\n            var numberOfItems   = this.options[\"numberOfItems\"];\n            var ranking         = this.options[\"ranking\"];\n\n            /*\n            // ------------------- Group Menu ------------------- //\n            this.categoryItems = [];\n            for(key in groupingdata){\n                this.categoryItems.push(\n                    <MenuItem key={key} value={key}>{key}</MenuItem>\n                );\n            }*/\n\n            // =========================== Reload Type =========================== //\n            if(this.type !== type){\n\n                // ------------------ Selected Keys ------------------ //\n                this.options[\"selectedKeys\"] = {};\n                ct = 0;\n                for(key in this.data[firstVar]){\n                    this.options[\"selectedKeys\"][key] = ((ct++ % maxInitalKeys === 0) && ct!==1);\n                }\n\n                this.options[\"category\"] = \"None\";\n                category = this.options[\"category\"];\n            }\n\n            if(this.type !== type || this.color!=this.props.color){\n                this.groups = {};\n                if(colorType === \"Numerical\"){\n                    var vItems = Object.keys(this.data[firstVar]);\n\n                    this.groups[\"None\"] = {};\n                    for(i in vItems){\n                        this.groups[\"None\"][vItems[i]] = {\n                            \"color\": linear_colors[this.props.color][Math.floor(i/vItems.length*1000)]\n                        };\n                    }\n                }\n            }\n\n            // =========================== Reload Category =========================== //\n            if(this.category !== category || this.type!== type || this.selectedChanged || this.color!=this.props.color){\n                // --------------------- Legend --------------------- //\n                this.legend     = [];\n                this.colors     = {};\n                var colorcode   = this.groups[category];\n                if(category===\"_items\") colorcode = this.groups[\"None\"];\n\n                for(key in colorcode){\n                    var color = colorcode[key][\"color\"];\n                    var ColorCheckbox = withStyles({\n                            root: {\n                                color: color\n                            }\n                        })(props => <Checkbox color=\"default\" {...props} />);\n\n                    // No Grouping\n                    if(colorcode[key][\"members\"]===undefined){\n                        this.colors[key] = color;\n                        this.legend.push(\n                            <Row key={key} style={{margin:\"0\", alignItems:\"center\"}}>\n                                <ColorCheckbox\n                                    name={key}\n                                    checked={this.options.selectedKeys[key]}\n                                    onChange={this.checkBox}\n                                    value=\"checkedG\"\n                                />\n                                <div style={{maxWidth:\"80px\",wordWrap: \"break-word\"}}>{key}</div>\n                            </Row>\n                        )\n                    }\n                    // Has Grouping\n                    else{\n                        // Add all members of the group\n                        var checkboxes = [];\n                        for(var member in colorcode[key][\"members\"]){\n                            this.colors[colorcode[key][\"members\"][member]] = color;\n                            checkboxes.push(\n                                <Row key={colorcode[key][\"members\"][member]} style={{margin:\"0\", alignItems:\"center\"}}>\n                                    <ColorCheckbox\n                                        name={colorcode[key][\"members\"][member]}\n                                        checked={this.options.selectedKeys[colorcode[key][\"members\"][member]]}\n                                        onChange={this.checkBox}\n                                        value=\"checkedG\"\n                                    />\n                                    <div style={{width:\"80px\",wordWrap: \"break-word\"}}>\n                                        {colorcode[key][\"members\"][member]}\n                                    </div>\n                                </Row>\n                            )\n                        }\n            \n                        this.legend.push(\n                            <Row key={key} style={{margin:\"0\", alignItems:\"center\"}}>\n                                <div style={{wordWrap: \"break-word\",width:\"100%\"}}>{key}</div>\n                                {checkboxes}\n                            </Row>\n                        );\n                    }\n                }\n                this.selectedChanged = true;\n            }\n\n            // =========================== Reload Selected =========================== //\n            if(this.selectedChanged || this.normchanged || this.varchanged){ \n                this.filteredColors = [];\n                this.filteredData   = [];\n                var firstItem = Object.keys(this.data[firstVar])[0];\n                var temp_years_index = Object.keys(this.data[firstVar][firstItem]);\n                var years_index = {};\n\n                for(key in temp_years_index){\n                    years_index[temp_years_index[key]] = key;\n                    this.filteredData[key] = [temp_years_index[key],[]]; \n                }\n\n                // filter\n                for(key in this.options.selectedKeys){\n                    if(this.options.selectedKeys[key]){\n\n                        // normalize data\n                        for(var t_year in years_index){\n\n                            var normalizedEntry = {\n                                \"id\" : key\n                            };\n\n                            var t_index         = years_index[t_year];\n                            var t_sum           = 0;\n                            var t_normalizer    = 1;\n                            if(this.normalizer !== \"None\") t_normalizer = this.normalizerdata[key][t_year];\n                            \n                            for(var item in this.data){\n                                var n_entry = this.data[item][key][t_year] / t_normalizer;\n                                if(!Number.isNaN(n_entry)){\n                                    normalizedEntry[item] = n_entry;\n                                    t_sum += normalizedEntry[item];\n                                }else{\n                                    normalizedEntry[item] = 0;\n                                }\n                            }\n                            \n                            normalizedEntry[\"_total\"]   = t_sum;\n                            normalizedEntry[\"_byIndex\"] = (category) === \"None\";\n                            normalizedEntry[\"_color\"]   = this.colors[key];\n\n                            this.filteredData[t_index][1].push(normalizedEntry);\n\n                        }\n                    }\n                }\n            }\n\n            this.category           = category;\n            this.selectedChanged    = false;\n            this.normchanged        = false;\n            this.varchanged         = false;\n            this.type               = type;\n            var title               = this.variable + \" / \"+ this.normalizer;\n            if(this.normalizer===\"None\") title = this.variable\n\n            return (\n                    <div>\n                        <Row style={{width:\"100%\", margin:\"0\", padding:\"0\"}}>\n\n                            {/* // =========================== Graph =========================== // */}\n                            <div style={{height:\"600px\", width:\"77%\"}}>\n                                {<BarGraph\n                                    data            = {this.filteredData} \n                                    groupMode       = {stacked}\n                                    title           = {title}\n                                    pkeys           = {this.props.mul}\n                                    numberOfItems   = {numberOfItems}\n                                    ranking         = {ranking}\n                                />}\n                            </div>\n                    \n                            {/* // =========================== Options =========================== // */}\n                            <div style={{height:\"600px\", width:\"23%\", padding:'2%', overflowY: \"scroll\"}}>\n\n                                {/* // --------------------------- Stacked --------------------------- // */}\n                                <Row style={{display:'flex',paddingLeft:\"10%\", marginBottom: \"5%\"}}>\n                                    <Switch onColor     = \"#222429\" \n                                            onChange    = {() => {this.changeInput(\"stacked\")}} \n                                            checked     = {stacked}\n                                            value       = {stacked} />\n                                    <div style={{marginLeft:\"4%\", fontFamily:\"Verdana\"}}>Stacked</div>\n                                </Row>\n                                <br />\n\n                                {/* // --------------------------- Categorize --------------------------- // */}\n                                <div>\n                                    <InputLabel shrink htmlFor=\"categorize-label-placeholder\">\n                                    Categorize\n                                    </InputLabel>\n                                    <Select\n                                        style       = {{width:\"100%\"}}\n                                        value       = {category}\n                                        onChange    = {this.changeInput}\n                                        input       = {<Input name=\"categorize\" id=\"categorize-label-placeholder\" />}\n                                        name        = \"category\"\n                                        displayEmpty\n                                    >\n                                        <MenuItem value={\"None\"}>By Variable</MenuItem>\n                                        <MenuItem value={\"_items\"}>By Item</MenuItem>\n                                        {this.categoryItems}\n                                    </Select>\n                                </div>\n                                <br />\n\n                                {/* // --------------------------- Top/Bottom --------------------------- // */}\n                                <div style={{width:\"100%\"}}>\n                                    <InputLabel shrink htmlFor=\"ranking-label-placeholder\">\n                                    Ranking\n                                    </InputLabel>\n                                    <Select\n                                        style       = {{width:\"60%\"}}\n                                        value       = {ranking}\n                                        onChange    = {this.changeInput}\n                                        input       = {<Input name=\"ranking\" id=\"ranking-label-placeholder\" />}\n                                        name        = \"ranking\"\n                                        displayEmpty\n                                    >\n                                        <MenuItem value={\"top\"}>Top</MenuItem>\n                                        <MenuItem value={\"bottom\"}>Bottom</MenuItem>\n                                    </Select>\n                                    <Select\n                                        style       = {{width:\"39%\",marginLeft:\"1%\"}}\n                                        value       = {numberOfItems}\n                                        onChange    = {this.changeInput}\n                                        input       = {<Input name=\"numberOfItems\" id=\"numberOfItems-label-placeholder\" />}\n                                        name        = \"numberOfItems\"\n                                        displayEmpty\n                                    >\n                                        <MenuItem value={1}>1</MenuItem>\n                                        <MenuItem value={2}>2</MenuItem>\n                                        <MenuItem value={3}>3</MenuItem>\n                                        <MenuItem value={4}>4</MenuItem>\n                                    </Select>\n                                </div>\n                                <br />\n\n                                {/* // --------------------------- Legend --------------------------- // */}\n                                <div>\n                                    <div style={{\n                                                display         : \"inline-table\",\n                                                width           : \"100%\",\n                                                minWidth        : \"100%\",\n                                                whiteSpace      : \"nowrap\",\n                                                borderRadius    : \"2px\",\n                                                fontFamily      : \"Georgia\"\n                                            }}>\n                                        {this.legend}\n                                    </div>\n                                </div>\n                            </div>\n                    </Row>\n                </div>\n            );\n        }\n        return null;\n    }\n}","import React, { useState, useEffect } from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { ResponsiveScatterPlot } from '@nivo/scatterplot'\nimport {Row} from 'reactstrap';\nimport PlayIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport Fab from '@material-ui/core/Fab';\nimport { withStyles } from '@material-ui/core/styles';\n\n// styling slider to make mark bigger\nconst styles = {\n    mark :{\n        width:\"2px\",\n        height:\"5px\",\n        backgroundColor:\"blue\"\n    }\n}\nconst StyledSlider = withStyles(styles)(Slider);\n\nconst Scatter = (props) => {\n\n    const dataGenerator = props.dataGenerator;\n    const [current, setCurrent] = useState([0,0]);\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if(current[1]){\n                setCurrent([(current[0] + 1)%dataGenerator.length,current[1]]);\n            }\n        }, 1400);\n        return () => clearTimeout(timer);\n    }, [current, setCurrent]);\n\n    if(current[0] >= props.dataGenerator.length){\n        current[0] = props.dataGenerator.length-1;\n    }\n\n    return (\n        <>\n        \n            <div style={{width:'100%',height:\"500px\"}} id=\"dp-graphdiv\" position=\"relative\">\n        \n                \n\n                <ResponsiveScatterPlot\n                    style={{zIndex: 1}}\n                    data={dataGenerator[current[0]][1]}\n                    useMesh={false}\n                    margin={{ top: 60, right: 60, bottom: 70, left: 90 }}\n                    xScale={{ type: 'linear', min: 'auto', max: 'auto' }}\n                    // xFormat={function(e){return e+\" kg\"}}\n                    yScale={{ type: 'linear', min: 'auto', max: 'auto' }}\n                    // yFormat={function(e){return e+\" cm\"}}\n                    colors={props.colors[current[0]]}\n                    blendMode=\"multiply\"\n                    axisTop={null}\n                    axisRight={null}\n                    axisBottom={{\n                        orient: 'bottom',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: -25,\n                        legend: props.titleX,\n                        legendPosition: 'middle',\n                        legendOffset: 60\n                    }}\n                    axisLeft={{\n                        orient: 'left',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: props.titleY,\n                        legendPosition: 'middle',\n                        legendOffset: -60\n                    }}\n                    tooltip={({ node }) => {\n                        return(\n                        <div\n                          style={{\n                            color: node.style.color,\n                            background: 'white',\n                            border: '2px solid #333',\n                            borderRadius: \"5px\",\n                            padding: '12px 16px',\n                          }}\n                        >\n                          <strong>\n                            {node.data.serieId}\n                          </strong>\n                          <br />\n                          {`${props.titleX}: ${node.data.formattedX}`}\n                          <br />\n                          {`${props.titleY}: ${node.data.formattedY}`}\n                        </div>\n                      )}}\n                />\n            </div>\n\n            {/* ----------------------------------- Year ----------------------------------- */}\n            <h2 style={{ \n                    // position:\"absolute\",\n                    // top: this.parent().offet(),\n                    zIndex: 0,\n                    marginLeft: 60, \n                    fontWeight: 400, \n                    color: '#555', \n                    textAlign:\"center\" }}>\n                    <strong style={{ color: 'black', fontWeight: 900 }}>{dataGenerator[current[0]][0]}</strong>\n                </h2>\n\n            {/* --------------------------  Player and Progress Bar-------------------------- */}\n            <Row style={{margin:0, padding:0, alignItems:\"center\"}}>\n                <Fab onClick={()=>{setCurrent([(current[0] - current[1]+1)%dataGenerator.length,1-current[1]])}}\n                    size=\"medium\" aria-label=\"Add\" style={{marginLeft:50}}>\n                    {[<PlayIcon />,<PauseIcon />][current[1]]}\n                </Fab>\n                \n                <StyledSlider value={current[0]}\n                        style={{width:550, marginLeft:30}}\n                        aria-labelledby=\"discrete-slider\"\n                        step={1}\n                        onChange={(event, newValue)=>{setCurrent([newValue,current[1]])}}\n                        marks\n                        min={0}\n                        max={dataGenerator.length-1}/>\n            </Row>\n        </>\n    );\n};\n\nexport default Scatter;","/*\n    Notes:\n    - Group and Category are the same thing\n\n*/\n\nimport React, {Component} from 'react';\nimport { Row} from 'reactstrap';\nimport ScatterGraph from './ScatterGraph.js'\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport linear_colors from '../../../data/Numerical.json';\nimport $ from 'jquery';\n\nconst maxInitalKeys   = 1;\n\nexport default class ScatterFrame extends Component {\n\n    constructor(props){\n        super(props);\n        this.options = {\n            category        : \"None\",\n            curve           : \"cardinal\",\n            stacked         : true,\n            selectedKeys    : {}\n        }\n\n        this.data               = undefined;\n        this.topicIndex         = -1;\n        this.type               = \"\";\n        this.category           = \"None\";\n        this.categoryItems      = [];\n\n        this.legend             = [];\n        this.colors             = {};\n        this.groups             = {};\n        this.filteredData       = [];\n        this.filteredColors     = [];\n        this.selectedChanged    = false;\n        // this.normalizedData     = {};\n\n        this.changeInput        = this.changeInput.bind(this);\n        this.checkBox           = this.checkBox.bind(this);\n        this.set                = this.set.bind(this);\n        this.setY               = this.setY.bind(this);\n        this.setNormalizer      = this.setNormalizer.bind(this);\n        this.setNormalizerY     = this.setNormalizerY.bind(this);\n        this.done1              = false;\n        this.done2              = false;\n        this.done1Y             = false;\n        this.done2Y             = false;\n        this.normchanged        = false;\n        this.varchanged         = false;\n    }\n\n\n    // ============================ Input Handlers ========================== //\n    checkBox(event, checked){\n        this.options.selectedKeys[event.target.name] = checked;\n        this.selectedChanged = true;\n        this.setState({});\n    }\n\n    changeInput(event){\n        if(event===\"stacked\"){\n            this.options.stacked = !this.options.stacked;\n        }else{\n            if( event.target.name===\"normalizer\" && \n                this.options[event.target.name] !== event.target.value){\n                this.selectedChanged = true;\n            }\n            this.options[event.target.name] = event.target.value;\n        }\n        this.setState({});\n    }\n    // ====================================================================== //\n\n    setNormalizerY(data){\n        this.normalizerdataY = data;\n        this.done2Y = true;\n\n        this.normalizerY     = this.props.normalizerY;\n        this.normchanged    = true;\n\n        this.setState({});\n    }\n\n    setNormalizer(data){\n        this.normalizerdata = data;\n        this.done2 = true;\n\n        this.normalizer     = this.props.normalizer;\n        this.normchanged    = true;\n\n        this.setState({});\n    }\n\n    setY(data){\n         \n        this.dataY = data;\n        this.done1Y = true;\n\n        this.variableY       = this.props.variableY;\n        this.varchanged      = true;\n\n        this.setState({});\n    }\n\n    set(data){\n         \n        this.data = data;\n        this.done1 = true;\n\n        this.variable       = this.props.variable;\n        this.varchanged     = true;\n\n        this.setState({});\n    }\n\n    \n    render(){\n        if(this.variable !== this.props.variable){\n            this.done1 = false;\n            // $.ajax({\n            //     url: \"https://54.219.61.146:5000/new/get/\"+this.props.topicIndex,\n            //     context: document.body,\n            //     crossDomain: true\n            // }).done(this.set);\n            this.set(require(\n                \"../../../data/new/get/\" + this.props.topicIndex+\n                \"/\" + this.props.type +\n                \"/\"+ this.props.variable +\n                \".json\"));\n\n        }\n\n        if(this.variableY !== this.props.variableY){\n            this.done1Y = false;\n            // $.ajax({\n            //     url: \"https://54.219.61.146:5000/new/get/\"+this.props.topicIndex,\n            //     context: document.body,\n            //     crossDomain: true\n            // }).done(this.set);\n            this.setY(require(\n                \"../../../data/new/get/\" + this.props.topicIndex+\n                \"/\" + this.props.type +\n                \"/\"+ this.props.variableY +\n                \".json\"));\n\n        }\n        \n        if(this.normalizer !== this.props.normalizer){\n            if(!this.storage.hasOwnProperty(this.props.normalizer)){\n                this.done2 = false;\n                if(this.props.normalizer!==\"None\"){\n                    // $.ajax({\n                    //     url: \"https://54.219.61.146:5000/new/get/\"+this.props.topicIndex,\n                    //     context: document.body,\n                    //     crossDomain: true\n                    // }).done(this.set);\n                    var nData = require(\n                        \"../../../data/new/get/\" + this.props.topicIndex+\n                        \"/\" + this.props.type +\n                        \"/\"+ this.props.normalizer +\n                        \".json\");\n                    this.storage[this.props.normalizer] = nData;\n                    this.setNormalizer(nData);\n                }else{\n                    this.setNormalizer(\"None\");\n                }\n            }else this.setNormalizer(this.storage[this.props.normalizer]);\n        }\n\n        if(this.normalizerY !== this.props.normalizerY){\n            if(!this.storage.hasOwnProperty(this.props.normalizerY)){\n                this.done2 = false;\n                if(this.props.normalizerY!==\"None\"){\n                    // $.ajax({\n                    //     url: \"https://54.219.61.146:5000/new/get/\"+this.props.topicIndex,\n                    //     context: document.body,\n                    //     crossDomain: true\n                    // }).done(this.set);\n                    var nData = require(\n                        \"../../../data/new/get/\" + this.props.topicIndex+\n                        \"/\" + this.props.type +\n                        \"/\"+ this.props.normalizerY +\n                        \".json\");\n                    this.storage[this.props.normalizerY] = nData;\n                    this.setNormalizerY(nData);\n                }else{\n                    this.setNormalizerY(\"None\");\n                }\n            }else this.setNormalizerY(this.storage[this.props.normalizerY]);\n        }\n\n        if(this.done1 && this.done2 && this.done1Y && this.done2Y){\n\n            // ============================ General ========================== //\n            var i = 0;      // array index\n            var ct = 0;     // counter\n            var key = \"\";   // object key\n\n            // ============================= Init ============================= //\n            var category        = this.options[\"category\"];\n            var type            = this.props.type;\n            var colorType       = this.props.colorType;\n\n            /*\n            // ------------------- Group Menu ------------------- //\n            this.categoryItems = [];\n            for(key in groupingdata){\n                this.categoryItems.push(\n                    <MenuItem key={key} value={key}>{key}</MenuItem>\n                );\n            }*/\n\n            // =========================== Reload Type =========================== //\n            if(this.type !== type){\n\n                // ------------------ Selected Keys ------------------ //\n                this.options[\"selectedKeys\"] = {};\n                ct = 0;\n                for(key in this.data){\n                    this.options[\"selectedKeys\"][key] = ((ct++ % maxInitalKeys === 0) && ct!==1);\n                }\n\n                this.options[\"category\"] = \"None\";\n                category = this.options[\"category\"];\n            }\n\n            if(this.type != type || this.color!=this.props.color){\n                this.groups = {};\n                if(colorType === \"Numerical\"){\n                    var vItems = Object.keys(this.data);\n\n                    this.groups[\"None\"] = {};\n                    for(i in vItems){\n                        this.groups[\"None\"][vItems[i]] = {\n                            \"color\": linear_colors[this.props.color][Math.floor(i/vItems.length*1000)]\n                        };\n                    }\n                }\n            }\n\n            // =========================== Reload Category =========================== //\n            if(this.category !== category || this.type!== type || this.selectedChanged || this.color!=this.props.color){\n                // --------------------- Legend --------------------- //\n                this.legend     = [];\n                this.colors     = {};\n                var colorcode   = this.groups[category];\n\n                for(key in colorcode){\n                    var color = colorcode[key][\"color\"];\n                    var ColorCheckbox = withStyles({\n                            root: {\n                                color: color\n                            }\n                        })(props => <Checkbox color=\"default\" {...props} />);\n\n                    // No Grouping\n                    if(colorcode[key][\"members\"]===undefined){\n                        this.colors[key] = color;\n                        this.legend.push(\n                            <Row key={key} style={{margin:\"0\", alignItems:\"center\"}}>\n                                <ColorCheckbox\n                                    name={key}\n                                    checked={this.options.selectedKeys[key]}\n                                    onChange={this.checkBox}\n                                    value=\"checkedG\"\n                                />\n                                <div style={{maxWidth:\"80px\",wordWrap: \"break-word\"}}>{key}</div>\n                            </Row>\n                        )\n                    }\n                    // Has Grouping\n                    else{\n                        // Add all members of the group\n                        var checkboxes = [];\n                        for(var member in colorcode[key][\"members\"]){\n                            this.colors[colorcode[key][\"members\"][member]] = color;\n                            checkboxes.push(\n                                <Row key={colorcode[key][\"members\"][member]} style={{margin:\"0\", alignItems:\"center\"}}>\n                                    <ColorCheckbox\n                                        name={colorcode[key][\"members\"][member]}\n                                        checked={this.options.selectedKeys[colorcode[key][\"members\"][member]]}\n                                        onChange={this.checkBox}\n                                        value=\"checkedG\"\n                                    />\n                                    <div style={{width:\"80px\",wordWrap: \"break-word\"}}>\n                                        {colorcode[key][\"members\"][member]}\n                                    </div>\n                                </Row>\n                            )\n                        }\n            \n                        this.legend.push(\n                            <Row key={key} style={{margin:\"0\", alignItems:\"center\"}}>\n                                <div style={{wordWrap: \"break-word\",width:\"100%\"}}>{key}</div>\n                                {checkboxes}\n                            </Row>\n                        );\n                    }\n                }\n                this.selectedChanged = true;\n            }\n\n            // =========================== Reload Selected =========================== //\n            if(this.selectedChanged || this.normchanged || this.varchanged){ \n                this.filteredData   = [];\n                this.filteredColors = [];\n                var temp_years_index    = Object.keys(this.data[Object.keys(this.data)[0]]);\n                var years_index         = {};\n                for(i in temp_years_index){\n                    var year = temp_years_index[i];\n                    years_index[year] = i;\n                    this.filteredData[i] = [year,[]]; \n                    this.filteredColors.push([]);\n                }\n\n                // filter\n                for(key in this.options.selectedKeys){\n                    if(this.options.selectedKeys[key]){\n\n                        // normalize data\n                        for(var t_year in years_index){\n\n                            var normalizedEntry = {data:[],id:key};\n                            var t_index         = years_index[t_year];\n                            var t_normalized   = this.data[key][t_year];\n                            var t_normalizedY    = this.dataY[key][t_year];\n\n                            if(this.normalizer !== \"None\"){\n                                t_normalized /= this.normalizerdata[key][t_year];\n                                \n                            }\n\n                            if(this.normalizerY !== \"None\"){\n                                t_normalizedY /= this.normalizerdataY[key][t_year];\n                            }\n\n                            if(!Number.isNaN(t_normalized) && !Number.isNaN(t_normalizedY)\n                                && t_normalized!==null && t_normalizedY!==null\n                                && t_normalized!==undefined && t_normalizedY!==undefined){\n                                normalizedEntry[\"data\"].push( {\n                                    \"x\": t_normalized,\n                                    \"y\": t_normalizedY\n                                });\n\n                                \n\n                                this.filteredData[t_index][1].push(normalizedEntry);\n                                this.filteredColors[t_index].push(this.colors[key]);\n                            }\n                        }\n                    }\n                }\n            }\n\n            this.category           = category;\n            this.selectedChanged    = false;\n            this.normchanged        = false;\n            this.varchanged         = false;\n            this.type               = type;\n            var title               = this.variable + \" / \"+ this.normalizer;\n            if(this.normalizer===\"None\") title = this.variable\n            var titleY              = this.variableY + \" / \"+ this.normalizerY;\n            if(this.normalizerY===\"None\") titleY = this.variableY\n\n            return (\n                    <div>\n                        <Row style={{width:\"100%\", margin:\"0\", padding:\"0\"}}>\n\n                            {/* // =========================== Graph =========================== // */}\n                            <div style={{height:\"600px\", width:\"77%\"}}>\n                                {<ScatterGraph\n                                        titleX={title}\n                                        titleY={titleY}\n                                        dataGenerator={this.filteredData}\n                                        colors={this.filteredColors}\n                                    />}\n                            </div>\n                    \n                            {/* // =========================== Options =========================== // */}\n                            <div style={{height:\"600px\", width:\"23%\", padding:'2%', overflowY: \"scroll\"}}>\n\n                                {/* // --------------------------- Categorize --------------------------- // */}\n                                <div>\n                                    <InputLabel shrink htmlFor=\"categorize-label-placeholder\">\n                                    Categorize\n                                    </InputLabel>\n                                    <Select\n                                        style       = {{width:\"100%\"}}\n                                        value       = {category}\n                                        onChange    = {this.changeInput}\n                                        input       = {<Input name=\"categorize\" id=\"categorize-label-placeholder\" />}\n                                        name        = \"category\"\n                                        displayEmpty\n                                    >\n                                        {this.categoryItems}\n                                        <MenuItem value={\"None\"}>None</MenuItem>\n                                    </Select>\n                                </div>\n                                <br />\n\n                                {/* // --------------------------- Legend --------------------------- // */}\n                                <div>\n                                    <div style={{\n                                                display         : \"inline-table\",\n                                                width           : \"100%\",\n                                                minWidth        : \"100%\",\n                                                whiteSpace      : \"nowrap\",\n                                                borderRadius    : \"2px\",\n                                                fontFamily      : \"Georgia\"\n                                            }}>\n                                        {this.legend}\n                                    </div>\n                                </div>\n                            </div>\n                    </Row>\n                </div>\n            );\n        }\n        return null;\n    }\n}","import React, {Component} from 'react';\nimport LineFrame from './Charts/Timeline/LineFrame.js'\nimport BarFrame from './Charts/Bar/BarFrame.js'\nimport ScatterFrame from './Charts/Scatter/ScatterFrame.js'\nimport {Row} from 'reactstrap';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport $ from 'jquery';\n\nexport default class TypeTabs extends Component {\n\n    constructor(props){\n        super(props);\n        this.data = {};\n        this.set = this.set.bind(this);\n        this.state = {\n            typeIndex: \"\",\n            variable:\"\",\n            variableY:\"\",\n            mul:[],\n            color:\"jet\",\n            normalizer:\"None\",\n            normalizerY:\"None\",\n            changedMul:false};\n        this.handleChange = this.handleChange.bind(this);\n        this.keys = [];\n        this.type = null;\n        this.variables = [];\n        this.variablesMenu = [];\n    }\n\n    get(newstate){\n        // $.ajax({\n        //     url: \"https://54.219.61.146:5000/new/list\",\n        //     context: document.body,\n        //     crossDomain: true\n        // }).done(this.set);\n        this.topicIndex = this.props.topicIndex;\n        this.set(require(\"../data/new/get/\"+this.props.topicIndex+\"/metadata.json\").list);\n    }\n\n    handleChange(event) {\n        var newV = event.target.value;\n        var name = event.target.name;\n        if(name === \"typeIndex\"){\n            this.variables = this.data[newV].variables;\n            var i = 0;\n            if(this.variables.length>1) i=1;\n            this.setState({\n                typeIndex: newV,\n                variable:this.variables[0],\n                variableY:this.variables[i],\n                mul:[this.variables[0]],\n                changedMul:!this.state.changedMul,\n                color:\"jet\",\n                normalizer:\"None\",\n                normalizerY:\"None\"});\n        } else {\n            var obj = {};\n            obj[name] = newV;\n            if(name===\"mul\") obj[\"changedMul\"] = !this.state.changedMul;\n            this.setState(obj);\n        }\n    }\n\n\n    set(types){\n        this.data = types;\n        this.keys  = Object.keys(types);\n        this.handleChange({target:{name:\"typeIndex\",value:this.keys[0]}});\n    }\n\n    reload(){\n        // $.ajax({\n        //     url: \"https://54.219.61.146:5000/new/list\",\n        //     context: document.body,\n        //     crossDomain: true\n        // }).done(this.set);\n        this.topicIndex = this.props.topicIndex;\n        this.set(require(\"../data/new/get/\"+this.props.topicIndex+\"/metadata.json\").list);\n    }\n\n\n    render(){\n        if(this.topicIndex !== this.props.topicIndex){\n            this.reload();\n            return null;\n        }\n        else{\n            this.graph = [\n                <LineFrame \n                    topicIndex={this.props.topicIndex} \n                    variable={this.state.variable} \n                    normalizer={this.state.normalizer} \n                    type={this.state.typeIndex}\n                    colorType={this.data[this.state.typeIndex].Type}\n                    color={this.state.color}\n                    storage={this.props.storage}\n                    />,\n                <BarFrame \n                    topicIndex={this.props.topicIndex} \n                    mul={this.state.mul} \n                    normalizer={this.state.normalizer} \n                    type={this.state.typeIndex}\n                    colorType={this.data[this.state.typeIndex].Type}\n                    changedMul={this.state.changedMul}\n                    color={this.state.color}\n                    storage={this.props.storage}\n                    />,\n                <ScatterFrame \n                    topicIndex={this.props.topicIndex} \n                    variable={this.state.variable} \n                    variableY={this.state.variableY} \n                    normalizer={this.state.normalizer} \n                    normalizerY={this.state.normalizerY} \n                    type={this.state.typeIndex}\n                    color={this.state.color}\n                    storage={this.props.storage}\n                    colorType={this.data[this.state.typeIndex].Type} />,\n                // <LineFrame topicIndex={this.props.topicIndex}/>,\n                null,null,null,null\n            ][this.props.graphIndex];\n\n            var w = \"50%\";\n            var dY = \"none\";\n            var varTitle = \"Variable\";\n            var x = \"variable\";\n            var mul = false;\n            var h = \"40px\";\n            var mulw = 60;\n            if(this.props.graphIndex === 2){\n                w = \"33%\";\n                mulw = 80;\n                dY = \"initial\";\n                varTitle = \"Variable X\";\n            }else if(this.props.graphIndex === 1){\n                varTitle = \"Variables (select multiple)\";\n                mulw = 190;\n                x = \"mul\";\n                mul = true;\n            }\n\n            return (\n                <div style={{\n                    flexGrow: 1,\n                    width: '100%',\n                    backgroundColor: \"white\",\n                }}>\n                    <Row style={{padding:\"0\",margin:\"0\",width:\"100%\",alignItems:\"center\"}}>\n                        {/* // --------------------------- Type & Color --------------------------- // */}\n                        <div style={{width:w, padding:\"10px\"}}>\n                            <FormControl variant=\"outlined\" style={{width:\"100%\",marginTop:\"10px\"}}>\n                                <InputLabel shrink htmlFor=\"typeIndex-label-placeholder\">\n                                Points\n                                </InputLabel>\n                                <Select\n                                    style       = {{width:\"100%\",height:h}}\n                                    value       = {this.state.typeIndex}\n                                    onChange    = {this.handleChange}\n                                    input       = {<OutlinedInput\n                                                    name=\"typeIndex\" \n                                                    labelWidth={45}\n                                                    id=\"typeIndex-label-placeholder\" />}\n                                    name        = \"typeIndex\"\n                                    displayEmpty\n                                >\n                                    {this.keys.map(key => (\n                                        <MenuItem key={key} value={key}>\n                                            {key}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                            <FormControl variant=\"outlined\" style={{width:\"100%\",marginTop:\"10px\"}}>\n                                <InputLabel shrink htmlFor=\"color-label-placeholder\">\n                                Color Map\n                                </InputLabel>\n                                <Select\n                                    style       = {{width:\"100%\",height:h}}\n                                    value       = {this.state.color}\n                                    onChange    = {this.handleChange}\n                                    input       = {<OutlinedInput\n                                                    name=\"color\" \n                                                    labelWidth={80}\n                                                    id=\"color-label-placeholder\" />}\n                                    name        = \"color\"\n                                    displayEmpty\n                                >\n                                    {[\"jet\",\"cool\",\"hot\"].map(key => (\n                                        <MenuItem key={key} value={key}>\n                                            {key}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        {/* // --------------------------- Variable --------------------------- // */}\n                        <div style={{width:w, padding:\"10px\"}}>\n                            <FormControl variant=\"outlined\" style={{width:\"100%\",marginTop:\"10px\"}}>\n                                <InputLabel shrink htmlFor=\"variable-label-placeholder\">\n                                {varTitle}\n                                </InputLabel>\n                                <Select\n                                    multiple    = {mul}\n                                    style       = {{width:\"100%\",height:h}}\n                                    value       = {this.state[x]}\n                                    onChange    = {this.handleChange}\n                                    input       = {<OutlinedInput\n                                                    name={x}\n                                                    labelWidth={mulw}\n                                                    id=\"variable-label-placeholder\" />}\n                                    name        = {x}\n                                    displayEmpty\n                                >\n                                    {this.variables.map(key => (\n                                        <MenuItem key={key} value={key}>\n                                            {key}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                {React.useRef}\n                            </FormControl>\n                            <FormControl variant=\"outlined\" style={{width:\"100%\",marginTop:\"10px\"}}>\n                                <InputLabel shrink htmlFor=\"normalizer-label-placeholder\">\n                                Normalizer\n                                </InputLabel>\n                                <Select\n                                    style       = {{width:\"100%\",height:h}}\n                                    value       = {this.state.normalizer}\n                                    onChange    = {this.handleChange}\n                                    input       = {<OutlinedInput\n                                                    name=\"normalizer\" \n                                                    labelWidth={82}\n                                                    id=\"normalizer-label-placeholder\" />}\n                                    name        = \"normalizer\"\n                                >\n                                    <MenuItem key={\"None\"} value={\"None\"}> \n                                        None\n                                    </MenuItem>\n                                    {this.variables.map(key => (\n                                        <MenuItem key={key} value={key}>\n                                            {key}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        {/* // --------------------------- Variable Y (Scatter) --------------------------- // */}\n                        <div style={{width:w, padding:\"10px\",display:dY}}>\n                            <FormControl variant=\"outlined\" style={{width:\"100%\",marginTop:\"10px\"}}>\n                                <InputLabel shrink htmlFor=\"variableY-label-placeholder\">\n                                Variable Y\n                                </InputLabel>\n                                <Select\n                                    style       = {{width:\"100%\",height:h}}\n                                    value       = {this.state.variableY}\n                                    onChange    = {this.handleChange}\n                                    input       = {<OutlinedInput\n                                                    name=\"variableY\" \n                                                    labelWidth={mulw}\n                                                    id=\"variableY-label-placeholder\" />}\n                                    name        = \"variableY\"\n                                    displayEmpty\n                                >\n                                    {this.variables.map(key => (\n                                        <MenuItem key={key} value={key}>\n                                            {key}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                            <FormControl variant=\"outlined\" style={{width:\"100%\",marginTop:\"10px\"}}>\n                                <InputLabel shrink htmlFor=\"normalizerY-label-placeholder\">\n                                Normalizer\n                                </InputLabel>\n                                <Select\n                                    style       = {{width:\"100%\",height:h}}\n                                    value       = {this.state.normalizerY}\n                                    onChange    = {this.handleChange}\n                                    input       = {<OutlinedInput\n                                                    name=\"normalizerY\" \n                                                    labelWidth={82}\n                                                    id=\"normalizerY-label-placeholder\" />}\n                                    name        = \"normalizerY\"\n                                >\n                                    <MenuItem key={\"None\"} value={\"None\"}> \n                                        None\n                                    </MenuItem>\n                                    {this.variables.map(key => (\n                                        <MenuItem key={key} value={key}>\n                                            {key}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <br/>\n                    </Row>\n                    {this.graph}\n                </div>\n            );\n        }\n    }\n}","import React, {Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport LineIcon from '@material-ui/icons/Timeline';\nimport BarIcon from '@material-ui/icons/Notes';\nimport ScatterIcon from '@material-ui/icons/ScatterPlot';\nimport MapIcon from '@material-ui/icons/Map';\nimport Button from '@material-ui/core/Button';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport htmlToImage from 'html-to-image';\nimport Topic from './Topic.js'\nimport { saveAs } from 'file-saver';\n\nconst graphTypes = [\"Line\", \"Bar\", \"Scatter\", \"Map\"];\nconst graphIcons = [<LineIcon />,<BarIcon />,<ScatterIcon />,<MapIcon />];\n\nexport default class Type extends Component {\n\n    constructor(props){\n        super(props);\n        this.state          = {graphIndex:0};\n        this.changeInnerTab = this.changeInnerTab.bind(this);\n        this.download = this.download.bind(this);\n        this.graphtabs      = [];\n\n        for(var i in graphTypes){\n            this.graphtabs.push(\n                <Tab \n                    key={graphTypes[i]} \n                    label={graphTypes[i]} \n                    icon={graphIcons[i]}/>\n            );\n        }\n        \n    }\n\n    download(){\n\n        htmlToImage.toBlob(document.getElementById('dp-graphdiv'))\n            .then(function (blob) {\n            window.saveAs(blob, 'graph.png');\n            }).catch(function (error) {\n                alert(\"Please download using Google Chrome\");\n            });\n\n        this.setState({});\n    }\n\n    changeInnerTab(event, newValue){\n        this.setState({graphIndex: newValue});\n    }\n\n    render(){\n\n        return (\n            <div style={{\n                flexGrow: 1,\n                width: '100%'\n            }}>\n\n                <AppBar position=\"static\">\n                    <Tabs\n                        TabIndicatorProps   = {{style: {backgroundColor: 'black'}}}\n                        value               = {this.state.graphIndex}\n                        onChange            = {this.changeInnerTab}\n                        variant             = \"scrollable\"\n                        scrollButtons       = \"on\"\n                        indicatorColor      = \"primary\"\n                        textColor           = \"inherit\"\n                        style               = {{background:\"gray\"}}\n                        >\n                    {this.graphtabs}\n                    </Tabs>\n                </AppBar>\n                \n                <Topic topicIndex={this.props.topicIndex} graphIndex={this.state.graphIndex} storage={this.props.storage}/>\n                <br />\n                \n                <div style={{width:\"100%\",textAlign:\"right\"}}>\n                        <Button onClick={this.download} variant=\"contained\" color=\"default\" style={{marginRight:\"30px\",marginBottom:\"20px\"}}>\n                            Download\n                            <CloudDownloadIcon style={{marginLeft:\"10px\"}}/>\n                        </Button>\n                    </div>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Type from './components/Type.js'\nimport $ from 'jquery';\n\nexport default class TopicTabs extends Component {\n\n    constructor(props){\n        super(props);\n        this.data = \"\";\n        this.set = this.set.bind(this);\n        this.state = {topicIndex: 0};\n        this.handleChange = this.handleChange.bind(this);\n        this.tabs = [];\n        this.topic = null;\n        this.storage = {};\n    }\n\n    set(projects){\n        this.projects = [];\n        this.tabs = [];\n        for(var i in projects){\n            this.projects.push(projects[i]);\n            this.tabs.push(\n                <Tab key={i.toString()+\"topic\"} label={projects[i]}/>\n            );\n        }\n        this.topic = <Type topicIndex={this.projects[0]} storage={this.storage}/>;\n        this.setState({});\n    }\n\n    componentDidMount(){\n        \n        // $.ajax({\n        //     url: \"http://54.219.61.146:5000/new/list\",\n        //     context: document.body\n        //     // crossDomain: false\n        // }).done(this.set);\n        // fetch(\"https://52.8.81.15:5000/new/list\")\n        // .then(response => {\n        //     return response.json()\n        // }).then(json => {\n        //     this.set(json)\n        // })\n        this.set(require(\"./data/new/list.json\"));\n    }\n\n    handleChange(event, newValue) {\n        if(this.state.topicIndex!==newValue){\n            this.topic = <Type topicIndex={this.projects[newValue]} storage={this.storage}/>;\n            this.setState({topicIndex: newValue});\n        }\n    }\n\n    render(){\n        return (\n            <div style={{\n                flexGrow: 1,\n                width: '100%',\n                backgroundColor: \"white\",\n            }}>\n                <AppBar \n                    position=\"static\" \n                    color=\"default\">\n                    <Tabs\n                    TabIndicatorProps={{style: {backgroundColor: 'black'}}}\n                    value={this.state.topicIndex}\n                    onChange={this.handleChange}\n                    variant=\"scrollable\"\n                    scrollButtons=\"on\"\n                    indicatorColor=\"primary\"\n                    textColor=\"inherit\"\n                    style={{background:\"#DDDDDD\"}}\n                    >\n                    {this.tabs}\n                    </Tabs>\n                </AppBar>\n                <div style={{border:\"5px solid transparent\"}}>\n                    {this.topic}\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('dataportalbody'));\n","var map = {\n\t\"./water/Basin/1980-2017_livestock_head_total.json\": 397,\n\t\"./water/Basin/1980-2017_livestock_tot_wat_consume.json\": 398,\n\t\"./water/metadata.json\": 234,\n\t\"./water_2/Basin/1980-2017_livestock_head_total.json\": 399,\n\t\"./water_2/Basin/1980-2017_livestock_tot_wat_consume.json\": 400,\n\t\"./water_2/metadata.json\": 235\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 66;"],"sourceRoot":""}